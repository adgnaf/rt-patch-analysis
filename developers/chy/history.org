* [2.6.22         ] i386-pit-stop-only-when-in-periodic-or-oneshot-mode.patch {C::bug::hwerr::time::hardware::add an "if" statement to config mode PERIODIC or ONESHOT specificly}
  + [[file:2.6.22/i386-pit-stop-only-when-in-periodic-or-oneshot-mode.patch][2.6.22]]  {MOD::arch/i386}
  - 2.6.23  {M}
* [2.6.22         ] clockevents-fix-device-replacement.patch {C::bug::hwerr::hardware::hardware::add an "else" statement to clear the tick_broadcast_mask when a higher rated device is used}
  + [[file:2.6.22/clockevents-fix-device-replacement.patch][2.6.22]]  {kernel}
  - 2.6.23  {M}
* [2.6.22         ] barrier - a scalable synchonisation barrier {C::performance::barrier::barrier_lock & barrier_lock[avoid cache bouncing]}
  + [[file:2.6.22/barrier.patch][2.6.22]]  {MOD::include/linux} {API::init_barrier, barrier_lock, barrier_sync}
  - 2.6.23  {D}
* [2.6.22         ] cpuidle_last_measured_004.patch  {C::performance::idle::add a counter of wakeup early, eliminate the state when threshold exceeded}
  + [[file:2.6.22/cpuidle_last_measured_004.patch][2.6.22]]  {MOD::drivers/cpuidle} {API::menu_select,menu_reflect,menu_scan_devic}
  - 2.6.23
* [2.6.22         ] i386-move-pit-function-declarations-and-constants-to-correct-header-file.patch {C::maintain::refactor}
  + [[file:2.6.22/i386-move-pit-function-declarations-and-constants-to-correct-header-file.patch][2.6.22]]  {MOD::arch/i386, include/asm-i386}
  - 2.6.23
* [2.6.22         ] cpuidle_add_support_for_max_cstate_limit.patch {C::feature::hardware::making max_cstate available}
  + [[file:2.6.22/cpuidle_add_support_for_max_cstate_limit.patch][2.6.22]]  {MOD::drivers/acpi}
  - 2.6.23
* [2.6.22         ] use-write_trylock_irqsave-in-ptrace_attach.patch {C::maintain::refactor::Use write_trylock_irqsave instead of write_trylock. And remove local_irq_disable things}
  + [[file:2.6.22/use-write_trylock_irqsave-in-ptrace_attach.patch][2.6.22]]  {MOD::kernel/}
  - 2.6.23
* [2.6.22         ] ntp-move-the-cmos-update-code-into-ntpc-fix.patch {C::bug::compile::compiling_err::syntax::add a header file}
  + [[file:2.6.22/ntp-move-the-cmos-update-code-into-ntpc-fix.patch][2.6.22]]  {MOD::include/linux}
  - 2.6.23
* [2.6.22         ] hrtimer-no-getnstimeofday.patch {C::performance::hrtimer::replace getnstimeofday with other functions}
  + [[file:2.6.22/hrtimer-no-getnstimeofday.patch][2.6.22]]  {MOD::kernel, include/linux}
  - 2.6.23
* [2.6.22         ] nohz-fix-nohz-x86-dyntick-idle-handling.patch {C::bug::crash::hardware::hardware::add cond-compile for some arch where tick nohz handling went wrong}
  + [[file:2.6.22/nohz-fix-nohz-x86-dyntick-idle-handling.patch][2.6.22]]   {MOD::arch/i386}
  - 2.6.23
* [2.6.22         ] clockevents-fix-resume-logic.patch {C::bug::idle::order::sync::resume clockevent device before resume tick}
  + [[file:2.6.22/clockevents-fix-resume-logic.patch][2.6.22]]   {MOD::arch/i386,arch/arm,arch/sh,arch/sparc64, kernel/time, include/linux}
  - 2.6.23
* [2.6.22         ] x86_64-fix-apic-typo.patch {C::maintain::donothing}
  + [[file:2.6.22/x86_64-fix-apic-typo.patch][2.6.22]]  {MOD::include/asm-x86_64}
  - 2.6.23
* [2.6.22         ] i386-remove-volatile-in-apicc.patch {C::maintain::refactor::remove volatile feature in static int var}
  + [[file:2.6.22/i386-remove-volatile-in-apicc.patch][2.6.22]] {MOD::arch/i386}
  - 2.6.23
* [2.6.22         ] slob-scale-break-out-caches.patch {C::performance::mm::use kmem_cache,remove global slobfree, anyway, implement some slab mechanism here again}
  + [[file:2.6.22/slob-scale-break-out-caches.patch][2.6.22]]  {MOD::mm}
  - 2.6.23
* [2.6.22         ] highres-improve-debug-output.patch {C::feature::debuginfo::debuginfo for hrtimer and clock events}
  + [[file:2.6.22/highres-improve-debug-output.patch][2.6.22]] {MOD::arch/i386, kernel}
  - 2.6.23
* [2.6.22         ] cpuidle_hang_fix.patch {C::bug::hang::order::sync::idle handler to enable intr before returning from idle handler, set current driver to NULL when fail to attach on all devices}
  + [[file:2.6.22/cpuidle_hang_fix.patch][2.6.22]]  {MOD::dirvers/cpuidle}
  - 2.6.23
* [2.6.22         ] cpuidle_governor_api_change.patch {C::feature::idle::add opt stage, and let the governor to ?reflect on some device}
  + [[file:2.6.22/cpuidle_governor_api_change.patch][2.6.22]]  {MOD::dirvers/cpuidle, include/linux}
  - 2.6.23
* [2.6.22         ] time-warp-detect.patch {C::feature::hrtimer::add wrap_check_clock_changed to set timestamp per online cpu 0, and means in fun __get_realtime_clock_ to detected time warp bug}
  + [[file:2.6.22/time-warp-detect.patch][2.6.22]]  {MOD::kernel,kernel/time, include/linux}
  - 2.6.23
* [2.6.22         ] preempt-realtime-gtod-fixups.patch {C::performance::irq::put read_persistent_clock() outside write_seqlock_irqsave/irqrestore}
  + [[file:2.6.22/preempt-realtime-gtod-fixups.patch][2.6.22]]  {MOD::kernel/time}
  - 2.6.23
* [2.6.22         ] highres-improve-debug-output-fix.patch {C::feature::debuginfo}
  + [[file:2.6.22/highres-improve-debug-output-fix.patch][2.6.22]]  {MOD::kernel/time}
  - 2.6.23
* [2.6.22         ] lockdep-prove-locking.patch {C::feature::debuginfo}
  + [[file:2.6.22/lockdep-prove-locking.patch][2.6.22]]  {MOD::kernel}
  - 2.6.23
* [2.6.22         ] v2.6.21.4-rt11 {C::bug::compile::config_err::config::add config, GENERIC_TIME is not supported in some arch, leading to compiling error}
  + [[file:2.6.22/disable-gtod-functions-if-gtod-is-not-there.patch][2.6.22]]  {MOD::kernel,kernel/time}
  - 2.6.23
* [2.6.22         ] spinlock-init-cleanup.patch {C::maintain::refactor::spin_lock_init}
  + [[file:2.6.22/spinlock-init-cleanup.patch][2.6.22]]  {MOD::drivers/pci}
  - 2.6.23
* [2.6.22         ] x86_64-use-generic-cmos-update.patch {C::maintain::refactor::set_rtc_mmss}
  + [[file:2.6.22/x86_64-use-generic-cmos-update.patch][2.6.22]]  {MOD::arch/x86_64}
  - 2.6.23
* [2.6.22         ] cpuidle_take2_hookup_acpi_c-states_driver_with_cpuidle.patch {C::maintain::refactor::establish a united API of acpi_driver, divide the cstate into many functions, make it better readable}
  + [[file:2.6.22/cpuidle_take2_hookup_acpi_c-states_driver_with_cpuidle.patch][2.6.22]]  {MOD::drivers/acpi}
  - 2.6.23
* [2.6.22         ] ntp-move-the-cmos-update-code-into-ntpc.patch {C::maintain::refactor::update_cmos_clock}
  + [[file:2.6.22/ntp-move-the-cmos-update-code-into-ntpc.patch][2.6.22]]  {MOD::arch/i386,arch/sparc64,include/asm-i386,kernel/time,include/linux}
  - 2.6.23
* [2.6.22         ] lockstat: core infrastructure {C::feature::statistics::lockstate}
  + [[file:2.6.22/lockstat-core.patch][2.6.22]]  {MOD::kernel,include/linux}
  - 2.6.23
* [2.6.22         ] lockstat: better class name representation {C::feature::debuginfo}
  + [[file:2.6.22/lockstat_class_name.patch][2.6.22]]  {MOD::kernel}
  - 2.6.23
* [2.6.22         ] cdrom-use-mdelay-instead-of-jiffies-loop.patch {C::performance::msleep}
  + [[file:2.6.22/cdrom-use-mdelay-instead-of-jiffies-loop.patch][2.6.22]]  {MOD::drivers/cdrom}
  - 2.6.23
* [2.6.22         ] cpuidle-fix-modular-build.patch {C::maintain::refactor::export module symbol}
  + [[file:2.6.22/cpuidle-fix-modular-build.patch][2.6.22]]  {MOD::kernel/time}
  - 2.6.23
* [2.6.22         ] s_files-per_cpu-flush-fix.patch {C::feature::delay::add an init fun for file flush}
  + [[file:2.6.22/s_files-per_cpu-flush-fix.patch][2.6.22]]  {MOD::fs}
  - 2.6.23
* [2.6.22         ] lockstat_bounce.patch {C::feature::statistics::state and measure lock bouncing}
  + [[file:2.6.22/lockstat_bounce.patch][2.6.22]]  {MOD::kernel, include/linux}
  - 2.6.23
* [2.6.22         ] module-pde-race-fixes.patch {C::bug::crash::order::sync::module reloaded when still need to be used, add a atomic counter to counting reads and writes in progress}
  + [[file:2.6.22/module-pde-race-fixes.patch][2.6.22]]  {MOD::fs/proc,include/linux}
  - 2.6.23
* [2.6.22         ] cpuidle_take2_core_cpuidle_infrastructure.patch {C::feature::idle::cpudile infrasturcture}
  + [[file:2.6.22/cpuidle_take2_core_cpuidle_infrastructure.patch][2.6.22]]  {MOD::drivers/cpuidle}
  - 2.6.23
* [2.6.22         ] x86_64-fix-irq-regs-leftovers.patch  {C::maintain::refactor}
  + [[file:2.6.22/x86_64-fix-irq-regs-leftovers.patch][2.6.22]]  {MOD::arch/x86_64}
  - 2.6.23
* [2.6.22         ] cpuidle_developer_switch_04.patch  {C::feature::debuginfo::cpudile infrasturcture}
  + [[file:2.6.22/cpuidle_developer_switch_04.patch][2.6.22]]  {MOD::drivers/cpuidle}
  - 2.6.23
* [2.6.22         ] clockevents-remove-prototypes-of-removed-functions.patch {C::maintain::refactor}
  + [[file:2.6.22/clockevents-remove-prototypes-of-removed-functions.patch][2.6.22]]  {MOD::include/linux|
  - 2.6.23
* [2.6.22         ] cpuidle_build_fix_cpuidle_vs_ipw2100_module.patch {C::maintain::refactor::export symbol}
  + [[file:2.6.22/cpuidle_build_fix_cpuidle_vs_ipw2100_module.patch][2.6.22]]  {MOD::drivers/acpi}
  - 2.6.23
* [2.6.22         ] hrtimer-speedup-hrtimer_enqueue.patch {C::performance::hrtimer::speedup hrtimer_enqueue}
  + [[file:2.6.22/hrtimer-speedup-hrtimer_enqueue.patch][2.6.22]]  {MOD::kernel}
  - 2.6.23
* [2.6.22         ] acpi-move-timer-broadcast-and-pmtimer-access-before-c3-arbiter-shutdown.patch {C::bug::hwerr::irq::hardware::check ARB_DIS status before reading from ICH deivce}
  + [[file:2.6.22/acpi-move-timer-broadcast-and-pmtimer-access-before-c3-arbiter-shutdown.patch][2.6.22]]  {MOD::drivers/acpi}
  - 2.6.23
* [2.6.22         ] lockdep_fixup_annotate.patch {C::feature::debuginfo::fixup annotation}
  + [[file:2.6.22/lockdep_fixup_annotate.patch][2.6.22]]  {MOD::net/core}
  - 2.6.23
* [2.6.22         ] x86_64-remove-now-useless-hpet-code.patch {C::maintain::refactor::remove code}
  + [[file:2.6.22/x86_64-remove-now-useless-hpet-code.patch][2.6.22]]  {MOD::arch/x86_64}
  - 2.6.23
* [2.6.22         ] net/input: fix net/rfkill/rfkill-input.c bug on 64-bit systems {C::bug::compile::typo_var::memory::irq flags must be unsigned long}
  + [[file:2.6.22/rfkill-input-fix.patch][2.6.22]]  {MOD::net/rfkill}
  - 2.6.23
* [2.6.22         ] mm-lockless-preempt-fixup.patch {C::bug::livelock::livelock::preempt::create/use new functions}
  + [[file:2.6.22/mm-lockless-preempt-fixup.patch][2.6.22]]  {MOD::inlcude/linux}
  - 2.6.23
* [2.6.22         ] x86_64-remove-dead-code-and-other-janitor-work-in-tscc.patch {C::maintain::refactor::remove unused code and var}
  + [[file:2.6.22/x86_64-remove-dead-code-and-other-janitor-work-in-tscc.patch][2.6.22]]  {MOD::arch/x86_64}
  - 2.6.23
* [2.6.22         ] hrt-rt-fix-merge-artifact.patch {C::maintain::refactor::merge}
  + [[file:2.6.22/hrt-rt-fix-merge-artifact.patch][2.6.22]]  {MOD::kernel/time}
  - 2.6.23
* [2.6.22         ] rt-mutex-spinlock-nested-export-fix.patch {C::maintain::refactor::export __spin_lock_irqsave_nested}
  + [[file:2.6.22/rt-mutex-spinlock-nested-export-fix.patch][2.6.22]]  {MOD::kernel}
  - 2.6.23
* [2.6.22         ] cpuidle_warning_fix_002.patch {C::bug::na::uninit_var::memory::initialize ret}
  + [[file:2.6.22/cpuidle_warning_fix_002.patch][2.6.22]]  {MOD::drivers/cpuidle}
  - 2.6.23
* [2.6.22         ] lockdep: variuos fixes {C::maintain::refactor::various update}
  + [[file:2.6.22/lockdep_fixups.patch][2.6.22]]  {MOD::include/linux}
  - 2.6.23
* [2.6.22         ] fork.c-takeover-tasklets-warning-fix.patch {C::maintain::refactor::header file add}
  + [[file:2.6.22/fork.c-takeover-tasklets-warning-fix.patch][2.6.22]]  {MOD::kernel}
  - 2.6.23
* [2.6.22         ] s_files-proc-generic-fix.patch {C::bug::na::order::sync::advance filevec_add_drain_all()}
  + [[file:2.6.22/s_files-proc-generic-fix.patch][2.6.22]]  {MOD::fs/proc}
  - 2.6.23
* [2.6.22         ] softlockup-print-regs.patch {C::feature::debuginfo::print regs debug info when kern dump}
  + [[file:2.6.22/softlockup-print-regs.patch][2.6.22]]  {MOD::kernel}
  - 2.6.23
* [2.6.22         ] sched-cfs-latest.patch {C::maintain::refactor}
  + [[file:2.6.22/sched-cfs-latest.patch][2.6.22]]  {MOD::kernel}
  - 2.6.23
* [2.6.22         ] clockevents-fix-typo-in-acpi_pmc.patch {C::maintain::refactor}
  + [[file:2.6.22/clockevents-fix-typo-in-acpi_pmc.patch][2.6.22]]  {MOD::drivers/clocksource}
  - 2.6.23
* [2.6.22         ] timerc-cleanup-recently-introduced-whitespace-damage.patch {C::maintain::refactor::replace some of whitespace with tab?}
  + [[file:2.6.22/timerc-cleanup-recently-introduced-whitespace-damage.patch][2.6.22]] {MOD::kernel}
  - 2.6.23
* [2.6.22         ] hpet-build-fix.patch  {C::maintain::refactor::add an existed header file}
  + [[file:2.6.22/hpet-build-fix.patch][2.6.22]] {MOD::arch/i386}
  - 2.6.23
* [2.6.22         ] sched-cfs-v2.6.22.1-v19.patch {C::feature::sched::cfs sched, update some comment, romove some var and fun, change typo, replace some fun}
  + [[file:2.6.22/sched-cfs-v2.6.22.1-v19.patch][2.6.22]] {MOD::kernel,fs/proc,arch/i386,block,init,include/linux, include/asm-generic}
  - 2.6.23
* [2.6.22         ] Clockevents remove clockevents_{release,request}_device {C::maintain::refactor::remove clockevents_release/request_device}
  + [[file:2.6.22/clockevents-remove-unused-code.patch][2.6.22]] {MOD::kernel/time}
  - 2.6.23
* [2.6.22         ] cpuidle_take2_basic_documentation_for_cpuidle.patch {C::maintain::donothing::documentation added}
  + [[file:2.6.22/cpuidle_take2_basic_documentation_for_cpuidle.patch][2.6.22]] {MOD::Documentation}
  - 2.6.23
* [2.6.22         ] cpuidle_governor_ratings_04.patch {C::feature::idle::governor rating scheme}
  + [[file:2.6.22/cpuidle_governor_ratings_04.patch][2.6.22]] {MOD::drivers//cpuidle,include/linux}
  - 2.6.23
* [2.6.22         ] cpuidle_1_bit_field_must_be_unsigned.patch {C::bug::na::typo_var::memory::1-bit field must be unsigned}
  + [[file:2.6.22/cpuidle_1_bit_field_must_be_unsigned.patch][2.6.22]] {MOD::drivers/cpuidle}
  - 2.6.23
* [2.6.22         ] lockstat: human readability tweaks {C::feature::statistics::lock_stat}
  + [[file:2.6.22/lockstat-output.patch][2.6.22]] {MOD::kernel}
  - 2.6.23
* [2.6.22         ] cpuidle_make_code_static.patch {C::maintain::refactor::make code static}
  + [[file:2.6.22/cpuidle_make_code_static.patch][2.6.22]] {MOD::drivers/cpuidle}
  - 2.6.23
* [2.6.22         ] arm-imx.patch {C::feature::timer::clockevent}
  + [[file:2.6.22/arm-imx.patch][2.6.22]] {MOD::arch/arm}
  - 2.6.23
* [2.6.22         ] slob-scale-no-bigblock-list.patch {C::performance::mm::use mem_map to track pages}
  + [[file:2.6.22/slob-scale-no-bigblock-list.patch][2.6.22]] {MOD::mm}
  - 2.6.23
* [2.6.22         ] cpuidle_add_menu_governor.patch {C::feature::idle::add 'menu' governor}
  + [[file:2.6.22/cpuidle_add_menu_governor.patch][2.6.22]] {MOD::drivers/cpuidle}
  - 2.6.23
* [2.6.22         ] new-softirq-code-fixlets.patch {C::bug::na::softirq::softirq::a condition err in if statement is fixed & some precompiling code added}
  + [[file:2.6.22/new-softirq-code-fixlets.patch][2.6.22]] {MOD::kernel}
  - 2.6.23
* [2.6.22         ] cpuidle_documentation_update_04.patch {C::maintain::donothing::documention}
  + [[file:2.6.22/cpuidle_documentation_update_04.patch][2.6.22]] {MOD::Documentation}
  - 2.6.23
* [2.6.22         ] cpuidle_fix_build_break.patch {C::bug::compile::config_err::config::fix build break}
  + [[file:2.6.22/cpuidle_fix_build_break.patch][2.6.22]] {MOD::drivers/cpuidle}
  - 2.6.23
* [2.6.22         ] x86_64-enable-high-resolution-timers-and-dynticks.patch {C::maintain::refactor::config}
  + [[file:2.6.22/x86_64-enable-high-resolution-timers-and-dynticks.patch][2.6.22]] {MOD::arch/x86_64}
  - 2.6.23
* [2.6.22         ] x86_64-i8259-remove-useless-forward-declaration.patch {C::maintain::refactor::rm fun}
  + [[file:2.6.22/x86_64-i8259-remove-useless-forward-declaration.patch][2.6.22]] {MOD::arch/x86_64}
  - 2.6.23
* [2.6.22         ] x86_64-share-hpet-h.patch {C::maintain::refactor::hpet.h, share same micro var}
  + [[file:2.6.22/x86_64-share-hpet-h.patch][2.6.22]] {MOD::include/asm--i386}
  - 2.6.23
* [2.6.22         ] mm-lockless-preempt-rt-fixup.patch {C::feature::rtsupport::cpu_relax, speculate page and check whether ref changed}
  + [[file:2.6.22/mm-lockless-preempt-rt-fixup.patch][2.6.22]] {MOD::include/linux}
  - 2.6.23
* [2.6.22         ] pcspkr-use-the-global-pit-lock.patch {C::maintain::refactor::replace private PIT lock with clobal PIT lock when CONFIG_X86}
  + [[file:2.6.22/pcspkr-use-the-global-pit-lock.patch][2.6.22]] {MOD::arch/x86_64,drivers/input,include/asm-x86_64}
  - 2.6.23
* [2.6.22         ] cpuidle_add_cpuidle_force_redetect_devices_api.patch {C::feature::idle::add functions}
  + [[file:2.6.22/cpuidle_add_cpuidle_force_redetect_devices_api.patch][2.6.22]] {MOD::drivers/acpi, drivers/cpuidle, include/linux}
  - 2.6.23
* [2.6.22         ] rtc.c-build-fix.patch {C::bug::compile::compiling_err::config}
  + [[file:2.6.22/rtc.c-build-fix.patch][2.6.22]] {MOD::drivers/char}
  - 2.6.23
* [2.6.22         ] radix-tree: gang_lookup_slot {C::feature::lockless::multiple slot lookup on radix tree}
  + [[file:2.6.22/radix-tree-gang_lookup_slot.patch][2.6.22]] {MOD::lib,include/linux}
  - 2.6.23
* [2.6.22         ] x86_64-apic-whitespace-comment-and-remove-unused-code.patch {C::maintain::refactor::add comment,remove code}
  + [[file:2.6.22/x86_64-apic-whitespace-comment-and-remove-unused-code.patch][2.6.22]] {MOD::arch/x86_64}
  - 2.6.23
* [2.6.22         ] futex-tidy-up-the-code-v2.patch {C::maintain::refactor::tidy code, reorganize some code piece into fun}
  + [[file:2.6.22/futex-tidy-up-the-code-v2.patch][2.6.22]] {MOD::kernel}
  - 2.6.23
* [2.6.22         ] menu_hrt_compile_fix_001.patch {C::maintain::refactor::compile, reorder header file}
  + [[file:2.6.22/menu_hrt_compile_fix_001.patch][2.6.22]] {MOD::drivers/cpuidle}
  - 2.6.23
* [2.6.22         ] lockstat: hook into spinlock_t, rwlock_t, rwsem and mutex {C::feature::statistics::new lockstat functions}
  + [[file:2.6.22/lockstat-hooks.patch][2.6.22]] {MOD::kernel}
  - 2.6.23
* [2.6.22         ] x86_64-convert-to-cleckevents.patch {C::maintain::refactor::share code of clockevent}
  + [[file:2.6.22/x86_64-convert-to-cleckevents.patch][2.6.22]] {MOD::arch/x86_64,include/asm-x86_64}
  - 2.6.23
* [2.6.22         ] keep_proc_acpi_power_around_001.patch {C::feature::timer::add a time interval val to cx->time?}
  + [[file:2.6.22/keep_proc_acpi_power_around_001.patch][2.6.22]] {MOD::drivers/acpi}
  - 2.6.23
* [2.6.22         ] i386-hpet-assumes-boot-cpu-is-0.patch {C::bug::crash::hardware::hardware::per_cpu var}
  + [[file:2.6.22/i386-hpet-assumes-boot-cpu-is-0.patch][2.6.22]] {MOD::arch/i386}
  - 2.6.23
* [2.6.22         ] ntp-move-the-cmos-update-code-into-ntpc-fix-fix.patch {C::maintain::refactor::compile}
  + [[file:2.6.22/ntp-move-the-cmos-update-code-into-ntpc-fix-fix.patch][2.6.22]] {MOD::include/linux}
  - 2.6.23
* [2.6.22         ] tick-management-spread-timer-interrupt.patch {C::performance::percpu_var::adds an extra offset per cpu so the ticks don't line up,drop lock contention}
  + [[file:2.6.22/tick-management-spread-timer-interrupt.patch][2.6.22]] {MOD::kernel/time}
  - 2.6.23
* [2.6.22         ] i386-hpet-check-if-the-counter-works.patch{C::bug::hang::hardware::hardware::Verify whether hpet counter works during HPET setup}
  + [[file:2.6.22/i386-hpet-check-if-the-counter-works.patch][2.6.22]]
  - 2.6.23
* [2.6.22         ] cpuidle_export_time_until_next_timer_interrupt_using_no_hz.patch {C::feature::idle::export time until next intr}
  + [[file:2.6.22/cpuidle_export_time_until_next_timer_interrupt_using_no_hz.patch][2.6.22]] {MOD::arch/i386,include/linux,kernel,kernel/time}
  - 2.6.23
* [2.6.22         ] preempt-realtime-drivers-pci-hotplug.patch {C::performance::mutex::rm lock/unlock_kernel}
  + [[file:2.6.22/preempt-realtime-drivers-pci-hotplug.patch][2.6.22]] {MOD::drivers/pci}
  - 2.6.23
* [2.6.22         ] x86_64-timec-fix-whitespace-wreckage.patch {C::maintain::donothing::rm whitespace}
  + [[file:2.6.22/x86_64-timec-fix-whitespace-wreckage.patch][2.6.22]] {MOD::arch/x86_64}
  - 2.6.23
* [2.6.22         ] timekeeping-fixup-shadow-variable-argument.patch {C::bug::compile::compiling_err::syntax::local var shadows global var}
  + [[file:2.6.22/timekeeping-fixup-shadow-variable-argument.patch][2.6.22]] {MOD::kernel/time}
  - 2.6.23
* [2.6.22         ] cpuidle_ladder_does_not_depend_on_ACPI.patch {C::bug::compile::compiling_err::syntax}
  + [[file:2.6.22/cpuidle_ladder_does_not_depend_on_ACPI.patch][2.6.22]] {MOD::drivers/cpuidle}
  - 2.6.23
* [2.6.22         ] s_files-per_cpu-rt.patch {C::performance::mutex::use get/put_cpu_var_locked to replace get/put_cpu_var}
  + [[file:2.6.22/s_files-per_cpu-rt.patch][2.6.22]] {MOD::fs}
  - 2.6.23
* [2.6.22         ] cpuidle_build_fix_for_not_CPU_IDLE.patch {C::bug::compile::config_err::config:: add CPU_IDLE config and functions}
  + [[file:2.6.22/cpuidle_build_fix_for_not_CPU_IDLE.patch][2.6.22]] {MOD::include/linux}
  - 2.6.23
* [2.6.22         ] cpuidle_fix_sysfs_related_issue.patch {C::bug::data_err::err_var::memory::complete/wait_for_completion&wrong type}
  + [[file:2.6.22/cpuidle_fix_sysfs_related_issue.patch][2.6.22]] {MOD::drivers/acpi,drivers/cpuidle,include/linux}
  - 2.6.23
* [2.6.22         ] cpuidle_fix_boot_hang.patch {C::bug::hang::semantics::idle::add detach fun in err path}
  + [[file:2.6.22/cpuidle_fix_boot_hang.patch][2.6.22]] {MOD::drivers/cpuidle}
  - 2.6.23
* [2.6.22         ] x86_64-untangle-asm-hpeth-from-asm-timexh.patch {C::maintain::refactor::compile}
  + [[file:2.6.22/x86_64-untangle-asm-hpeth-from-asm-timexh.patch][2.6.22]] {MOD::include/asm-x86_64,drivers/char}
  - 2.6.23
* [2.6.22         ] s_files-barrier.patch {C::bug::data_err::atomicity::mutex::barrier_lock/unlock}
  + [[file:2.6.22/s_files-barrier.patch][2.6.22]] {MOD::fs,include/linux}
  - 2.6.23
* [2.6.22 - 2.6.23] ich-force-hpet-ich5-fix-a-bug-with-suspend-resume.patch {C::bug::idle::hardware::hardware::nort, change site of statement}
  + [[file:2.6.22/ich-force-hpet-ich5-fix-a-bug-with-suspend-resume.patch][2.6.22]] {MOD::arch/i386}
    [[file:2.6.23/ich-force-hpet-ich5-fix-a-bug-with-suspend-resume.patch][2.6.23]]
  - 2.6.24
* [2.6.22 - 2.6.23] x86_64: prepare apic code for clock events {C::feature::timer::apic code for clockevent}
  + [[file:2.6.22/x86_64-preparatory-apic-set-lvtt.patch][2.6.22]] {MOD::arch/x86_64}
  M [[file:2.6.23/x86_64-preparatory-apic-set-lvtt.patch][2.6.23]]
  - 2.6.24
* [2.6.22 - 2.6.23] ich-force-hpet-late-initialization-of-hpet-after-quirk.patch {C::feature::hrtimer::enable HPET later during boot, repeat force hpet}
  + [[file:2.6.22/ich-force-hpet-late-initialization-of-hpet-after-quirk.patch][2.6.22]] {MOD::arch/i386,include/asm-i386}
  M [[file:2.6.23/ich-force-hpet-late-initialization-of-hpet-after-quirk.patch][2.6.23]]
  - 2.6.24
* [2.6.22 - 2.6.23] x86_64: prepare idle loop for dynamic ticks {C::feature::timer::add tick_nohz_stop/resart_sched_tick}
  + [[file:2.6.22/x86_64-prep-idle-loop-for-dynticks.patch][2.6.22]] {MOD::arch/x86_64}
    [[file:2.6.23/x86_64-prep-idle-loop-for-dynticks.patch][2.6.23]]
  - 2.6.24
* [2.6.22 - 2.6.23] i386: prepare sharing the hpet code with x86_64 {C::maintain::refactor::replace previous fun with shared hpet code}
  + [[file:2.6.22/i386-prepare-sharing-hpet-code.patch][2.6.22]] {MOD::arch/i386}
  M [[file:2.6.23/i386-prepare-sharing-hpet-code.patch][2.6.23]]
  - 2.6.24
* [2.6.22 - 2.6.23] ich-force-hpet-restructure-hpet-generic-clock-code.patch {C::maintain::refactor::hpet timer}
  + [[file:2.6.22/ich-force-hpet-restructure-hpet-generic-clock-code.patch][2.6.22]] {MOD::arch/i386}
    [[file:2.6.23/ich-force-hpet-restructure-hpet-generic-clock-code.patch][2.6.23]]
  - 2.6.24
* [2.6.22 - 2.6.23] ich-force-hpet-ich5-quirk-to-force-detect-enable.patch {C::feature::hrtimer::force enable hpet for ICH5}
  + [[file:2.6.22/ich-force-hpet-ich5-quirk-to-force-detect-enable.patch][2.6.22]] {MOD::arch/i386,include/asm-i386,include/linux}
  M [[file:2.6.23/ich-force-hpet-ich5-quirk-to-force-detect-enable.patch][2.6.23]]
  - 2.6.24
* [2.6.22 - 2.6.23] i386: prepare sharing the PIT code {C::maintain::refactor::compile}
  + [[file:2.6.22/i386-prepare-sharing-pit-code.patch][2.6.22]] {MOD::arch/i386,arch/x86_64,include/asm-i386,include/asm-x86_64}
  M [[file:2.6.23/i386-prepare-sharing-pit-code.patch][2.6.23]]
  - 2.6.24
* [2.6.22 - 2.6.23] preempt-rt-cs5530-lock-ide-fix.patch{C::bug::hang::irq::irq::replace spin_lock_riqsave/irqrestore to local_irq_save/restore}
  + [[file:2.6.22/preempt-rt-cs5530-lock-ide-fix.patch][2.6.22]] {MOD::drivers/ide}
    [[file:2.6.23/preempt-rt-cs5530-lock-ide-fix.patch][2.6.23]]
  - 2.6.24
* [2.6.22 - 2.6.23] ich-force-hpet-ich7-or-later-quirk-to-force-detect-enable-fix.patch {C::maintain::refactor::var type}
  + [[file:2.6.22/ich-force-hpet-ich7-or-later-quirk-to-force-detect-enable-fix.patch][2.6.22]] {MOD::arch/i386}
    [[file:2.6.23/ich-force-hpet-ich7-or-later-quirk-to-force-detect-enable-fix.patch][2.6.23]]
  - 2.6.24
* [2.6.22 - 2.6.23] realtime-lsm.patch {C::feature::capability::rt capabilities}
  + [[file:2.6.22/realtime-lsm.patch][2.6.22]] {MOD::security}
    [[file:2.6.23/realtime-lsm.patch][2.6.23]]
  - 2.6.24
* [2.6.22 - 2.6.23] ich-force-hpet-add-ich7_0-pciid-to-quirk-list.patch {C::feature::hardware::add PCI ID}
  + [[file:2.6.22/ich-force-hpet-add-ich7_0-pciid-to-quirk-list.patch][2.6.22]] {MOD::arch/i386}
    [[file:2.6.23/ich-force-hpet-add-ich7_0-pciid-to-quirk-list.patch][2.6.23]]
  - 2.6.24
* [2.6.22 - 2.6.23] Enable HPET on ICH3 and ICH4 {C::feature::hrtimer::radd undoc HPET capabilities}
  + [[file:2.6.22/hpet-force-enable-on-ich34.patch][2.6.22]] {MOD::arch/i386}
    [[file:2.6.23/hpet-force-enable-on-ich34.patch][2.6.23]]
  - 2.6.24
* [2.6.22 - 2.6.23] x86-64-smpboot-whitespace.patch {C::maintain::donothing}
  + [[file:2.6.22/x86-64-smpboot-whitespace.patch][2.6.22]] {MOD::arch/x86_64}
    [[file:2.6.23/x86-64-smpboot-whitespace.patch][2.6.23]]
  - 2.6.24
* [2.6.22 - 2.6.23] ACPI: remove the now unused ifdef code {C::maintain::refactor::rm unused code}
  + [[file:2.6.22/acpi-remove-the-useless-ifdef-code.patch][2.6.22]] {MOD::drivers/acpi}
    [[file:2.6.23/acpi-remove-the-useless-ifdef-code.patch][2.6.23]]
  - 2.6.24
* [2.6.22 - 2.6.23] ich-force-hpet-ich7-or-later-quirk-to-force-detect-enable.patch {C::feature::hrtimer::repeat force enable HPET}
  + [[file:2.6.22/ich-force-hpet-ich7-or-later-quirk-to-force-detect-enable.patch][2.6.22]] {MOD::arch/i386,include/asm-i386}
  M [[file:2.6.23/ich-force-hpet-ich7-or-later-quirk-to-force-detect-enable.patch][2.6.23]]
  - 2.6.24
* [2.6.22 - 2.6.23] Force enable HPET on VT8235/8237 chipsets {C::feature::hrtimer::add quirk to force enable HPET}
  + [[file:2.6.22/hpet-force-enable-on-vt8235-37-chipsets.patch][2.6.22]] {MOD::arch/i386}
    [[file:2.6.23/hpet-force-enable-on-vt8235-37-chipsets.patch][2.6.23]]
  - 2.6.24
* [2.6.22 - 2.6.23] i386: Remove the useless #ifdef in i8253.h {C::maintain::refactor::remove code}
  + [[file:2.6.22/i386-pit-remove-the-useless-ifdefs.patch][2.6.22]] {MOD::include/asm-i386}
  M [[file:2.6.23/i386-pit-remove-the-useless-ifdefs.patch][2.6.23]]
  - 2.6.24
* [2.6.22 - 2.6.23] ich-force-hpet-ich5-quirk-to-force-detect-enable-fix.patch {C::maintain::refactor::var type}
  + [[file:2.6.22/ich-force-hpet-ich5-quirk-to-force-detect-enable-fix.patch][2.6.22]] {MOD::arch/i386}
    [[file:2.6.23/ich-force-hpet-ich5-quirk-to-force-detect-enable-fix.patch][2.6.23]]
  - 2.6.24
* [2.6.22 - 2.6.23] x86_64: Consolidate tsc calibration {C::maintain::refactor::gather some functions together into one}
  + [[file:2.6.22/x86_64-consolidate-tsc-calibration.patch][2.6.22]] {MOD::arch/x86_64}
  M [[file:2.6.23/x86_64-consolidate-tsc-calibration.patch][2.6.23]]
  - 2.6.24
* [2.6.22 - 2.6.23] ich-force-hpet-make-generic-time-capable-of-switching-broadcast-timer.patch {C::feature::hrtimer::auto detect HPET, change to a higher rate one}
  + [[file:2.6.22/ich-force-hpet-make-generic-time-capable-of-switching-broadcast-timer.patch][2.6.22]] {MOD::kernel/time}
    [[file:2.6.23/ich-force-hpet-make-generic-time-capable-of-switching-broadcast-timer.patch][2.6.23]]
  - 2.6.24
* [2.6.22 - 2.6.24] inet_hash_bits.patch {C::feature::net::hash bits related functions}
  + [[file:2.6.22/inet_hash_bits.patch][2.6.22]] {MOD::mm,net/ipv4,include/net}
    [[file:2.6.23/inet_hash_bits.patch][2.6.23]]
  m [[file:2.6.24/inet_hash_bits.patch][2.6.24]]
  - 2.6.25
* [2.6.22 - 2.6.24] idle-stop-critical-timing.patch {C::feature::debuginfo::stop latency tracing in acpi_idle_do_entry}
  + [[file:2.6.22/idle-stop-critical-timing.patch][2.6.22]] {MOD::driver/acpi}
    [[file:2.6.23/idle-stop-critical-timing.patch][2.6.23]]
    [[file:2.6.24/idle-stop-critical-timing.patch][2.6.24]]
  - 2.6.25
* [2.6.22 - 2.6.24] mips-gtod_clocksource.patch {C::feature::timer::sync time}
  + [[file:2.6.22/mips-gtod_clocksource.patch][2.6.22]] {MOD::arch/mips}
    [[file:2.6.23/mips-gtod_clocksource.patch][2.6.23]]
  M [[file:2.6.24/mips-gtod_clocksource.patch][2.6.24]]
  - 2.6.25
* [2.6.22 - 2.6.24] Don't call mcount from vsyscall_fn's {C::bug::crash::err_access::semantics::add notrace to vsyscall_fn}
  + [[file:2.6.22/vsyscall-add-notrace.patch][2.6.22]] {MOD::include/asm-x86_64}
  m [[file:2.6.23/vsyscall-add-notrace.patch][2.6.23]]
    [[file:2.6.24/vsyscall-add-notrace.patch][2.6.24]]
  - 2.6.25
* [2.6.22 - 2.6.24] freeze with mcount_enabled=1 {C::bug::hang::deadlock::semantics::atomic_inc/dec tr->disabled}
  + [[file:2.6.22/latency-tracer-disable-across-trace-cmdline.patch][2.6.22]] {MOD::kernel}
    [[file:2.6.23/latency-tracer-disable-across-trace-cmdline.patch][2.6.23]]
    [[file:2.6.24/latency-tracer-disable-across-trace-cmdline.patch][2.6.24]]
  - 2.6.25
* [2.6.22 - 2.6.24] latency-tracing-x86_64.patch {C::feature::debuginfo::latency-tracing}
  + [[file:2.6.22/latency-tracing-x86_64.patch][2.6.22]] {MOD::arch/x86_64,include/asm-x86_64}
  M [[file:2.6.23/latency-tracing-x86_64.patch][2.6.23]]
  M [[file:2.6.24/latency-tracing-x86_64.patch][2.6.24]]
  - 2.6.25
* [2.6.22 - 2.6.24] change die_chain from atomic to raw notifiers {C::bug::irq::preempt::preempt::not NMI-safe,replace atomic_notifier_call_chain to raw_...}
  + [[file:2.6.22/rcu-preempt-fix-nmi-watchdog.patch][2.6.22]] {MOD::kernel}
    [[file:2.6.23/rcu-preempt-fix-nmi-watchdog.patch][2.6.23]]
    [[file:2.6.24/rcu-preempt-fix-nmi-watchdog.patch][2.6.24]]
  - 2.6.25
* [2.6.22 - 2.6.24] PowerPC: fix clockevents for classic CPUs {C::feature::timer::set a maximum positive value to decrementer, add a clk_event case}
  + [[file:2.6.22/ppc-clockevents-fix.patch][2.6.22]]
    [[file:2.6.23/ppc-clockevents-fix.patch][2.6.23]]
    [[file:2.6.24/ppc-clockevents-fix.patch][2.6.24]]
  - 2.6.25
* [2.6.22 - 2.6.24] convert RCU Preempt tasklet into softirq. {C::performance::softirq::replace tasklet with softirq}
  + [[file:2.6.22/rcu-tasklet-softirq.patch][2.6.22]]
    [[file:2.6.23/rcu-tasklet-softirq.patch][2.6.23]]
    [[file:2.6.24/rcu-tasklet-softirq.patch][2.6.24]]
  - 2.6.25
* [2.6.22 - 2.6.24] ppc-gtod-support.patch {C::feature::timer::convert powerpc time to generic timekeeping}
  + [[file:2.6.22/ppc-gtod-support.patch][2.6.22]]
  M [[file:2.6.23/ppc-gtod-support.patch][2.6.23]]
    [[file:2.6.24/ppc-gtod-support.patch][2.6.24]]
  - 2.6.25
* [2.6.22 - 2.6.24] undo-latency-tracing-raw-spinlock-hack.patch {C::maintain::refactor::rm macro}
  + [[file:2.6.22/undo-latency-tracing-raw-spinlock-hack.patch][2.6.22]]
  M [[file:2.6.23/undo-latency-tracing-raw-spinlock-hack.patch][2.6.23]]
    [[file:2.6.24/undo-latency-tracing-raw-spinlock-hack.patch][2.6.24]]
  - 2.6.25
* [2.6.22 - 2.6.24] PowerPC: enable HRT and dynticks support {C::feature::idle::enable HRT and dynamic ticks}
  + [[file:2.6.22/ppc-highres-dyntick.patch][2.6.22]]
    [[file:2.6.23/ppc-highres-dyntick.patch][2.6.23]]
    [[file:2.6.24/ppc-highres-dyntick.patch][2.6.24]]
  - 2.6.25
* [2.6.22 - 2.6.24] 2.6.21-rt6 {C::feature::rtsupport::add declaration rt_write_trylock_irqsave}
  + [[file:2.6.22/rt-mutex-trylock-export.patch][2.6.22]]
    [[file:2.6.23/rt-mutex-trylock-export.patch][2.6.23]]
  M [[file:2.6.24/rt-mutex-trylock-export.patch][2.6.24]]
  - 2.6.25
* [2.6.22 - 2.6.24] rcu-classic-fixup.patch {C::feature::rtsupport::add declaration rcu_batches_completed_bh}
  + [[file:2.6.22/rcu-classic-fixup.patch][2.6.22]]
    [[file:2.6.23/rcu-classic-fixup.patch][2.6.23]]
    [[file:2.6.24/rcu-classic-fixup.patch][2.6.24]]
  - 2.6.25
* [2.6.22 - 2.6.24] latency-tracer-one-off-fix.patch {C::bug::data_err::err_var::semantics::replace \eq with \geq}
  + [[file:2.6.22/latency-tracer-one-off-fix.patch][2.6.22]]
    [[file:2.6.23/latency-tracer-one-off-fix.patch][2.6.23]]
    [[file:2.6.24/latency-tracer-one-off-fix.patch][2.6.24]]
  - 2.6.25
* [2.6.22 - 2.6.24] fix clocksource_timebase.shift value {C::bug::data_err::config_err::config::call shift with jiffy}
  + [[file:2.6.22/ppc-fix-clocksource-timebase-shift.patch][2.6.22]]
    [[file:2.6.23/ppc-fix-clocksource-timebase-shift.patch][2.6.23]]
    [[file:2.6.24/ppc-fix-clocksource-timebase-shift.patch][2.6.24]]
  - 2.6.25
* [2.6.22 - 2.6.24] trace-sti-mwait.patch {C::feature::debuginfo::untrace preempt_idle when cpuidle}
  + [[file:2.6.22/trace-sti-mwait.patch][2.6.22]]
    [[file:2.6.23/trace-sti-mwait.patch][2.6.23]]
    [[file:2.6.24/trace-sti-mwait.patch][2.6.24]]
  - 2.6.25
* [2.6.22 - 2.6.24] rcu-2.patch {C::performance::softirq::replace tasklet with softirq}
  + [[file:2.6.22/rcu-2.patch][2.6.22]]
    [[file:2.6.23/rcu-2.patch][2.6.23]]
    [[file:2.6.24/rcu-2.patch][2.6.24]]
  - 2.6.25
* [2.6.22 - 2.6.24] trace-with-caller-addr.patch {C::feature::debuginfo::trace hardirq}
  + [[file:2.6.22/trace-with-caller-addr.patch][2.6.22]]
    [[file:2.6.23/trace-with-caller-addr.patch][2.6.23]]
  M [[file:2.6.24/trace-with-caller-addr.patch][2.6.24]]
  - 2.6.25
* [2.6.22 - 2.6.24] PowerPC: implement read_persistent_clock() {C::maintain::refactor::rename get_boot_time to read_persistent_clock}
  + [[file:2.6.22/ppc-read-persistent-clock.patch][2.6.22]]
  m [[file:2.6.23/ppc-read-persistent-clock.patch][2.6.23]]
    [[file:2.6.24/ppc-read-persistent-clock.patch][2.6.24]]
  - 2.6.25
* [2.6.22 - 2.6.24] rcu-preempt-fix-rcu-torture.patch {C::feature::debuginfo::add config preempt_rcu for debug OR statistics}
  + [[file:2.6.22/rcu-preempt-fix-rcu-torture.patch][2.6.22]]
    [[file:2.6.23/rcu-preempt-fix-rcu-torture.patch][2.6.23]]
    [[file:2.6.24/rcu-preempt-fix-rcu-torture.patch][2.6.24]]
  - 2.6.25
* [2.6.22 - 2.6.24] v2.6.21-rt3 {C::maintain::refactor::reorder some code}
  + [[file:2.6.22/latency-measurement-drivers-fix.patch][2.6.22]]
  M [[file:2.6.23/latency-measurement-drivers-fix.patch][2.6.23]]
    [[file:2.6.24/latency-measurement-drivers-fix.patch][2.6.24]]
  - 2.6.25
* [2.6.22 - 2.6.24] ns2cyc() result fix {C::bug::compile::compiling_err::syntax:: warning, wrong type
  + [[file:2.6.22/ns2cyc-result-fix.patch][2.6.22]]
    [[file:2.6.23/ns2cyc-result-fix.patch][2.6.23]]
    [[file:2.6.24/ns2cyc-result-fix.patch][2.6.24]]
  - 2.6.25
* [2.6.22 - 2.6.24] redo-regparm-option.patch {C::maintain::refactor::add config and comple flags modified}
  + [[file:2.6.22/redo-regparm-option.patch][2.6.22]]
  M [[file:2.6.23/redo-regparm-option.patch][2.6.23]]
  M [[file:2.6.24/redo-regparm-option.patch][2.6.24]]
  - 2.6.25
* [2.6.22 - 2.6.24] PPC timebase clocksource is continuous {C::maintain::refactor::comment fun and white space}
  + [[file:2.6.22/ppc-gtod-support-fix.patch][2.6.22]]
    [[file:2.6.23/ppc-gtod-support-fix.patch][2.6.23]]
    [[file:2.6.24/ppc-gtod-support-fix.patch][2.6.24]]
  - 2.6.25
* [2.6.22 - 2.6.24] smaller-trace.patch {C::performance::smallsize::smaller trace}
  + [[file:2.6.22/smaller-trace.patch][2.6.22]]
    [[file:2.6.23/smaller-trace.patch][2.6.23]]
    [[file:2.6.24/smaller-trace.patch][2.6.24]]
  - 2.6.25
* [2.6.22 - 2.6.24] x86-64-traps-move-held-locks-output.patch {C::maintain::refactor::reorder fun}
  + [[file:2.6.22/x86-64-traps-move-held-locks-output.patch][2.6.22]]
    [[file:2.6.23/x86-64-traps-move-held-locks-output.patch][2.6.23]]
    [[file:2.6.24/x86-64-traps-move-held-locks-output.patch][2.6.24]]
  - 2.6.25
* [2.6.22 - 2.6.24] latency-tracing-exclude-printk.patch {C::feature::debuginfo::add config, disable some useless printk detail}
  + [[file:2.6.22/latency-tracing-exclude-printk.patch][2.6.22]]
    [[file:2.6.23/latency-tracing-exclude-printk.patch][2.6.23]]
    [[file:2.6.24/latency-tracing-exclude-printk.patch][2.6.24]]
  - 2.6.25
* [2.6.22 - 2.6.24] PowerPC: kill cpu_khz reference {C::maintain::refactor::rm useless var}
  + [[file:2.6.22/ppc-remove-last-cpukhz.patch][2.6.22]]
    [[file:2.6.23/ppc-remove-last-cpukhz.patch][2.6.23]]
    [[file:2.6.24/ppc-remove-last-cpukhz.patch][2.6.24]]
  - 2.6.25
* [2.6.22 - 2.6.24] hrtimer-trace.patch {C::feature::debuginfo::add hrtimer_trace}
  + [[file:2.6.22/hrtimer-trace.patch][2.6.22]]
    [[file:2.6.23/hrtimer-trace.patch][2.6.23]]
    [[file:2.6.24/hrtimer-trace.patch][2.6.24]]
  - 2.6.25
* [2.6.22 - 2.6.24] latency-tracing-remove-trace-array.patch {C::maintain::refactor::rm trace array}
  + [[file:2.6.22/latency-tracing-remove-trace-array.patch][2.6.22]]
  m [[file:2.6.23/latency-tracing-remove-trace-array.patch][2.6.23]]
    [[file:2.6.24/latency-tracing-remove-trace-array.patch][2.6.24]]
  - 2.6.25
* [2.6.22 - 2.6.24] PowerPC: remove broken vsyscall code {C::bug::crash::err_access::semantics::rm broken vsyscalls}
  + [[file:2.6.22/ppc-remove-broken-vsyscall.patch][2.6.22]]
    [[file:2.6.23/ppc-remove-broken-vsyscall.patch][2.6.23]]
    [[file:2.6.24/ppc-remove-broken-vsyscall.patch][2.6.24]]
  - 2.6.25
* [2.6.22 - 2.6.24] Make threshold to print '!' in latency trace variable {C::maintain::refactor::replace val with a var}
  + [[file:2.6.22/latency-tracer-variable-threshold.patch][2.6.22]]
    [[file:2.6.23/latency-tracer-variable-threshold.patch][2.6.23]]
    [[file:2.6.24/latency-tracer-variable-threshold.patch][2.6.24]]
  - 2.6.25
* [2.6.22 - 2.6.24] add-notrace.patch {C::feature::debuginfo}
  + [[file:2.6.22/add-notrace.patch][2.6.22]]
    [[file:2.6.23/add-notrace.patch][2.6.23]]
    [[file:2.6.24/add-notrace.patch][2.6.24]]
  - 2.6.25
* [2.6.22 - 2.6.24] ppc-a-2.patch {C::bug::compile::compiling_err::semantics::replace unknown field}
  + [[file:2.6.22/ppc-a-2.patch][2.6.22]]
    [[file:2.6.23/ppc-a-2.patch][2.6.23]]
    [[file:2.6.24/ppc-a-2.patch][2.6.24]]
  - 2.6.25
* [2.6.22 - 2.6.24] paravirt: mark assembly dependencies as fastcall {C::performance::smallsize::add fastcall}
  + [[file:2.6.22/latency-tracing-i386-paravirt-fastcall.patch][2.6.22]]
  M [[file:2.6.23/latency-tracing-i386-paravirt-fastcall.patch][2.6.23]]
  M [[file:2.6.24/latency-tracing-i386-paravirt-fastcall.patch][2.6.24]]
  - 2.6.25
* [2.6.22 - 2.6.24] latency-tracer-printk-fix.patch {C::maintain::refactor}
  + [[file:2.6.22/latency-tracer-printk-fix.patch][2.6.22]]
    [[file:2.6.23/latency-tracer-printk-fix.patch][2.6.23]]
    [[file:2.6.24/latency-tracer-printk-fix.patch][2.6.24]]
  - 2.6.25
* [2.6.22 - 2.6.24] IPV6: estalished connections are not shown with "cat /proc/net/tcp6" {C::bug::data_err::semantics::semantics::add two var to get val}
  + [[file:2.6.22/inet-hash-bits-ipv6-fix.patch][2.6.22]]
    [[file:2.6.23/inet-hash-bits-ipv6-fix.patch][2.6.23]]
    [[file:2.6.24/inet-hash-bits-ipv6-fix.patch][2.6.24]]
  - 2.6.25
* [2.6.22 - 2.6.24] latency-tracer-optimize-a-bit.patch {C::performance::preempt::reorder the cond-statement in a macro}
  + [[file:2.6.22/latency-tracer-optimize-a-bit.patch][2.6.22]]
    [[file:2.6.23/latency-tracer-optimize-a-bit.patch][2.6.23]]
    [[file:2.6.24/latency-tracer-optimize-a-bit.patch][2.6.24]]
  - 2.6.25
* [2.6.22 - 2.6.24] preempt-realtime-netconsole.patch {C::performance::irq::rm irq_save}
  + [[file:2.6.22/preempt-realtime-netconsole.patch][2.6.22]]
    [[file:2.6.23/preempt-realtime-netconsole.patch][2.6.23]]
    [[file:2.6.24/preempt-realtime-netconsole.patch][2.6.24]]
  - 2.6.25
* [2.6.22 - 2.6.24] PowerPC: decrementer clockevent driver {C::maintain::refactor::ppc decrementer clkevnt driver}
  + [[file:2.6.22/ppc-clockevents.patch][2.6.22]]
  M [[file:2.6.23/ppc-clockevents.patch][2.6.23]]
    [[file:2.6.24/ppc-clockevents.patch][2.6.24]]
  - 2.6.25
* [2.6.22 - 2.6.24] rcu-4.patch {C::maintain::refactor::separate rcu-trace from rcu}
  + [[file:2.6.22/rcu-4.patch][2.6.22]]
  m [[file:2.6.23/rcu-4.patch][2.6.23]]
    [[file:2.6.24/rcu-4.patch][2.6.24]]
  - 2.6.25
* [2.6.22 - 2.6.24] latency-tracing-raw-spinlock-hack.patch {C::maintain::refactor::add macro}
  + [[file:2.6.22/latency-tracing-raw-spinlock-hack.patch][2.6.22]]
  m [[file:2.6.23/latency-tracing-raw-spinlock-hack.patch][2.6.23]]
    [[file:2.6.24/latency-tracing-raw-spinlock-hack.patch][2.6.24]]
  - 2.6.25
* [2.6.22 - 2.6.24] [Patch RT] Fix CFS load balancing for RT tasks {C::feature::sched::add queue task rt to enable balance_rt_tasks when overload}
  + [[file:2.6.22/preempt-realtime-cfs-accounting-fix.patch][2.6.22]]
  m [[file:2.6.23/preempt-realtime-cfs-accounting-fix.patch][2.6.23]]
    [[file:2.6.24/preempt-realtime-cfs-accounting-fix.patch][2.6.24]]
  - 2.6.25
* [2.6.22 - 2.6.24] rcu-3.patch {C::performance::preempt::preempt read-side critical section}
  + [[file:2.6.22/rcu-3.patch][2.6.22]]
  m [[file:2.6.23/rcu-3.patch][2.6.23]]
    [[file:2.6.24/rcu-3.patch][2.6.24]]
  - 2.6.25
* [2.6.22 - 2.6.24] preempt-realtime-8139too-rt-irq-flags-fix.patch {C::performance::preempt::replace orig irq with nort version}
  + [[file:2.6.22/preempt-realtime-8139too-rt-irq-flags-fix.patch][2.6.22]]
    [[file:2.6.23/preempt-realtime-8139too-rt-irq-flags-fix.patch][2.6.23]]
    [[file:2.6.24/preempt-realtime-8139too-rt-irq-flags-fix.patch][2.6.24]]
  - 2.6.25
* [2.6.22 - 2.6.24] kvm: make vcpu_load/put preemptible {C::performance::preempt::make vcpu preemptible}
  + [[file:2.6.22/kvm-rt.patch][2.6.22]]
  M [[file:2.6.23/kvm-rt.patch][2.6.23]]
  M [[file:2.6.24/kvm-rt.patch][2.6.24]]
  - 2.6.25
* [2.6.22 - 2.6.24] add might_sleep in rt_spin_lock_fastlock {C::bug::hang::atomicity::runtime::might_sleep fun in rt_spin_lock_fastlock}
  + [[file:2.6.22/rt-mutex-spinlock-might-sleep.patch][2.6.22]]
    [[file:2.6.23/rt-mutex-spinlock-might-sleep.patch][2.6.23]]
    [[file:2.6.24/rt-mutex-spinlock-might-sleep.patch][2.6.24]]
  - 2.6.25
* [2.6.22 - 2.6.24] rcu-1.patch {C::maintain::refactor::reorganize code}
  + [[file:2.6.22/rcu-1.patch][2.6.22]]
  M [[file:2.6.23/rcu-1.patch][2.6.23]]
    [[file:2.6.24/rcu-1.patch][2.6.24]]
  - 2.6.25
* [2.6.22 - 2.6.24] dynticks-rcu-rt-fixlet.patch {C::feature::rtsupport::check rcu_need_cpu}
  + [[file:2.6.22/dynticks-rcu-rt-fixlet.patch][2.6.22]]
    [[file:2.6.23/dynticks-rcu-rt-fixlet.patch][2.6.23]]
    [[file:2.6.24/dynticks-rcu-rt-fixlet.patch][2.6.24]]
  - 2.6.25
* [2.6.22 - 2.6.24] trace-name-plus.patch {C::maintain::refactor::modify output info}
  + [[file:2.6.22/trace-name-plus.patch][2.6.22]]
  m [[file:2.6.23/trace-name-plus.patch][2.6.23]]
    [[file:2.6.24/trace-name-plus.patch][2.6.24]]
  - 2.6.25
* [2.6.22 - 2.6.24] radix-tree: use indirect bit {C::feature::rtsupport::indirect rd-tree pointer}
  + [[file:2.6.22/radix-tree-use-indirect-bit.patch][2.6.22]]
    [[file:2.6.23/2.6.21-rc6-lockless2-radix-tree-use-indirect-bit.patch][2.6.23]]
    [[file:2.6.24/2.6.21-rc6-lockless2-radix-tree-use-indirect-bit.patch][2.6.24]]
  - 2.6.25
* [2.6.22 - 2.6.24] latency-tracing-i386.patch {C::feature::debuginfo::latency tracing i386}
  + [[file:2.6.22/latency-tracing-i386.patch][2.6.22]]
  M [[file:2.6.23/latency-tracing-i386.patch][2.6.23]]
  M [[file:2.6.24/latency-tracing-i386.patch][2.6.24]]
  - 2.6.25
* [2.6.22 - 2.6.24] Latency tracer: Reset histogram when preempt_max_latency was reset {C::feature::debuginfo::reset latency histogram}
  + [[file:2.6.22/reset-latency-histogram.patch][2.6.22]]
    [[file:2.6.23/reset-latency-histogram.patch][2.6.23]]
    [[file:2.6.24/reset-latency-histogram.patch][2.6.24]]
  - 2.6.25
* [2.6.22 - 2.6.24] latency-tracing.patch {C::feature::debuginfo::latency tracing}
  + [[file:2.6.22/latency-tracing.patch][2.6.22]]
  M [[file:2.6.23/latency-tracing.patch][2.6.23]]
  M [[file:2.6.24/latency-tracing.patch][2.6.24]]
  - 2.6.25
* [2.6.22 - 2.6.25] Fix TASKLET_STATE_SCHED WARN_ON() {C::bug::crash::softirq::sync::add an cond-statement}
  + [[file:2.6.22/tasklet-fix-preemption-race.patch][2.6.22]]
    [[file:2.6.23/tasklet-fix-preemption-race.patch][2.6.23]]
    [[file:2.6.24/tasklet-fix-preemption-race.patch][2.6.24]]
    [[file:2.6.25/tasklet-fix-preemption-race.patch][2.6.25]]
  - 2.6.26
* [2.6.22 - 2.6.25] percpu-locked-powerpc-fixups-a6.patch {C::bug::compile::compiling_err::syntax::add macro def}
  + [[file:2.6.22/percpu-locked-powerpc-fixups-a6.patch][2.6.22]]
  M [[file:2.6.23/percpu-locked-powerpc-fixups-a6.patch][2.6.23]]
  m [[file:2.6.24/percpu-locked-powerpc-fixups-a6.patch][2.6.24]]
    [[file:2.6.25/percpu-locked-powerpc-fixups-a6.patch][2.6.25]]
  - 2.6.26
* [2.6.22 - 2.6.25] powerpc 2.6.21-rt1: rename mcount variable in xmon to xmon_mcount {C::maintain::refactor::raname var}
  + [[file:2.6.22/ppc-rename-xmon-mcount.patch][2.6.22]]
    [[file:2.6.23/ppc-rename-xmon-mcount.patch][2.6.23]]
    [[file:2.6.24/ppc-rename-xmon-mcount.patch][2.6.24]]
    [[file:2.6.25/ppc-rename-xmon-mcount.patch][2.6.25]]
  - 2.6.26
* [2.6.22 - 2.6.25] handle accurate time keeping over long delays {C::bug::data_err::time::semantics::add var to accumulate}
  + [[file:2.6.22/rt-time-starvation-fix.patch][2.6.22]]
  M [[file:2.6.23/rt-time-starvation-fix.patch][2.6.23]]
  M [[file:2.6.24/rt-time-starvation-fix.patch][2.6.24]]
  M [[file:2.6.25/rt-time-starvation-fix.patch][2.6.25]]
  - 2.6.26
* [2.6.22 - 2.6.25] powerpc 2.6.21-rt1: add a need_resched_delayed() check {C::feature::check::add need resched delay check}
  + [[file:2.6.22/preempt-realtime-ppc-need-resched-delayed.patch][2.6.22]]
    [[file:2.6.23/preempt-realtime-ppc-need-resched-delayed.patch][2.6.23]]
    [[file:2.6.24/preempt-realtime-ppc-need-resched-delayed.patch][2.6.24]]
    [[file:2.6.25/preempt-realtime-ppc-need-resched-delayed.patch][2.6.25]]
  - 2.6.26
* [2.6.22 - 2.6.25] preempt-rt: Preliminary SH support {C::feature::arch::rt support for sh cpu}
  + [[file:2.6.22/preempt-realtime-sh.patch][2.6.22]]
  M [[file:2.6.23/preempt-realtime-sh.patch][2.6.23]]
  M [[file:2.6.24/preempt-realtime-sh.patch][2.6.24]]
    [[file:2.6.25/preempt-realtime-sh.patch][2.6.25]]
  - 2.6.26
* [2.6.22 - 2.6.25] ep93xx-timer-accuracy.patch {C::performance::hrtimer::improve time of day accuracy}
  + [[file:2.6.22/ep93xx-timer-accuracy.patch][2.6.22]]
    [[file:2.6.23/ep93xx-timer-accuracy.patch][2.6.23]]
    [[file:2.6.24/ep93xx-timer-accuracy.patch][2.6.24]]
  m [[file:2.6.25/ep93xx-timer-accuracy.patch][2.6.25]]
  - 2.6.26
* [2.6.22 - 2.6.25] rcu-various-fixups.patch {C::bug::crash::preempt::preempt::add rcu_read lock pair}
  + [[file:2.6.22/rcu-various-fixups.patch][2.6.22]]
  M [[file:2.6.23/rcu-various-fixups.patch][2.6.23]]
    [[file:2.6.24/rcu-various-fixups.patch][2.6.24]]
  M [[file:2.6.25/rcu-various-fixups.patch][2.6.25]]
  - 2.6.26
* [2.6.22 - 2.6.25] futex-performance-hack.patch {C::feature::check::add futex_performance hack}
  + [[file:2.6.22/futex-performance-hack.patch][2.6.22]]
    [[file:2.6.23/futex-performance-hack.patch][2.6.23]]
  M [[file:2.6.24/futex-performance-hack.patch][2.6.24]]
  m [[file:2.6.25/futex-performance-hack.patch][2.6.25]]
  - 2.6.26
* [2.6.22 - 2.6.25] futex_performance_hack sysctl build fix {C::feature::check::add precompilefutex_performance_hack sysctl}
  + [[file:2.6.22/futex-performance-hack-sysctl-fix.patch][2.6.22]]
    [[file:2.6.23/futex-performance-hack-sysctl-fix.patch][2.6.23]]
  m [[file:2.6.24/futex-performance-hack-sysctl-fix.patch][2.6.24]]
  m [[file:2.6.25/futex-performance-hack-sysctl-fix.patch][2.6.25]]
  - 2.6.26
* [2.6.22 - 2.6.25] arm-leds-timer.patch {C::feature::hardware::add fun}
  + [[file:2.6.22/arm-leds-timer.patch][2.6.22]]
    [[file:2.6.23/arm-leds-timer.patch][2.6.23]]
    [[file:2.6.24/arm-leds-timer.patch][2.6.24]]
    [[file:2.6.25/arm-leds-timer.patch][2.6.25]]
  - 2.6.26
* [2.6.22 - 2.6.25] ep93xx-clockevents.patch {C::feature::timer::support clkevnt}
  + [[file:2.6.22/ep93xx-clockevents.patch][2.6.22]]
    [[file:2.6.23/ep93xx-clockevents.patch][2.6.23]]
    [[file:2.6.24/ep93xx-clockevents.patch][2.6.24]]
  M [[file:2.6.25/ep93xx-clockevents.patch][2.6.25]]
  - 2.6.26
* [2.6.22 - 2.6.25] powerpc 2.6.21-rt1: dummy functions and export _mcount to compile {C::maintain::donothing::add dummy fun}
  + [[file:2.6.22/ppc-mcount-dummy-functions.patch][2.6.22]]
    [[file:2.6.23/ppc-mcount-dummy-functions.patch][2.6.23]]
  M [[file:2.6.24/ppc-mcount-dummy-functions.patch][2.6.24]]
    [[file:2.6.25/ppc-mcount-dummy-functions.patch][2.6.25]]
  - 2.6.26
* [2.6.22 - 2.6.25] add -rt extra-version {C::maintain::donothing::modify version in makefile}
  + [[file:2.6.22/version.patch][2.6.22]]
  M [[file:2.6.23/version.patch][2.6.23]]
  m [[file:2.6.24/version.patch][2.6.24]]
  M [[file:2.6.25/version.patch][2.6.25]]
  - 2.6.26
* [2.6.22 - 2.6.25] netfilter-more-debugging.patch {C::maintain::refactor::add more debugging}
  + [[file:2.6.22/netfilter-more-debugging.patch][2.6.22]]
    [[file:2.6.23/netfilter-more-debugging.patch][2.6.23]]
    [[file:2.6.24/netfilter-more-debugging.patch][2.6.24]]
    [[file:2.6.25/netfilter-more-debugging.patch][2.6.25]]
  - 2.6.26
* [2.6.22 - 2.6.25] preempt-realtime-powerpc-a7.patch {C::bug::compile::compiling_err::syntax::replace local_irq_restore with raw_local_irq_restore}
  + [[file:2.6.22/preempt-realtime-powerpc-a7.patch][2.6.22]]
    [[file:2.6.23/preempt-realtime-powerpc-a7.patch][2.6.23]]
  m [[file:2.6.24/preempt-realtime-powerpc-a7.patch][2.6.24]]
    [[file:2.6.25/preempt-realtime-powerpc-a7.patch][2.6.25]]
  - 2.6.26
* [2.6.22 - 2.6.25] powerpc 2.6.21-rt1: add mcount() and _mcount() {C::feature::debuginfo::add latency trace support}
  + [[file:2.6.22/ppc-add-mcount.patch][2.6.22]]
    [[file:2.6.23/ppc-add-mcount.patch][2.6.23]]
  M [[file:2.6.24/ppc-add-mcount.patch][2.6.24]]
  M [[file:2.6.25/ppc-add-mcount.patch][2.6.25]]
  - 2.6.26
* [2.6.22 - 2.6.25] preempt-realtime-supress-cpulock-warning.patch {C::feature::debuginfo::add config}
  + [[file:2.6.22/preempt-realtime-supress-cpulock-warning.patch][2.6.22]]
    [[file:2.6.23/preempt-realtime-supress-cpulock-warning.patch][2.6.23]]
    [[file:2.6.24/preempt-realtime-supress-cpulock-warning.patch][2.6.24]]
    [[file:2.6.25/preempt-realtime-supress-cpulock-warning.patch][2.6.25]]
  - 2.6.26
* [2.6.22 - 2.6.25] More Fixes to TASKLET_STATE_SCHED WARN_ON() {C::bug::crash::order::sync::add statement}
  + [[file:2.6.22/tasklet-more-fixes.patch][2.6.22]]
    [[file:2.6.23/tasklet-more-fixes.patch][2.6.23]]
    [[file:2.6.24/tasklet-more-fixes.patch][2.6.24]]
    [[file:2.6.25/tasklet-more-fixes.patch][2.6.25]]
  - 2.6.26
* [2.6.22 - 2.6.25] arm-cmpxchg-support-armv6.patch {C::feature::hardware::support cmpxchg}
  + [[file:2.6.22/arm-cmpxchg-support-armv6.patch][2.6.22]]
    [[file:2.6.23/arm-cmpxchg-support-armv6.patch][2.6.23]]
    [[file:2.6.24/arm-cmpxchg-support-armv6.patch][2.6.24]]
    [[file:2.6.25/arm-cmpxchg-support-armv6.patch][2.6.25]]
  - 2.6.26
* [2.6.22 - 2.6.25] rt-mutex-arm-fix.patch {C::feature::debuginfo::add attribute __sched}
  + [[file:2.6.22/rt-mutex-arm-fix.patch][2.6.22]]
    [[file:2.6.23/rt-mutex-arm-fix.patch][2.6.23]]
    [[file:2.6.24/rt-mutex-arm-fix.patch][2.6.24]]
  M [[file:2.6.25/rt-mutex-arm-fix.patch][2.6.25]]
  - 2.6.26
* [2.6.22 - 2.6.25] arm-fix-atomic-cmpxchg.patch {C::bug::deadlock::preempt::preempt::replace orig irq_save with raw}
  + [[file:2.6.22/arm-fix-atomic-cmpxchg.patch][2.6.22]]
    [[file:2.6.23/arm-fix-atomic-cmpxchg.patch][2.6.23]]
    [[file:2.6.24/arm-fix-atomic-cmpxchg.patch][2.6.24]]
    [[file:2.6.25/arm-fix-atomic-cmpxchg.patch][2.6.25]]
  - 2.6.26
* [2.6.22 - 2.6.25] timer patch for ep93xx {C::performance::hardware::add hardware related fun}
  + [[file:2.6.22/ep93xx-clockevents-fix.patch][2.6.22]]
    [[file:2.6.23/ep93xx-clockevents-fix.patch][2.6.23]]
    [[file:2.6.24/ep93xx-clockevents-fix.patch][2.6.24]]
    [[file:2.6.25/ep93xx-clockevents-fix.patch][2.6.25]]
  - 2.6.26
* [2.6.22 - 2.6.25] powerpc 2.6.21-rt1: fix kernel hang and/or  panic {C::bug::hang::order::order::restore preempt_none method}
  + [[file:2.6.22/preempt-irqs-ppc-celleb-beatic-eoi.patch][2.6.22]]
    [[file:2.6.23/preempt-irqs-ppc-celleb-beatic-eoi.patch][2.6.23]]
    [[file:2.6.24/preempt-irqs-ppc-celleb-beatic-eoi.patch][2.6.24]]
    [[file:2.6.25/preempt-irqs-ppc-celleb-beatic-eoi.patch][2.6.25]]
  - 2.6.26
* [2.6.22 - 2.6.25] ppc-mark-notrace-mainline.patch {C::feature::debuginfo::add notrace}
  + [[file:2.6.22/ppc-mark-notrace-mainline.patch][2.6.22]]
    [[file:2.6.23/ppc-mark-notrace-mainline.patch][2.6.23]]
    [[file:2.6.24/ppc-mark-notrace-mainline.patch][2.6.24]]
    [[file:2.6.25/ppc-mark-notrace-mainline.patch][2.6.25]]
  - 2.6.26
* [2.6.22 - 2.6.25] write-try-lock-irqsave.patch {C::feature::rtsupport::add macro write_trylock_irqsave}
  + [[file:2.6.22/write-try-lock-irqsave.patch][2.6.22]]
    [[file:2.6.23/write-try-lock-irqsave.patch][2.6.23]]
    [[file:2.6.24/write-try-lock-irqsave.patch][2.6.24]]
    [[file:2.6.25/write-try-lock-irqsave.patch][2.6.25]]
  - 2.6.26
* [2.6.22 - 2.6.25] ppc-add-ppc32-mcount.patch {C::feature::debuginfo::add mcount}
  + [[file:2.6.22/ppc-add-ppc32-mcount.patch][2.6.22]]
    [[file:2.6.23/ppc-add-ppc32-mcount.patch][2.6.23]]
  M [[file:2.6.24/ppc-add-ppc32-mcount.patch][2.6.24]]
  M [[file:2.6.25/ppc-add-ppc32-mcount.patch][2.6.25]]
  - 2.6.26
* [2.6.22 - 2.6.25] latency-tracing-prctl-api-hack.patch {C::feature::debuginfo::add config, modify fun}
  + [[file:2.6.22/latency-tracing-prctl-api-hack.patch][2.6.22]]
    [[file:2.6.23/latency-tracing-prctl-api-hack.patch][2.6.23]]
  m [[file:2.6.24/latency-tracing-prctl-api-hack.patch][2.6.24]]
  M [[file:2.6.25/latency-tracing-prctl-api-hack.patch][2.6.25]]
  - 2.6.26
* [2.6.22 - 2.6.25] preempt-realtime-ppc-more-resched-fixups.patch {C::feature::rtsupport::preempt, add need_resched_delayed}
  + [[file:2.6.22/preempt-realtime-ppc-more-resched-fixups.patch][2.6.22]]
  m [[file:2.6.23/preempt-realtime-ppc-more-resched-fixups.patch][2.6.23]]
    [[file:2.6.24/preempt-realtime-ppc-more-resched-fixups.patch][2.6.24]]
    [[file:2.6.25/preempt-realtime-ppc-more-resched-fixups.patch][2.6.25]]
  - 2.6.26
* [2.6.22 - 2.6.25] arm-cmpxchg.patch {C::feature::rtsupport::add cmpxchg}
  + [[file:2.6.22/arm-cmpxchg.patch][2.6.22]]
    [[file:2.6.23/arm-cmpxchg.patch][2.6.23]]
    [[file:2.6.24/arm-cmpxchg.patch][2.6.24]]
    [[file:2.6.25/arm-cmpxchg.patch][2.6.25]]
  - 2.6.26
* [2.6.22 - 2.6.26] posix-cpu-timers-fix.patch {C::feature::check::add cond check}
  + [[file:2.6.22/posix-cpu-timers-fix.patch][2.6.22]]
    [[file:2.6.23/posix-cpu-timers-fix.patch][2.6.23]]
    [[file:2.6.24/posix-cpu-timers-fix.patch][2.6.24]]
    [[file:2.6.25/posix-cpu-timers-fix.patch][2.6.25]]
    [[file:2.6.26/posix-cpu-timers-fix.patch][2.6.26]]
  - 2.6.29
* [2.6.22 - 2.6.26] rt-mutex-mips.patch {C::feature::rtsupport::rt mutex in mips}
  + [[file:2.6.22/rt-mutex-mips.patch][2.6.22]]
  m [[file:2.6.23/rt-mutex-mips.patch][2.6.23]]
  m [[file:2.6.24/rt-mutex-mips.patch][2.6.24]]
    [[file:2.6.25/rt-mutex-mips.patch][2.6.25]]
  M [[file:2.6.26/rt-mutex-mips.patch][2.6.26]]
  - 2.6.29
* [2.6.22 - 2.6.26] fix-emac-locking-2.6.16.patch {C::feature::rtsupport::add spinlock in emac}
  + [[file:2.6.22/fix-emac-locking-2.6.16.patch][2.6.22]]
    [[file:2.6.23/fix-emac-locking-2.6.16.patch][2.6.23]]
  m [[file:2.6.24/fix-emac-locking-2.6.16.patch][2.6.24]]
    [[file:2.6.25/fix-emac-locking-2.6.16.patch][2.6.25]]
    [[file:2.6.26/fix-emac-locking-2.6.16.patch][2.6.26]]
  - 2.6.29
* [2.6.22 - 2.6.26] powerpc 2.6.21-rt1: fix a build breakage by adding __raw_*_relax() macros {C::bug::compile::compiling_err::syntax::add missing macros}
  + [[file:2.6.22/preempt-realtime-powerpc-add-raw-relax-macros.patch][2.6.22]]
    [[file:2.6.23/preempt-realtime-powerpc-add-raw-relax-macros.patch][2.6.23]]
    [[file:2.6.24/preempt-realtime-powerpc-add-raw-relax-macros.patch][2.6.24]]
    [[file:2.6.25/preempt-realtime-powerpc-add-raw-relax-macros.patch][2.6.25]]
    [[file:2.6.26/preempt-realtime-powerpc-add-raw-relax-macros.patch][2.6.26]]
  - 2.6.29
* [2.6.22 - 2.6.26] latency-tracing-arm.patch {C::feature::debuginfo::latency tracing arm}
  + [[file:2.6.22/latency-tracing-arm.patch][2.6.22]]
  M [[file:2.6.23/latency-tracing-arm.patch][2.6.23]]
  M [[file:2.6.24/latency-tracing-arm.patch][2.6.24]]
  M [[file:2.6.25/latency-tracing-arm.patch][2.6.25]]
  m [[file:2.6.26/latency-tracing-arm.patch][2.6.26]]
  - 2.6.29
* [2.6.22 - 2.6.26] select-error-leak-fix.patch {C::bug::leak::semantics::semantics::userspace leak,move label out}
  + [[file:2.6.22/select-error-leak-fix.patch][2.6.22]]
    [[file:2.6.23/select-error-leak-fix.patch][2.6.23]]
    [[file:2.6.24/select-error-leak-fix.patch][2.6.24]]
    [[file:2.6.25/select-error-leak-fix.patch][2.6.25]]
    [[file:2.6.26/select-error-leak-fix.patch][2.6.26]]
  - 2.6.29
* [2.6.22 - 2.6.26] lockdep: prettify output {C::maintain::refactor::modify output}
  + [[file:2.6.22/lockdep-prettify.patch][2.6.22]]
    [[file:2.6.23/lockdep-prettify.patch][2.6.23]]
    [[file:2.6.24/lockdep-prettify.patch][2.6.24]]
    [[file:2.6.25/lockdep-prettify.patch][2.6.25]]
    [[file:2.6.26/lockdep-prettify.patch][2.6.26]]
  - 2.6.29
* [2.6.22 - 2.6.26] preempt-irqs-ppc.patch {C::feature::rtsupport::add need_resched_delayed}
  + [[file:2.6.22/preempt-irqs-ppc.patch][2.6.22]]
  M [[file:2.6.23/preempt-irqs-ppc.patch][2.6.23]]
  m [[file:2.6.24/preempt-irqs-ppc.patch][2.6.24]]
    [[file:2.6.25/preempt-irqs-ppc.patch][2.6.25]]
  M [[file:2.6.26/preempt-irqs-ppc.patch][2.6.26]]
  - 2.6.29
* [2.6.22 - 2.6.26] i386-nmi-watchdog-show-regs.patch {C::feature::debuginfo::show reg, rm fun}
  + [[file:2.6.22/i386-nmi-watchdog-show-regs.patch][2.6.22]]
    [[file:2.6.23/i386-nmi-watchdog-show-regs.patch][2.6.23]]
    [[file:2.6.24/i386-nmi-watchdog-show-regs.patch][2.6.24]]
    [[file:2.6.25/i386-nmi-watchdog-show-regs.patch][2.6.25]]
    [[file:2.6.26/i386-nmi-watchdog-show-regs.patch][2.6.26]]
  - 2.6.29
* [2.6.22 - 2.6.26] irq nobody cared workaround for i386 {C::bug::na::hardware::hardware::add fun, an uncared bug fix is mentioned in the mail}
  + [[file:2.6.22/preempt-irqs-i386-ioapic-mask-quirk.patch][2.6.22]]
  M [[file:2.6.23/preempt-irqs-i386-ioapic-mask-quirk.patch][2.6.23]]
    [[file:2.6.24/preempt-irqs-i386-ioapic-mask-quirk.patch][2.6.24]]
    [[file:2.6.25/preempt-irqs-i386-ioapic-mask-quirk.patch][2.6.25]]
    [[file:2.6.26/preempt-irqs-i386-ioapic-mask-quirk.patch][2.6.26]]
  - 2.6.29
* [2.6.22 - 2.6.26] lockdep: show held locks when showing a stackdump {C::feature::debuginfo::show held locks when print backtree}
  + [[file:2.6.22/lockdep-show-held-locks.patch][2.6.22]]
    [[file:2.6.23/lockdep-show-held-locks.patch][2.6.23]]
  m [[file:2.6.24/lockdep-show-held-locks.patch][2.6.24]]
  M [[file:2.6.25/lockdep-show-held-locks.patch][2.6.25]]
  m [[file:2.6.26/lockdep-show-held-locks.patch][2.6.26]]
  - 2.6.29
* [2.6.22 - 2.6.26] Add-dev-rmem-device-driver-for-real-time-JVM-testing.patch {C::feature::mm::allocates memory required by rt tck}
  + [[file:2.6.22/Add-dev-rmem-device-driver-for-real-time-JVM-testing.patch][2.6.22]]
  m [[file:2.6.23/Add-dev-rmem-device-driver-for-real-time-JVM-testing.patch][2.6.23]]
    [[file:2.6.24/Add-dev-rmem-device-driver-for-real-time-JVM-testing.patch][2.6.24]]
    [[file:2.6.25/Add-dev-rmem-device-driver-for-real-time-JVM-testing.patch][2.6.25]]
    [[file:2.6.26/Add-dev-rmem-device-driver-for-real-time-JVM-testing.patch][2.6.26]]
  - 2.6.29
* [2.6.22 - 2.6.26] Allocate-RTSJ-memory-for-TCK-conformance-test.patch {C::feature::mm::allocates memory required by rt tck}
  + [[file:2.6.22/Allocate-RTSJ-memory-for-TCK-conformance-test.patch][2.6.22]]
  m [[file:2.6.23/Allocate-RTSJ-memory-for-TCK-conformance-test.patch][2.6.23]]
    [[file:2.6.24/Allocate-RTSJ-memory-for-TCK-conformance-test.patch][2.6.24]]
  m [[file:2.6.25/Allocate-RTSJ-memory-for-TCK-conformance-test.patch][2.6.25]]
    [[file:2.6.26/Allocate-RTSJ-memory-for-TCK-conformance-test.patch][2.6.26]]
  - 2.6.29
* [2.6.22 - 2.6.26] introduce pause_on_oops_head/tail boot options {C::feature::debuginfo::pause_on_noops options}
  + [[file:2.6.22/pause-on-oops-head-tail.patch][2.6.22]]
    [[file:2.6.23/pause-on-oops-head-tail.patch][2.6.23]]
    [[file:2.6.24/pause-on-oops-head-tail.patch][2.6.24]]
  m [[file:2.6.25/pause-on-oops-head-tail.patch][2.6.25]]
  m [[file:2.6.26/pause-on-oops-head-tail.patch][2.6.26]]
  - 2.6.29
* [2.6.22 - 2.6.26] lockdep: lock_set_subclass - reset a held lock's subclass {C::feature::rtsupport::add fun lock_set_subclass}
  + [[file:2.6.22/lockdep-lock_set_subclass.patch][2.6.22]]
  m [[file:2.6.23/lockdep-lock_set_subclass.patch][2.6.23]]
    [[file:2.6.24/lockdep-lock_set_subclass.patch][2.6.24]]
    [[file:2.6.25/lockdep-lock_set_subclass.patch][2.6.25]]
    [[file:2.6.26/lockdep-lock_set_subclass.patch][2.6.26]]
  - 2.6.29
* [2.6.22 - 2.6.26] PowerPC: revert fix for threaded fasteoi IRQ handlers {C::maintain::refactor::rm useless field}
  + [[file:2.6.22/preempt-irqs-ppc-fix-more-fasteoi.patch][2.6.22]]
    [[file:2.6.23/preempt-irqs-ppc-fix-more-fasteoi.patch][2.6.23]]
    [[file:2.6.24/preempt-irqs-ppc-fix-more-fasteoi.patch][2.6.24]]
    [[file:2.6.25/preempt-irqs-ppc-fix-more-fasteoi.patch][2.6.25]]
    [[file:2.6.26/preempt-irqs-ppc-fix-more-fasteoi.patch][2.6.26]]
  - 2.6.29
* [2.6.22 - 2.6.26] percpu-locked-powerpc-fixups.patch {C::maintain::refactor::change macro used}
  + [[file:2.6.22/percpu-locked-powerpc-fixups.patch][2.6.22]]
    [[file:2.6.23/percpu-locked-powerpc-fixups.patch][2.6.23]]
    [[file:2.6.24/percpu-locked-powerpc-fixups.patch][2.6.24]]
    [[file:2.6.25/percpu-locked-powerpc-fixups.patch][2.6.25]]
    [[file:2.6.26/percpu-locked-powerpc-fixups.patch][2.6.26]]
  - 2.6.29
* [2.6.22 - 2.6.26] apic-dumpstack.patch {C::feature::debuginfo::add dump_stack}
  + [[file:2.6.22/apic-dumpstack.patch][2.6.22]]
    [[file:2.6.23/apic-dumpstack.patch][2.6.23]]
    [[file:2.6.24/apic-dumpstack.patch][2.6.24]]
  m [[file:2.6.25/apic-dumpstack.patch][2.6.25]]
    [[file:2.6.26/apic-dumpstack.patch][2.6.26]]
  - 2.6.29
* [2.6.22 - 2.6.26] nf_conntrack-fix-smp-processor-id.patch {C::bug::data_err::preempt::preempt::replace with raw}
  + [[file:2.6.22/nf_conntrack-fix-smp-processor-id.patch][2.6.22]]
    [[file:2.6.23/nf_conntrack-fix-smp-processor-id.patch][2.6.23]]
    [[file:2.6.24/nf_conntrack-fix-smp-processor-id.patch][2.6.24]]
  m [[file:2.6.25/nf_conntrack-fix-smp-processor-id.patch][2.6.25]]
    [[file:2.6.26/nf_conntrack-fix-smp-processor-id.patch][2.6.26]]
  - 2.6.29
* [2.6.22 - 2.6.26] preempt-realtime-powerpc-b3.patch {C::bug::crash::migration::migration::get the right cpu_mask}
  + [[file:2.6.22/preempt-realtime-powerpc-b3.patch][2.6.22]]
    [[file:2.6.23/preempt-realtime-powerpc-b3.patch][2.6.23]]
    [[file:2.6.24/preempt-realtime-powerpc-b3.patch][2.6.24]]
    [[file:2.6.25/preempt-realtime-powerpc-b3.patch][2.6.25]]
    [[file:2.6.26/preempt-realtime-powerpc-b3.patch][2.6.26]]
  - 2.6.29
* [2.6.22 - 2.6.26] s_files-schedule_on_each_cpu_wq.patch {C::maintain::refactor::separate a fun, and add sched_on_each_cpu_wq}
  + [[file:2.6.22/s_files-schedule_on_each_cpu_wq.patch][2.6.22]]
    [[file:2.6.23/s_files-schedule_on_each_cpu_wq.patch][2.6.23]]
  M [[file:2.6.24/s_files-schedule_on_each_cpu_wq.patch][2.6.24]]
  m [[file:2.6.25/s_files-schedule_on_each_cpu_wq.patch][2.6.25]]
    [[file:2.6.26/s_files-schedule_on_each_cpu_wq.patch][2.6.26]]
  - 2.6.29
* [2.6.22 - 2.6.26] remove global files_lock {C::performance::mutex}
  + [[file:2.6.22/s_files.patch][2.6.22]]
  M [[file:2.6.23/s_files.patch][2.6.23]]
  M [[file:2.6.24/s_files.patch][2.6.24]]
  M [[file:2.6.25/s_files.patch][2.6.25]]
  M [[file:2.6.26/s_files.patch][2.6.26]]
  - 2.6.29
* [2.6.22 - 2.6.26] fix-acpi-build-weirdness.patch {C::maintain::donothing::change makefile}
  + [[file:2.6.22/fix-acpi-build-weirdness.patch][2.6.22]]
    [[file:2.6.23/fix-acpi-build-weirdness.patch][2.6.23]]
  m [[file:2.6.24/fix-acpi-build-weirdness.patch][2.6.24]]
    [[file:2.6.25/fix-acpi-build-weirdness.patch][2.6.25]]
  m [[file:2.6.26/fix-acpi-build-weirdness.patch][2.6.26]]
  - 2.6.29
* [2.6.22 - 2.6.26] preempt-irqs-i386-idle-poll-loop-fix.patch {C::performance::idle::cpurelax check resched}
  + [[file:2.6.22/preempt-irqs-i386-idle-poll-loop-fix.patch][2.6.22]]
    [[file:2.6.23/preempt-irqs-i386-idle-poll-loop-fix.patch][2.6.23]]
    [[file:2.6.24/preempt-irqs-i386-idle-poll-loop-fix.patch][2.6.24]]
  m [[file:2.6.25/preempt-irqs-i386-idle-poll-loop-fix.patch][2.6.25]]
  M [[file:2.6.26/preempt-irqs-i386-idle-poll-loop-fix.patch][2.6.26]]
  - 2.6.29
* [2.6.22 - 2.6.26] preempt-irqs-ppc-ack-irq-fixups.patch {C::bug::crash::hardware::hardware::add field}
  + [[file:2.6.22/preempt-irqs-ppc-ack-irq-fixups.patch][2.6.22]]
    [[file:2.6.23/preempt-irqs-ppc-ack-irq-fixups.patch][2.6.23]]
    [[file:2.6.24/preempt-irqs-ppc-ack-irq-fixups.patch][2.6.24]]
    [[file:2.6.25/preempt-irqs-ppc-ack-irq-fixups.patch][2.6.25]]
    [[file:2.6.26/preempt-irqs-ppc-ack-irq-fixups.patch][2.6.26]]
  - 2.6.29
* [2.6.22 - 2.6.26] preempt-realtime-mips.patch {C::feature::rtsupport::preempt mips}
  + [[file:2.6.22/preempt-realtime-mips.patch][2.6.22]]
  M [[file:2.6.23/preempt-realtime-mips.patch][2.6.23]]
  M [[file:2.6.24/preempt-realtime-mips.patch][2.6.24]]
  M [[file:2.6.25/preempt-realtime-mips.patch][2.6.25]]
  M [[file:2.6.26/preempt-realtime-mips.patch][2.6.26]]
  - 2.6.29
* [2.6.22 - 2.6.26] (2.6.20-rt3) PowerPC: convert spinlocks into raw {C::feature::rtsupport::replace spinlock with raw}
  + [[file:2.6.22/preempt-realtime-powerpc-missing-raw-spinlocks.patch][2.6.22]]
  M [[file:2.6.23/preempt-realtime-powerpc-missing-raw-spinlocks.patch][2.6.23]]
  m [[file:2.6.24/preempt-realtime-powerpc-missing-raw-spinlocks.patch][2.6.24]]
  m [[file:2.6.25/preempt-realtime-powerpc-missing-raw-spinlocks.patch][2.6.25]]
    [[file:2.6.26/preempt-realtime-powerpc-missing-raw-spinlocks.patch][2.6.26]]
  - 2.6.29
* [2.6.22 - 2.6.26] nmi-profiling.patch {C::feature::rtsupport::replace with raw, add config, notrace}
  + [[file:2.6.22/nmi-profiling.patch][2.6.22]]
    [[file:2.6.23/nmi-profiling.patch][2.6.23]]
  M [[file:2.6.24/nmi-profiling.patch][2.6.24]]
  M [[file:2.6.25/nmi-profiling.patch][2.6.25]]
    [[file:2.6.26/nmi-profiling.patch][2.6.26]]
  - 2.6.29
* [2.6.22 - 2.6.26] preempt-realtime-powerpc.patch {C::feature::arch}
  + [[file:2.6.22/preempt-realtime-powerpc.patch][2.6.22]]
    [[file:2.6.23/preempt-realtime-powerpc.patch][2.6.23]]
  m [[file:2.6.24/preempt-realtime-powerpc.patch][2.6.24]]
    [[file:2.6.25/preempt-realtime-powerpc.patch][2.6.25]]
  M [[file:2.6.26/preempt-realtime-powerpc.patch][2.6.26]]
  - 2.6.29
* [2.6.22 - 2.6.26] lockstat-rt-hooks.patch {C::feature::rtsupport::add lock_contended_rt, replace rt_mutex_lock with it}
  + [[file:2.6.22/lockstat-rt-hooks.patch][2.6.22]]
  m [[file:2.6.23/lockstat-rt-hooks.patch][2.6.23]]
    [[file:2.6.24/lockstat-rt-hooks.patch][2.6.24]]
  m [[file:2.6.25/lockstat-rt-hooks.patch][2.6.25]]
    [[file:2.6.26/lockstat-rt-hooks.patch][2.6.26]]
  - 2.6.29
* [2.6.22 - 2.6.26] preempt-irqs-x86-64.patch {C::feature::rtsupport::add IRQF_NODELAY}
  + [[file:2.6.22/preempt-irqs-x86-64.patch][2.6.22]]
  M [[file:2.6.23/preempt-irqs-x86-64.patch][2.6.23]]
  M [[file:2.6.24/preempt-irqs-x86-64.patch][2.6.24]]
    [[file:2.6.25/preempt-irqs-x86-64.patch][2.6.25]]
    [[file:2.6.26/preempt-irqs-x86-64.patch][2.6.26]]
  - 2.6.29
* [2.6.22 - 2.6.26] preempt-realtime-arm-pxa.patch {C::feature::rtsupport::add macros}
  + [[file:2.6.22/preempt-realtime-arm-pxa.patch][2.6.22]]
    [[file:2.6.23/preempt-realtime-arm-pxa.patch][2.6.23]]
  M [[file:2.6.24/preempt-realtime-arm-pxa.patch][2.6.24]]
    [[file:2.6.25/preempt-realtime-arm-pxa.patch][2.6.25]]
    [[file:2.6.26/preempt-realtime-arm-pxa.patch][2.6.26]]
  - 2.6.29
* [2.6.22 - 2.6.26] fix-migrating-softirq.patch {C::bug::hang::migration::migration::restrict irq migration}
  + [[file:2.6.22/fix-migrating-softirq.patch][2.6.22]]
    [[file:2.6.23/fix-migrating-softirq.patch][2.6.23]]
    [[file:2.6.24/fix-migrating-softirq.patch][2.6.24]]
    [[file:2.6.25/fix-migrating-softirq.patch][2.6.25]]
    [[file:2.6.26/fix-migrating-softirq.patch][2.6.26]]
  - 2.6.29
* [2.6.22 - 2.6.26] lockstat_bounce_rt.patch {C::performance::mutex::move lock_acquired out}
  + [[file:2.6.22/lockstat_bounce_rt.patch][2.6.22]]
    [[file:2.6.23/lockstat_bounce_rt.patch][2.6.23]]
    [[file:2.6.24/lockstat_bounce_rt.patch][2.6.24]]
    [[file:2.6.25/lockstat_bounce_rt.patch][2.6.25]]
    [[file:2.6.26/lockstat_bounce_rt.patch][2.6.26]]
  - 2.6.29
* [2.6.22 - 2.6.26] powerpc 2.6.21-rt6: replace preempt_schedule w/ preempt_schedule_irq User-Agent: {C::bug::crash::overflow::irq::replace preempt_schedule() with preempt_schedule_irq()}
  + [[file:2.6.22/preempt-irqs-ppc-preempt-schedule-irq-entry-fix.patch][2.6.22]]
    [[file:2.6.23/preempt-irqs-ppc-preempt-schedule-irq-entry-fix.patch][2.6.23]]
    [[file:2.6.24/preempt-irqs-ppc-preempt-schedule-irq-entry-fix.patch][2.6.24]]
    [[file:2.6.25/preempt-irqs-ppc-preempt-schedule-irq-entry-fix.patch][2.6.25]]
  M [[file:2.6.26/preempt-irqs-ppc-preempt-schedule-irq-entry-fix.patch][2.6.26]]
  - 2.6.29
* [2.6.22 - 2.6.26] lockdep-more-entries.patch {C::maintain::refactor::increase val of two macros}
  + [[file:2.6.22/lockdep-more-entries.patch][2.6.22]]
    [[file:2.6.23/lockdep-more-entries.patch][2.6.23]]
    [[file:2.6.24/lockdep-more-entries.patch][2.6.24]]
    [[file:2.6.25/lockdep-more-entries.patch][2.6.25]]
    [[file:2.6.26/lockdep-more-entries.patch][2.6.26]]
  - 2.6.29
* [2.6.22 - 2.6.26] powerpc 2.6.21-rt1: convert spinlocks to raw ones for Celleb. {C::feature::rtsupport::replace with raw lock}
  + [[file:2.6.22/preempt-realtime-powerpc-celleb-raw-spinlocks.patch][2.6.22]]
    [[file:2.6.23/preempt-realtime-powerpc-celleb-raw-spinlocks.patch][2.6.23]]
    [[file:2.6.24/preempt-realtime-powerpc-celleb-raw-spinlocks.patch][2.6.24]]
    [[file:2.6.25/preempt-realtime-powerpc-celleb-raw-spinlocks.patch][2.6.25]]
  m [[file:2.6.26/preempt-realtime-powerpc-celleb-raw-spinlocks.patch][2.6.26]]
  - 2.6.29
* [2.6.22 - 2.6.26] preempt-irqs-ppc-fix-b6.patch {C::bug::crash::irq::irq::set soft/hard enable}
  + [[file:2.6.22/preempt-irqs-ppc-fix-b6.patch][2.6.22]]
    [[file:2.6.23/preempt-irqs-ppc-fix-b6.patch][2.6.23]]
    [[file:2.6.24/preempt-irqs-ppc-fix-b6.patch][2.6.24]]
    [[file:2.6.25/preempt-irqs-ppc-fix-b6.patch][2.6.25]]
    [[file:2.6.26/preempt-irqs-ppc-fix-b6.patch][2.6.26]]
  - 2.6.29
* [2.6.22 - 2.6.26] reduce pagetable-freeing latencies {C::performance::preempt::reduce latency}
  + [[file:2.6.22/mm-fix-latency.patch][2.6.22]]
    [[file:2.6.23/mm-fix-latency.patch][2.6.23]]
  m [[file:2.6.24/mm-fix-latency.patch][2.6.24]]
    [[file:2.6.25/mm-fix-latency.patch][2.6.25]]
    [[file:2.6.26/mm-fix-latency.patch][2.6.26]]
  - 2.6.29
* [2.6.22 - 2.6.26] preempt-realtime-powerpc-b4.patch {C::bug::crash::preempt::preempt::preempt_disable added}
  + [[file:2.6.22/preempt-realtime-powerpc-b4.patch][2.6.22]]
    [[file:2.6.23/preempt-realtime-powerpc-b4.patch][2.6.23]]
    [[file:2.6.24/preempt-realtime-powerpc-b4.patch][2.6.24]]
    [[file:2.6.25/preempt-realtime-powerpc-b4.patch][2.6.25]]
    [[file:2.6.26/preempt-realtime-powerpc-b4.patch][2.6.26]]
  - 2.6.29
* [2.6.22 - 2.6.26] preempt-irqs-ppc-fix-b5.patch {C::bug::crash::hardware::hardware::boot time err, rm field}
  + [[file:2.6.22/preempt-irqs-ppc-fix-b5.patch][2.6.22]]
    [[file:2.6.23/preempt-irqs-ppc-fix-b5.patch][2.6.23]]
    [[file:2.6.24/preempt-irqs-ppc-fix-b5.patch][2.6.24]]
    [[file:2.6.25/preempt-irqs-ppc-fix-b5.patch][2.6.25]]
    [[file:2.6.26/preempt-irqs-ppc-fix-b5.patch][2.6.26]]
  - 2.6.29
* [2.6.22 - 2.6.26] mm: speculative get page {C::performance::mm::speculative get page}
  + [[file:2.6.22/mm-speculative-get-page.patch][2.6.22]]
  M [[file:2.6.23/2.6.21-rc6-lockless6-speculative-get-page.patch][2.6.23]]
    [[file:2.6.24/2.6.21-rc6-lockless6-speculative-get-page.patch][2.6.24]]
  m [[file:2.6.25/2.6.21-rc6-lockless6-speculative-get-page.patch][2.6.25]]
  M [[file:2.6.26/2.6.21-rc6-lockless6-speculative-get-page.patch][2.6.26]]
  - 2.6.29
* [2.6.22 - 2.6.26] nmi-driven profiling for /proc/profile {C::feature::debuginfo::nmi profiling}
  + [[file:2.6.22/nmi-profiling-base.patch][2.6.22]]
  m [[file:2.6.23/nmi-profiling-base.patch][2.6.23]]
  M [[file:2.6.24/nmi-profiling-base.patch][2.6.24]]
  M [[file:2.6.25/nmi-profiling-base.patch][2.6.25]]
  M [[file:2.6.26/nmi-profiling-base.patch][2.6.26]]
  - 2.6.29
* [2.6.22 - 2.6.26] ppc-gtod-notrace-fix.patch {C::feature::debuginfo::add notrace}
  + [[file:2.6.22/ppc-gtod-notrace-fix.patch][2.6.22]]
    [[file:2.6.23/ppc-gtod-notrace-fix.patch][2.6.23]]
  m [[file:2.6.24/ppc-gtod-notrace-fix.patch][2.6.24]]
    [[file:2.6.25/ppc-gtod-notrace-fix.patch][2.6.25]]
    [[file:2.6.26/ppc-gtod-notrace-fix.patch][2.6.26]]
  - 2.6.29
* [2.6.22 - 2.6.26] lock_list - a fine grain locked double linked list {C::feature::rtsupport::lock double link list}
  + [[file:2.6.22/lock_list.patch][2.6.22]]
  M [[file:2.6.23/lock_list.patch][2.6.23]]
  m [[file:2.6.24/lock_list.patch][2.6.24]]
    [[file:2.6.25/lock_list.patch][2.6.25]]
  m [[file:2.6.26/lock_list.patch][2.6.26]]
  - 2.6.29
* [2.6.22 - 2.6.26] preempt-realtime-supress-nohz-softirq-warning.patch {C::feature::debuginfo::add preempt rt config}
  + [[file:2.6.22/preempt-realtime-supress-nohz-softirq-warning.patch][2.6.22]]
    [[file:2.6.23/preempt-realtime-supress-nohz-softirq-warning.patch][2.6.23]]
    [[file:2.6.24/preempt-realtime-supress-nohz-softirq-warning.patch][2.6.24]]
  m [[file:2.6.25/preempt-realtime-supress-nohz-softirq-warning.patch][2.6.25]]
  m [[file:2.6.26/preempt-realtime-supress-nohz-softirq-warning.patch][2.6.26]]
  - 2.6.29
* [2.6.22 - 2.6.26] latency-measurement-drivers.patch {C::feature::debuginfo::add latency measurement driver}
  + [[file:2.6.22/latency-measurement-drivers.patch][2.6.22]]
  m [[file:2.6.23/latency-measurement-drivers.patch][2.6.23]]
    [[file:2.6.24/latency-measurement-drivers.patch][2.6.24]]
  M [[file:2.6.25/latency-measurement-drivers.patch][2.6.25]]
    [[file:2.6.26/latency-measurement-drivers.patch][2.6.26]]
  - 2.6.29
* [2.6.22 - 2.6.26] mm: lockless pagecache lookups {C::performance::mutex::pagecache lookup}
  + [[file:2.6.22/mm-lockless-pagecache-lookups.patch][2.6.22]]
  M [[file:2.6.23/2.6.21-rc6-lockless7-lockless-pagecache-lookups.patch][2.6.23]]
  M [[file:2.6.24/2.6.21-rc6-lockless7-lockless-pagecache-lookups.patch][2.6.24]]
  M [[file:2.6.25/2.6.21-rc6-lockless7-lockless-pagecache-lookups.patch][2.6.25]]
    [[file:2.6.26/2.6.21-rc6-lockless7-lockless-pagecache-lookups.patch][2.6.26]]
  - 2.6.29
* [2.6.22 - 2.6.26] preempt-irqs-x86-64-ioapic-mask-quirk.patch {C::feature::rtsupport::add fun}
  + [[file:2.6.22/preempt-irqs-x86-64-ioapic-mask-quirk.patch][2.6.22]]
  M [[file:2.6.23/preempt-irqs-x86-64-ioapic-mask-quirk.patch][2.6.23]]
    [[file:2.6.24/preempt-irqs-x86-64-ioapic-mask-quirk.patch][2.6.24]]
    [[file:2.6.25/preempt-irqs-x86-64-ioapic-mask-quirk.patch][2.6.25]]
    [[file:2.6.26/preempt-irqs-x86-64-ioapic-mask-quirk.patch][2.6.26]]
  - 2.6.29
* [2.6.22 - 2.6.26] preempt-realtime-debug-sysctl.patch {C::feature::debuginfo::add config, add fun, and kinds of field}
  + [[file:2.6.22/preempt-realtime-debug-sysctl.patch][2.6.22]]
    [[file:2.6.23/preempt-realtime-debug-sysctl.patch][2.6.23]]
  M [[file:2.6.24/preempt-realtime-debug-sysctl.patch][2.6.24]]
  M [[file:2.6.25/preempt-realtime-debug-sysctl.patch][2.6.25]]
  M [[file:2.6.26/preempt-realtime-debug-sysctl.patch][2.6.26]]
  - 2.6.29
* [2.6.22 - 2.6.26] preempt-realtime-powerpc-b2.patch {C::bug::crash::preempt::preempt::replace with raw}
  + [[file:2.6.22/preempt-realtime-powerpc-b2.patch][2.6.22]]
    [[file:2.6.23/preempt-realtime-powerpc-b2.patch][2.6.23]]
  m [[file:2.6.24/preempt-realtime-powerpc-b2.patch][2.6.24]]
    [[file:2.6.25/preempt-realtime-powerpc-b2.patch][2.6.25]]
    [[file:2.6.26/preempt-realtime-powerpc-b2.patch][2.6.26]]
  - 2.6.29
* [2.6.22 - 2.6.26] fix-softirq-checks-for-non-rt-preempt-hardirq.patch {C::maintain::refactor::change config}
  + [[file:2.6.22/fix-softirq-checks-for-non-rt-preempt-hardirq.patch][2.6.22]]
    [[file:2.6.23/fix-softirq-checks-for-non-rt-preempt-hardirq.patch][2.6.23]]
    [[file:2.6.24/fix-softirq-checks-for-non-rt-preempt-hardirq.patch][2.6.24]]
    [[file:2.6.25/fix-softirq-checks-for-non-rt-preempt-hardirq.patch][2.6.25]]
    [[file:2.6.26/fix-softirq-checks-for-non-rt-preempt-hardirq.patch][2.6.26]]
  - 2.6.29
* [2.6.22 - 2.6.26] s_files: free_write_pipe() fix {C::bug::data_err::order::sync::add cleanup var}
  + [[file:2.6.22/s_files-pipe-fix.patch][2.6.22]]
    [[file:2.6.23/s_files-pipe-fix.patch][2.6.23]]
    [[file:2.6.24/s_files-pipe-fix.patch][2.6.24]]
    [[file:2.6.25/s_files-pipe-fix.patch][2.6.25]]
  M [[file:2.6.26/s_files-pipe-fix.patch][2.6.26]]
  - 2.6.29
* [2.6.22 - 2.6.26] softirq preemption: optimization {C::performance::softirq::allowing hardirq context to pick up softirq processing}
  + [[file:2.6.22/new-softirq-code.patch][2.6.22]]
  M [[file:2.6.23/new-softirq-code.patch][2.6.23]]
    [[file:2.6.24/new-softirq-code.patch][2.6.24]]
  M [[file:2.6.25/new-softirq-code.patch][2.6.25]]
    [[file:2.6.26/new-softirq-code.patch][2.6.26]]
  - 2.6.29
* [2.6.22 - 2.6.26] nf_conntrack-weird-crash-fix.patch {C::bug::crash::uninit_var::memory::init per cpu spin_lock}
  + [[file:2.6.22/nf_conntrack-weird-crash-fix.patch][2.6.22]]
  m [[file:2.6.23/nf_conntrack-weird-crash-fix.patch][2.6.23]]
    [[file:2.6.24/nf_conntrack-weird-crash-fix.patch][2.6.24]]
    [[file:2.6.25/nf_conntrack-weird-crash-fix.patch][2.6.25]]
    [[file:2.6.26/nf_conntrack-weird-crash-fix.patch][2.6.26]]
  - 2.6.29
* [2.6.22 - 2.6.26] x86_64: do not enable the NMI watchdog by default {C::feature::hardware::disable default nmi watchdog}
  + [[file:2.6.22/nmi-watchdog-disable.patch][2.6.22]]
    [[file:2.6.23/nmi-watchdog-disable.patch][2.6.23]]
  m [[file:2.6.24/nmi-watchdog-disable.patch][2.6.24]]
  M [[file:2.6.25/nmi-watchdog-disable.patch][2.6.25]]
  M [[file:2.6.26/nmi-watchdog-disable.patch][2.6.26]]
  - 2.6.29
* [2.6.22 - 2.6.26] latency-tracing-ppc.patch {C::feature::debuginfo::add notrace on some fun in ppc}
  + [[file:2.6.22/latency-tracing-ppc.patch][2.6.22]]
  M [[file:2.6.23/latency-tracing-ppc.patch][2.6.23]]
  M [[file:2.6.24/latency-tracing-ppc.patch][2.6.24]]
    [[file:2.6.25/latency-tracing-ppc.patch][2.6.25]]
    [[file:2.6.26/latency-tracing-ppc.patch][2.6.26]]
  - 2.6.29
* [2.6.22 - 2.6.26] preempt-realtime-sound.patch {C::feature::debuginfo::invoke user_trace_stop}
  + [[file:2.6.22/preempt-realtime-sound.patch][2.6.22]]
    [[file:2.6.23/preempt-realtime-sound.patch][2.6.23]]
    [[file:2.6.24/preempt-realtime-sound.patch][2.6.24]]
  M [[file:2.6.25/preempt-realtime-sound.patch][2.6.25]]
    [[file:2.6.26/preempt-realtime-sound.patch][2.6.26]]
  - 2.6.29
* [2.6.22 - 2.6.26] rt-mutex-ppc-fix-a5.patch {C::bug::compile::compiling_err::semantics::replace with raw}
  + [[file:2.6.22/rt-mtex-ppc-fix-a5.patch][2.6.22]]
    [[file:2.6.23/rt-mutex-ppc-fix-a5.patch][2.6.23]]
    [[file:2.6.24/rt-mutex-ppc-fix-a5.patch][2.6.24]]
    [[file:2.6.25/rt-mutex-ppc-fix-a5.patch][2.6.25]]
    [[file:2.6.26/rt-mutex-ppc-fix-a5.patch][2.6.26]]
  - 2.6.29
* [2.6.22 - 2.6.26] preempt-realtime-ia64.patch {C::feature::rtsupport::rt ia64}
  + [[file:2.6.22/preempt-realtime-ia64.patch][2.6.22]]
  M [[file:2.6.23/preempt-realtime-ia64.patch][2.6.23]]
  M [[file:2.6.24/preempt-realtime-ia64.patch][2.6.24]]
  M [[file:2.6.25/preempt-realtime-ia64.patch][2.6.25]]
  M [[file:2.6.26/preempt-realtime-ia64.patch][2.6.26]]
  - 2.6.29
* [2.6.22 - 2.6.26] powerpc 2.6.21-rt1: reduce scheduling latency by changing tlb flush size {C::performance::smallsize::pend flush tlb}
  + [[file:2.6.22/preempt-realtime-powerpc-tlb-batching.patch][2.6.22]]
    [[file:2.6.23/preempt-realtime-powerpc-tlb-batching.patch][2.6.23]]
    [[file:2.6.24/preempt-realtime-powerpc-tlb-batching.patch][2.6.24]]
    [[file:2.6.25/preempt-realtime-powerpc-tlb-batching.patch][2.6.25]]
    [[file:2.6.26/preempt-realtime-powerpc-tlb-batching.patch][2.6.26]]
  - 2.6.29
* [2.6.22 - 2.6.26] preempt-realtime-profiling.patch {C::feature::debuginfo::add check prof_pid}
  + [[file:2.6.22/preempt-realtime-profiling.patch][2.6.22]]
  M [[file:2.6.23/preempt-realtime-profiling.patch][2.6.23]]
    [[file:2.6.24/preempt-realtime-profiling.patch][2.6.24]]
  m [[file:2.6.25/preempt-realtime-profiling.patch][2.6.25]]
  m [[file:2.6.26/preempt-realtime-profiling.patch][2.6.26]]
  - 2.6.29
* [2.6.22 - 2.6.26] percpu-locked-netfilter2.patch {C::feature::rtsupport::lock some percpu var}
  + [[file:2.6.22/percpu-locked-netfilter2.patch][2.6.22]]
  m [[file:2.6.23/percpu-locked-netfilter2.patch][2.6.23]]
    [[file:2.6.24/percpu-locked-netfilter2.patch][2.6.24]]
  m [[file:2.6.25/percpu-locked-netfilter2.patch][2.6.25]]
    [[file:2.6.26/percpu-locked-netfilter2.patch][2.6.26]]
  - 2.6.29
* [2.6.22 - 2.6.26] panic-dont-stop-box.patch {C::maintain::refactor::comment one fun}
  + [[file:2.6.22/panic-dont-stop-box.patch][2.6.22]]
    [[file:2.6.23/panic-dont-stop-box.patch][2.6.23]]
    [[file:2.6.24/panic-dont-stop-box.patch][2.6.24]]
    [[file:2.6.25/panic-dont-stop-box.patch][2.6.25]]
    [[file:2.6.26/panic-dont-stop-box.patch][2.6.26]]
  - 2.6.29
* [2.6.22 - 2.6.26] preempt-realtime-powerpc-update.patch {C::feature::rtsupport::replace with some preempt api}
  + [[file:2.6.22/preempt-realtime-powerpc-update.patch][2.6.22]]
    [[file:2.6.23/preempt-realtime-powerpc-update.patch][2.6.23]]
  m [[file:2.6.24/preempt-realtime-powerpc-update.patch][2.6.24]]
    [[file:2.6.25/preempt-realtime-powerpc-update.patch][2.6.25]]
    [[file:2.6.26/preempt-realtime-powerpc-update.patch][2.6.26]]
  - 2.6.29
* [2.6.22 - 2.6.26] arm-latency-tracer-support.patch {C::feature::debuginfo::add support of latency tracing}
  + [[file:2.6.22/arm-latency-tracer-support.patch][2.6.22]]
    [[file:2.6.23/arm-latency-tracer-support.patch][2.6.23]]
    [[file:2.6.24/arm-latency-tracer-support.patch][2.6.24]]
  m [[file:2.6.25/arm-latency-tracer-support.patch][2.6.25]]
    [[file:2.6.26/arm-latency-tracer-support.patch][2.6.26]]
  - 2.6.29
* [2.6.22 - 2.6.26] preempt-irqs-mips.patch {C::feature::rtsupport::add IRQF_NODELAY to field}
  + [[file:2.6.22/preempt-irqs-mips.patch][2.6.22]]
    [[file:2.6.23/preempt-irqs-mips.patch][2.6.23]]
  M [[file:2.6.24/preempt-irqs-mips.patch][2.6.24]]
    [[file:2.6.25/preempt-irqs-mips.patch][2.6.25]]
    [[file:2.6.26/preempt-irqs-mips.patch][2.6.26]]
  - 2.6.29
* [2.6.22 - 2.6.26] rt-mutex-ppc.patch {C::feature::rtsupport::rename some fun, add fun}
  + [[file:2.6.22/rt-mutex-ppc.patch][2.6.22]]
  m [[file:2.6.23/rt-mutex-ppc.patch][2.6.23]]
  M [[file:2.6.24/rt-mutex-ppc.patch][2.6.24]]
  M [[file:2.6.25/rt-mutex-ppc.patch][2.6.25]]
  M [[file:2.6.26/rt-mutex-ppc.patch][2.6.26]]
  - 2.6.29
* [2.6.22 - 2.6.26] hrtimers-overrun-api.patch {C::feature::rtsupport::hrtimer overrun}
  + [[file:2.6.22/hrtimers-overrun-api.patch][2.6.22]]
    [[file:2.6.23/hrtimers-overrun-api.patch][2.6.23]]
    [[file:2.6.24/hrtimers-overrun-api.patch][2.6.24]]
  m [[file:2.6.25/hrtimers-overrun-api.patch][2.6.25]]
    [[file:2.6.26/hrtimers-overrun-api.patch][2.6.26]]
  - 2.6.29
* [2.6.22 - 2.6.26] rcu-hrt-fixups.patch {C::feature::rtsupport::replace irq_able with irq_restore pairs, add fun rcu advance callbacks}
  + [[file:2.6.22/rcu-hrt-fixups.patch][2.6.22]]
  M [[file:2.6.23/rcu-hrt-fixups.patch][2.6.23]]
    [[file:2.6.24/rcu-hrt-fixups.patch][2.6.24]]
  M [[file:2.6.25/rcu-hrt-fixups.patch][2.6.25]]
  m [[file:2.6.26/rcu-hrt-fixups.patch][2.6.26]]
  - 2.6.29
* [2.6.22 - 2.6.29] msi: suspend resume workaround {C::feature::check::warning when get_irq_msi fail}
  + [[file:2.6.22/msi-suspend-resume-workaround.patch][2.6.22]]
    [[file:2.6.23/msi-suspend-resume-workaround.patch][2.6.23]]
  M [[file:2.6.24/msi-suspend-resume-workaround.patch][2.6.24]]
    [[file:2.6.25/msi-suspend-resume-workaround.patch][2.6.25]]
    [[file:2.6.26/msi-suspend-resume-workaround.patch][2.6.26]]
    [[file:2.6.29/msi-suspend-resume-workaround.patch][2.6.29]]
  - 3.0
* [2.6.22 - 2.6.29] tasklet: busy loop hack {C::maintain::refactor::move a fun, add msleep(1)?}
  + [[file:2.6.22/tasklet-busy-loop-hack.patch][2.6.22]]
  m [[file:2.6.23/tasklet-busy-loop-hack.patch][2.6.23]]
    [[file:2.6.24/tasklet-busy-loop-hack.patch][2.6.24]]
  m [[file:2.6.25/tasklet-busy-loop-hack.patch][2.6.25]]
    [[file:2.6.26/tasklet-busy-loop-hack.patch][2.6.26]]
  m [[file:2.6.29/tasklet-busy-loop-hack.patch][2.6.29]]
  - 3.0
* [2.6.22 - 2.6.29] preempt: realtime rcu {C::feature::rtsupport::replace with raw}
  + [[file:2.6.22/preempt-realtime-rcu.patch][2.6.22]]
  M [[file:2.6.23/preempt-realtime-rcu.patch][2.6.23]]
    [[file:2.6.24/preempt-realtime-rcu.patch][2.6.24]]
  M [[file:2.6.25/preempt-realtime-rcu.patch][2.6.25]]
  M [[file:2.6.26/preempt-realtime-rcu.patch][2.6.26]]
  M [[file:2.6.29/preempt-realtime-rcu.patch][2.6.29]]
  - 3.0
* [2.6.22 - 2.6.29] rt: mutex core {C::feature::rtsupport::rt mutex}
  + [[file:2.6.22/rt-mutex-core.patch][2.6.22]]
  M [[file:2.6.23/rt-mutex-core.patch][2.6.23]]
  M [[file:2.6.24/rt-mutex-core.patch][2.6.24]]
  M [[file:2.6.25/rt-mutex-core.patch][2.6.25]]
  M [[file:2.6.26/rt-mutex-core.patch][2.6.26]]
  M [[file:2.6.29/rt-mutex-core.patch][2.6.29]]
  - 3.0
* [2.6.22 - 2.6.29] preempt: irqs timer {C::feature::rtsupport::add case softirq resched}
  + [[file:2.6.22/preempt-irqs-timer.patch][2.6.22]]
  M [[file:2.6.23/preempt-irqs-timer.patch][2.6.23]]
  m [[file:2.6.24/preempt-irqs-timer.patch][2.6.24]]
  M [[file:2.6.25/preempt-irqs-timer.patch][2.6.25]]
  m [[file:2.6.26/preempt-irqs-timer.patch][2.6.26]]
  M [[file:2.6.29/preempt-irqs-timer.patch][2.6.29]]
  - 3.0
* [2.6.22 - 2.6.29] patches/preempt-irqs-hrtimer.patch {C::feature::rtsupport::add wait and wake timer pairs, wake up after the timer callback function finished execution}
  + [[file:2.6.22/preempt-irqs-hrtimer.patch][2.6.22]]
    [[file:2.6.23/preempt-irqs-hrtimer.patch][2.6.23]]
    [[file:2.6.24/preempt-irqs-hrtimer.patch][2.6.24]]
  M [[file:2.6.25/preempt-irqs-hrtimer.patch][2.6.25]]
    [[file:2.6.26/preempt-irqs-hrtimer.patch][2.6.26]]
  M [[file:2.6.29/preempt-irqs-hrtimer.patch][2.6.29]]
  - 3.0
* [2.6.22 - 2.6.29] patches/print-might-sleep-hack.patch {C::feature::rtsupport::add printk might_sleep}
  + [[file:2.6.22/print-might-sleep-hack.patch][2.6.22]]
    [[file:2.6.23/print-might-sleep-hack.patch][2.6.23]]
  m [[file:2.6.24/print-might-sleep-hack.patch][2.6.24]]
  M [[file:2.6.25/print-might-sleep-hack.patch][2.6.25]]
    [[file:2.6.26/print-might-sleep-hack.patch][2.6.26]]
  m [[file:2.6.29/print-might-sleep-hack.patch][2.6.29]]
  - 3.0
* [2.6.22 - 2.6.29] arm-preempt-config.patch {C::feature::rtsupport::Kconfig source from Kconfig.preempt}
  + [[file:2.6.22/arm-preempt-config.patch][2.6.22]]
  M [[file:2.6.23/arm-preempt-config.patch][2.6.23]]
    [[file:2.6.24/arm-preempt-config.patch][2.6.24]]
    [[file:2.6.25/arm-preempt-config.patch][2.6.25]]
    [[file:2.6.26/arm-preempt-config.patch][2.6.26]]
  m [[file:2.6.29/arm-preempt-config.patch][2.6.29]]
  - 3.0
* [2.6.22 - 2.6.29] preempt: realtime net {C::feature::rtsupport::replace with raw}
  + [[file:2.6.22/preempt-realtime-net.patch][2.6.22]]
  M [[file:2.6.23/preempt-realtime-net.patch][2.6.23]]
  M [[file:2.6.24/preempt-realtime-net.patch][2.6.24]]
  M [[file:2.6.25/preempt-realtime-net.patch][2.6.25]]
  M [[file:2.6.26/preempt-realtime-net.patch][2.6.26]]
  M [[file:2.6.29/preempt-realtime-net.patch][2.6.29]]
  - 3.0
* [2.6.22 - 2.6.29] rt-friendly per-cpu pages {C::feature::rtsupport::add fun with rt api, replace original}
  + [[file:2.6.22/rt-page_alloc.patch][2.6.22]]
  m [[file:2.6.23/rt-page_alloc.patch][2.6.23]]
  M [[file:2.6.24/rt-page_alloc.patch][2.6.24]]
  M [[file:2.6.25/rt-page_alloc.patch][2.6.25]]
  m [[file:2.6.26/rt-page_alloc.patch][2.6.26]]
  M [[file:2.6.29/rt-page_alloc.patch][2.6.29]]
  - 3.0
* [2.6.22 - 2.6.29] x86_64: tsc sync irqflags fix {C::feature::rtsupport::irq_enable}
  + [[file:2.6.22/x86_64-tsc-sync-irqflags-fix.patch][2.6.22]]
    [[file:2.6.23/x86_64-tsc-sync-irqflags-fix.patch][2.6.23]]
    [[file:2.6.24/x86_64-tsc-sync-irqflags-fix.patch][2.6.24]]
    [[file:2.6.25/x86_64-tsc-sync-irqflags-fix.patch][2.6.25]]
    [[file:2.6.26/x86_64-tsc-sync-irqflags-fix.patch][2.6.26]]
    [[file:2.6.29/x86_64-tsc-sync-irqflags-fix.patch][2.6.29]]
  - 3.0
* [2.6.22 - 2.6.29] patches/cputimer-thread-rt_A0.patch {C::feature::timer::restore posix timer}
  + [[file:2.6.22/cputimer-thread-rt_A0.patch][2.6.22]]
  m [[file:2.6.23/cputimer-thread-rt_A0.patch][2.6.23]]
  m [[file:2.6.24/cputimer-thread-rt_A0.patch][2.6.24]]
    [[file:2.6.25/cputimer-thread-rt_A0.patch][2.6.25]]
    [[file:2.6.26/cputimer-thread-rt_A0.patch][2.6.26]]
  M [[file:2.6.29/cputimer-thread-rt_A0.patch][2.6.29]]
  - 3.0
* [2.6.22 - 2.6.29] patches/rt-slab-new.patch {C::feature::rtsupport::replace old irq with rt}
  + [[file:2.6.22/rt-slab-new.patch][2.6.22]]
  M [[file:2.6.23/rt-slab-new.patch][2.6.23]]
  M [[file:2.6.24/rt-slab-new.patch][2.6.24]]
  M [[file:2.6.25/rt-slab-new.patch][2.6.25]]
  M [[file:2.6.26/rt-slab-new.patch][2.6.26]]
  M [[file:2.6.29/rt-slab-new.patch][2.6.29]]
  - 3.0
* [2.6.22 - 2.6.29] preempt: realtime irqs {C::feature::rtsupport::replace with rt, nort, raw etc}
  + [[file:2.6.22/preempt-realtime-irqs.patch][2.6.22]]
  M [[file:2.6.23/preempt-realtime-irqs.patch][2.6.23]]
  M [[file:2.6.24/preempt-realtime-irqs.patch][2.6.24]]
  M [[file:2.6.25/preempt-realtime-irqs.patch][2.6.25]]
    [[file:2.6.26/preempt-realtime-irqs.patch][2.6.26]]
  M [[file:2.6.29/preempt-realtime-irqs.patch][2.6.29]]
  - 3.0
* [2.6.22 - 2.6.29] patches/percpu-locked-netfilter.patch {C::feature::rtsupport::replace with raw and add per_cpu_lock}
  + [[file:2.6.22/percpu-locked-netfilter.patch][2.6.22]]
    [[file:2.6.23/percpu-locked-netfilter.patch][2.6.23]]
    [[file:2.6.24/percpu-locked-netfilter.patch][2.6.24]]
    [[file:2.6.25/percpu-locked-netfilter.patch][2.6.25]]
    [[file:2.6.26/percpu-locked-netfilter.patch][2.6.26]]
  m [[file:2.6.29/percpu-locked-netfilter.patch][2.6.29]]
  - 3.0
* [2.6.22 - 2.6.29] preempt: realtime warn and bug on {C::feature::rtsupport::add more bug entry macros}
  + [[file:2.6.22/preempt-realtime-warn-and-bug-on.patch][2.6.22]]
  M [[file:2.6.23/preempt-realtime-warn-and-bug-on.patch][2.6.23]]
    [[file:2.6.24/preempt-realtime-warn-and-bug-on.patch][2.6.24]]
    [[file:2.6.25/preempt-realtime-warn-and-bug-on.patch][2.6.25]]
    [[file:2.6.26/preempt-realtime-warn-and-bug-on.patch][2.6.26]]
    [[file:2.6.29/preempt-realtime-warn-and-bug-on.patch][2.6.29]]
  - 3.0
* [2.6.22 - 2.6.29] rt: mutex x86 64 {C::feature::rtsupport::replace with raw, add sched delayed}
  + [[file:2.6.22/rt-mutex-x86-64.patch][2.6.22]]
  M [[file:2.6.23/rt-mutex-x86-64.patch][2.6.23]]
  M [[file:2.6.24/rt-mutex-x86-64.patch][2.6.24]]
  M [[file:2.6.25/rt-mutex-x86-64.patch][2.6.25]]
  M [[file:2.6.26/rt-mutex-x86-64.patch][2.6.26]]
  M [[file:2.6.29/rt-mutex-x86-64.patch][2.6.29]]
  - 3.0
* [2.6.22 - 2.6.29] patches/preempt-realtime-x86_64.patch {C::feature::rtsupport::add preempt}
  + [[file:2.6.22/preempt-realtime-x86_64.patch][2.6.22]]
  M [[file:2.6.23/preempt-realtime-x86_64.patch][2.6.23]]
  M [[file:2.6.24/preempt-realtime-x86_64.patch][2.6.24]]
  M [[file:2.6.25/preempt-realtime-x86_64.patch][2.6.25]]
  M [[file:2.6.26/preempt-realtime-x86_64.patch][2.6.26]]
  M [[file:2.6.29/preempt-realtime-x86_64.patch][2.6.29]]
  - 3.0
* [2.6.22 - 2.6.29] floppy: suspend/resume fix {C::bug::idle::hardware::idle::add fun}
  + [[file:2.6.22/floppy-resume-fix.patch][2.6.22]]
    [[file:2.6.23/floppy-resume-fix.patch][2.6.23]]
    [[file:2.6.24/floppy-resume-fix.patch][2.6.24]]
  m [[file:2.6.25/floppy-resume-fix.patch][2.6.25]]
    [[file:2.6.26/floppy-resume-fix.patch][2.6.26]]
    [[file:2.6.29/floppy-resume-fix.patch][2.6.29]]
  - 3.0
* [2.6.22 - 2.6.29] call reboot notifier list when doing an emergency reboot {C::bug::hang::preempt::preempt::add emergency restart}
  + [[file:2.6.22/fix-emergency-reboot.patch][2.6.22]]
  m [[file:2.6.23/fix-emergency-reboot.patch][2.6.23]]
    [[file:2.6.24/fix-emergency-reboot.patch][2.6.24]]
    [[file:2.6.25/fix-emergency-reboot.patch][2.6.25]]
    [[file:2.6.26/fix-emergency-reboot.patch][2.6.26]]
  m [[file:2.6.29/fix-emergency-reboot.patch][2.6.29]]
  - 3.0
* [2.6.22 - 2.6.29] add rt stats to /proc/stat {C::feature::statistics::add rt stat to procfs}
  + [[file:2.6.22/kstat-add-rt-stats.patch][2.6.22]]
  M [[file:2.6.23/kstat-add-rt-stats.patch][2.6.23]]
  M [[file:2.6.24/kstat-add-rt-stats.patch][2.6.24]]
    [[file:2.6.25/kstat-add-rt-stats.patch][2.6.25]]
    [[file:2.6.26/kstat-add-rt-stats.patch][2.6.26]]
  M [[file:2.6.29/kstat-add-rt-stats.patch][2.6.29]]
  - 3.0
* [2.6.22 - 2.6.29] rt-mutex-arm.patch {C::feature::rtsupport::replace with rt api, rename, add fastcall}
  + [[file:2.6.22/rt-mutex-arm.patch][2.6.22]]
  m [[file:2.6.23/rt-mutex-arm.patch][2.6.23]]
  M [[file:2.6.24/rt-mutex-arm.patch][2.6.24]]
  M [[file:2.6.25/rt-mutex-arm.patch][2.6.25]]
  M [[file:2.6.26/rt-mutex-arm.patch][2.6.26]]
  M [[file:2.6.29/rt-mutex-arm.patch][2.6.29]]
  - 3.0
* [2.6.22 - 2.6.29] hrtimer: no printk {C::maintain::refactor::rm two printk in rt}
  + [[file:2.6.22/hrtimer-no-printk.patch][2.6.22]]
    [[file:2.6.23/hrtimer-no-printk.patch][2.6.23]]
  M [[file:2.6.24/hrtimer-no-printk.patch][2.6.24]]
  M [[file:2.6.25/hrtimer-no-printk.patch][2.6.25]]
    [[file:2.6.26/hrtimer-no-printk.patch][2.6.26]]
    [[file:2.6.29/hrtimer-no-printk.patch][2.6.29]]
  - 3.0
* [2.6.22 - 2.6.29] dont: unmask io_apic {C::feature::rtsupport::add cond check}
  + [[file:2.6.22/dont-unmask-io_apic.patch][2.6.22]]
    [[file:2.6.23/dont-unmask-io_apic.patch][2.6.23]]
    [[file:2.6.24/dont-unmask-io_apic.patch][2.6.24]]
  m [[file:2.6.25/dont-unmask-io_apic.patch][2.6.25]]
    [[file:2.6.26/dont-unmask-io_apic.patch][2.6.26]]
  M [[file:2.6.29/dont-unmask-io_apic.patch][2.6.29]]
  - 3.0
* [2.6.22 - 2.6.29] patches/jbd_assertions_smp_only.patch {C::maintain::refactor::unify api when smp or not}
  + [[file:2.6.22/jbd_assertions_smp_only.patch][2.6.22]]
    [[file:2.6.23/jbd_assertions_smp_only.patch][2.6.23]]
  m [[file:2.6.24/jbd_assertions_smp_only.patch][2.6.24]]
    [[file:2.6.25/jbd_assertions_smp_only.patch][2.6.25]]
    [[file:2.6.26/jbd_assertions_smp_only.patch][2.6.26]]
    [[file:2.6.29/jbd_assertions_smp_only.patch][2.6.29]]
  - 3.0
* [2.6.22 - 2.6.29] neptune: no at keyboard {C::feature::other::check input}
  + [[file:2.6.22/neptune-no-at-keyboard.patch][2.6.22]]
    [[file:2.6.23/neptune-no-at-keyboard.patch][2.6.23]]
    [[file:2.6.24/neptune-no-at-keyboard.patch][2.6.24]]
  m [[file:2.6.25/neptune-no-at-keyboard.patch][2.6.25]]
    [[file:2.6.26/neptune-no-at-keyboard.patch][2.6.26]]
    [[file:2.6.29/neptune-no-at-keyboard.patch][2.6.29]]
  - 3.0
* [2.6.22 - 2.6.29] net: core preempt fix {C::performance::preempt::move fun out of preempt_disable}
  + [[file:2.6.22/net-core-preempt-fix.patch][2.6.22]]
    [[file:2.6.23/net-core-preempt-fix.patch][2.6.23]]
    [[file:2.6.24/net-core-preempt-fix.patch][2.6.24]]
    [[file:2.6.25/net-core-preempt-fix.patch][2.6.25]]
    [[file:2.6.26/net-core-preempt-fix.patch][2.6.26]]
    [[file:2.6.29/net-core-preempt-fix.patch][2.6.29]]
  - 3.0
* [2.6.22 - 2.6.29] preempt-realtime-arm-footbridge.patch {C::feature::rtsupport::replace with raw}
  + [[file:2.6.22/preempt-realtime-arm-footbridge.patch][2.6.22]]
    [[file:2.6.23/preempt-realtime-arm-footbridge.patch][2.6.23]]
    [[file:2.6.24/preempt-realtime-arm-footbridge.patch][2.6.24]]
    [[file:2.6.25/preempt-realtime-arm-footbridge.patch][2.6.25]]
    [[file:2.6.26/preempt-realtime-arm-footbridge.patch][2.6.26]]
  M [[file:2.6.29/preempt-realtime-arm-footbridge.patch][2.6.29]]
  - 3.0
* [2.6.22 - 2.6.29] preempt: realtime ipc {C::feature::rtsupport::disable preempt, rm some mb}
  + [[file:2.6.22/preempt-realtime-ipc.patch][2.6.22]]
    [[file:2.6.23/preempt-realtime-ipc.patch][2.6.23]]
  m [[file:2.6.24/preempt-realtime-ipc.patch][2.6.24]]
    [[file:2.6.25/preempt-realtime-ipc.patch][2.6.25]]
    [[file:2.6.26/preempt-realtime-ipc.patch][2.6.26]]
  M [[file:2.6.29/preempt-realtime-ipc.patch][2.6.29]]
  - 3.0
* [2.6.22 - 2.6.29] patches/rt-kmap-scale-fix.patch {C::bug::deadlock::deadlock::semantics::keeping a free count & tracking kmap users}
  + [[file:2.6.22/rt-kmap-scale-fix.patch][2.6.22]]
    [[file:2.6.23/rt-kmap-scale-fix.patch][2.6.23]]
    [[file:2.6.24/rt-kmap-scale-fix.patch][2.6.24]]
  m [[file:2.6.25/rt-kmap-scale-fix.patch][2.6.25]]
    [[file:2.6.26/rt-kmap-scale-fix.patch][2.6.26]]
    [[file:2.6.29/rt-kmap-scale-fix.patch][2.6.29]]
  - 3.0
* [2.6.22 - 2.6.29] patches/loopback-revert.patch {C::performance::preempt::replace get_cpu_var with per_cpu}
  + [[file:2.6.22/loopback-revert.patch][2.6.22]]
    [[file:2.6.23/loopback-revert.patch][2.6.23]]
  M [[file:2.6.24/loopback-revert.patch][2.6.24]]
    [[file:2.6.25/loopback-revert.patch][2.6.25]]
    [[file:2.6.26/loopback-revert.patch][2.6.26]]
  m [[file:2.6.29/loopback-revert.patch][2.6.29]]
  - 3.0
* [2.6.22 - 2.6.29] preempt: irqs core {C::feature::rtsupport::preempt irqs}
  + [[file:2.6.22/preempt-irqs-core.patch][2.6.22]]
  M [[file:2.6.23/preempt-irqs-core.patch][2.6.23]]
  M [[file:2.6.24/preempt-irqs-core.patch][2.6.24]]
  m [[file:2.6.25/preempt-irqs-core.patch][2.6.25]]
  m [[file:2.6.26/preempt-irqs-core.patch][2.6.26]]
  M [[file:2.6.29/preempt-irqs-core.patch][2.6.29]]
  - 3.0
* [2.6.22 - 2.6.29] preempt: realtime timer {C::feature::rtsupport::replace with raw and nort, add some fun}
  + [[file:2.6.22/preempt-realtime-timer.patch][2.6.22]]
    [[file:2.6.23/preempt-realtime-timer.patch][2.6.23]]
  M [[file:2.6.24/preempt-realtime-timer.patch][2.6.24]]
  m [[file:2.6.25/preempt-realtime-timer.patch][2.6.25]]
  M [[file:2.6.26/preempt-realtime-timer.patch][2.6.26]]
  M [[file:2.6.29/preempt-realtime-timer.patch][2.6.29]]
  - 3.0
* [2.6.22 - 2.6.29] patches/irda-fix.patch {C::bug::crash::uninit_var::semantics::spinlock init after memcpy}
  + [[file:2.6.22/irda-fix.patch][2.6.22]]
    [[file:2.6.23/irda-fix.patch][2.6.23]]
    [[file:2.6.24/irda-fix.patch][2.6.24]]
    [[file:2.6.25/irda-fix.patch][2.6.25]]
    [[file:2.6.26/irda-fix.patch][2.6.26]]
    [[file:2.6.29/irda-fix.patch][2.6.29]]
  - 3.0
* [2.6.22 - 2.6.29] preempt-realtime-arm-shark.patch {C::feature::rtsupport::replace with raw}
  + [[file:2.6.22/preempt-realtime-arm-shark.patch][2.6.22]]
    [[file:2.6.23/preempt-realtime-arm-shark.patch][2.6.23]]
    [[file:2.6.24/preempt-realtime-arm-shark.patch][2.6.24]]
    [[file:2.6.25/preempt-realtime-arm-shark.patch][2.6.25]]
    [[file:2.6.26/preempt-realtime-arm-shark.patch][2.6.26]]
    [[file:2.6.29/preempt-realtime-arm-shark.patch][2.6.29]]
  - 3.0
* [2.6.22 - 2.6.29] preempt: realtime sched {C::feature::rtsupport::rt sched}
  + [[file:2.6.22/preempt-realtime-sched.patch][2.6.22]]
  M [[file:2.6.23/preempt-realtime-sched.patch][2.6.23]]
  M [[file:2.6.24/preempt-realtime-sched.patch][2.6.24]]
  M [[file:2.6.25/preempt-realtime-sched.patch][2.6.25]]
  M [[file:2.6.26/preempt-realtime-sched.patch][2.6.26]]
  M [[file:2.6.29/preempt-realtime-sched.patch][2.6.29]]
  - 3.0
* [2.6.22 - 2.6.29] preempt: realtime core {C::feature::rtsupport::mostly some rt config, replace with some rt api, add some preempt_disable}
  + [[file:2.6.22/preempt-realtime-core.patch][2.6.22]]
  M [[file:2.6.23/preempt-realtime-core.patch][2.6.23]]
  M [[file:2.6.24/preempt-realtime-core.patch][2.6.24]]
  M [[file:2.6.25/preempt-realtime-core.patch][2.6.25]]
  M [[file:2.6.26/preempt-realtime-core.patch][2.6.26]]
  M [[file:2.6.29/preempt-realtime-core.patch][2.6.29]]
  - 3.0
* [2.6.22 - 2.6.29] spinlock: trylock cleanup sungem {C::maintain::refactor::replace local_irq and spin_trylock with spin_trylock_irqsave}
  + [[file:2.6.22/spinlock-trylock-cleanup-sungem.patch][2.6.22]]
    [[file:2.6.23/spinlock-trylock-cleanup-sungem.patch][2.6.23]]
    [[file:2.6.24/spinlock-trylock-cleanup-sungem.patch][2.6.24]]
    [[file:2.6.25/spinlock-trylock-cleanup-sungem.patch][2.6.25]]
    [[file:2.6.26/spinlock-trylock-cleanup-sungem.patch][2.6.26]]
    [[file:2.6.29/spinlock-trylock-cleanup-sungem.patch][2.6.29]]
  - 3.0
* [2.6.22 - 2.6.29] preempt: realtime fs block {C::feature::rtsupport::add some irq_disable pair, reimplement some locks, and add some fun}
  + [[file:2.6.22/preempt-realtime-fs-block.patch][2.6.22]]
  m [[file:2.6.23/preempt-realtime-fs-block.patch][2.6.23]]
  M [[file:2.6.24/preempt-realtime-fs-block.patch][2.6.24]]
  M [[file:2.6.25/preempt-realtime-fs-block.patch][2.6.25]]
  M [[file:2.6.26/preempt-realtime-fs-block.patch][2.6.26]]
  M [[file:2.6.29/preempt-realtime-fs-block.patch][2.6.29]]
  - 3.0
* [2.6.22 - 2.6.29] preempt: realtime i386 {C::feature::rtsupport::rt i386}
  + [[file:2.6.22/preempt-realtime-i386.patch][2.6.22]]
  M [[file:2.6.23/preempt-realtime-i386.patch][2.6.23]]
  M [[file:2.6.24/preempt-realtime-i386.patch][2.6.24]]
  M [[file:2.6.25/preempt-realtime-i386.patch][2.6.25]]
  M [[file:2.6.26/preempt-realtime-i386.patch][2.6.26]]
  M [[file:2.6.29/preempt-realtime-i386.patch][2.6.29]]
  - 3.0
* [2.6.22 - 2.6.29] highmem: revert mainline {C::feature::other::rm fun}
  + [[file:2.6.22/highmem-revert-mainline.patch][2.6.22]]
    [[file:2.6.23/highmem-revert-mainline.patch][2.6.23]]
    [[file:2.6.24/highmem-revert-mainline.patch][2.6.24]]
  M [[file:2.6.25/highmem-revert-mainline.patch][2.6.25]]
    [[file:2.6.26/highmem-revert-mainline.patch][2.6.26]]
  m [[file:2.6.29/highmem-revert-mainline.patch][2.6.29]]
  - 3.0
* [2.6.22 - 2.6.29] patches/tasklet-redesign.patch {C::maintain::refactor::redesign tasklet}
  + [[file:2.6.22/tasklet-redesign.patch][2.6.22]]
    [[file:2.6.23/tasklet-redesign.patch][2.6.23]]
    [[file:2.6.24/tasklet-redesign.patch][2.6.24]]
  M [[file:2.6.25/tasklet-redesign.patch][2.6.25]]
  M [[file:2.6.26/tasklet-redesign.patch][2.6.26]]
  M [[file:2.6.29/tasklet-redesign.patch][2.6.29]]
  - 3.0
* [2.6.22 - 2.6.29] patches/random-driver-latency-fix.patch {C::performance::preempt::add an extra preempt_enable}
  + [[file:2.6.22/random-driver-latency-fix.patch][2.6.22]]
    [[file:2.6.23/random-driver-latency-fix.patch][2.6.23]]
    [[file:2.6.24/random-driver-latency-fix.patch][2.6.24]]
    [[file:2.6.25/random-driver-latency-fix.patch][2.6.25]]
  m [[file:2.6.26/random-driver-latency-fix.patch][2.6.26]]
    [[file:2.6.29/random-driver-latency-fix.patch][2.6.29]]
  - 3.0
* [2.6.22 - 2.6.29] patches/serial-locking-rt-cleanup.patch {C::maintain::refactor::unify spin_trylock and irq_save}
  + [[file:2.6.22/serial-locking-rt-cleanup.patch][2.6.22]]
  m [[file:2.6.23/serial-locking-rt-cleanup.patch][2.6.23]]
    [[file:2.6.24/serial-locking-rt-cleanup.patch][2.6.24]]
    [[file:2.6.25/serial-locking-rt-cleanup.patch][2.6.25]]
    [[file:2.6.26/serial-locking-rt-cleanup.patch][2.6.26]]
    [[file:2.6.29/serial-locking-rt-cleanup.patch][2.6.29]]
  - 3.0
* [2.6.22 - 2.6.29] patches/kmap-atomic-prepare.patch {C::feature::rtsupport::add preempt_enable}
  + [[file:2.6.22/kmap-atomic-prepare.patch][2.6.22]]
  m [[file:2.6.23/kmap-atomic-prepare.patch][2.6.23]]
    [[file:2.6.24/kmap-atomic-prepare.patch][2.6.24]]
    [[file:2.6.25/kmap-atomic-prepare.patch][2.6.25]]
  M [[file:2.6.26/kmap-atomic-prepare.patch][2.6.26]]
  M [[file:2.6.29/kmap-atomic-prepare.patch][2.6.29]]
  - 3.0
* [2.6.22 - 2.6.29] RT_utsname {C::maintain::donothing::makefile}
  + [[file:2.6.22/RT_utsname.patch][2.6.22]]
    [[file:2.6.23/RT_utsname.patch][2.6.23]]
  M [[file:2.6.24/RT_utsname.patch][2.6.24]]
  M [[file:2.6.25/RT_utsname.patch][2.6.25]]
    [[file:2.6.26/RT_utsname.patch][2.6.26]]
  m [[file:2.6.29/RT_utsname.patch][2.6.29]]
  - 3.0
* [2.6.22 - 2.6.29] preempt: realtime loopback {C::feature::rtsupport::replace with disable preempt api}
  + [[file:2.6.22/preempt-realtime-loopback.patch][2.6.22]]
    [[file:2.6.23/preempt-realtime-loopback.patch][2.6.23]]
    [[file:2.6.24/preempt-realtime-loopback.patch][2.6.24]]
    [[file:2.6.25/preempt-realtime-loopback.patch][2.6.25]]
    [[file:2.6.26/preempt-realtime-loopback.patch][2.6.26]]
    [[file:2.6.29/preempt-realtime-loopback.patch][2.6.29]]
  - 3.0
* [2.6.22 - 2.6.29] smp: processor id fixups {C::performance::preempt::rm preempt disable and replace it with per_cpu_var}
  + [[file:2.6.22/smp-processor-id-fixups.patch][2.6.22]]
    [[file:2.6.23/smp-processor-id-fixups.patch][2.6.23]]
  M [[file:2.6.24/smp-processor-id-fixups.patch][2.6.24]]
  M [[file:2.6.25/smp-processor-id-fixups.patch][2.6.25]]
    [[file:2.6.26/smp-processor-id-fixups.patch][2.6.26]]
  M [[file:2.6.29/smp-processor-id-fixups.patch][2.6.29]]
  - 3.0
* [2.6.22 - 2.6.29] preempt: realtime printk {C::feature::rtsupport::rt printk, replace with raw and add some preempt}
  + [[file:2.6.22/preempt-realtime-printk.patch][2.6.22]]
    [[file:2.6.23/preempt-realtime-printk.patch][2.6.23]]
    [[file:2.6.24/preempt-realtime-printk.patch][2.6.24]]
  M [[file:2.6.25/preempt-realtime-printk.patch][2.6.25]]
  M [[file:2.6.26/preempt-realtime-printk.patch][2.6.26]]
  M [[file:2.6.29/preempt-realtime-printk.patch][2.6.29]]
  - 3.0
* [2.6.22 - 2.6.29] timer: freq tweaks {C::maintain::refactor::modify dummy fun, add iteration}
  + [[file:2.6.22/timer-freq-tweaks.patch][2.6.22]]
    [[file:2.6.23/timer-freq-tweaks.patch][2.6.23]]
  m [[file:2.6.24/timer-freq-tweaks.patch][2.6.24]]
    [[file:2.6.25/timer-freq-tweaks.patch][2.6.25]]
    [[file:2.6.26/timer-freq-tweaks.patch][2.6.26]]
    [[file:2.6.29/timer-freq-tweaks.patch][2.6.29]]
  - 3.0
* [2.6.22 - 2.6.29] gtod: optimize {C::performance::smallsize::return when jiffies eqs last_tick, maybe kind of refactor i guess}
  + [[file:2.6.22/gtod-optimize.patch][2.6.22]]
  m [[file:2.6.23/gtod-optimize.patch][2.6.23]]
    [[file:2.6.24/gtod-optimize.patch][2.6.24]]
    [[file:2.6.25/gtod-optimize.patch][2.6.25]]
    [[file:2.6.26/gtod-optimize.patch][2.6.26]]
    [[file:2.6.29/gtod-optimize.patch][2.6.29]]
  - 3.0
* [2.6.22 - 2.6.29] patches/rt-mutex-compat-semaphores.patch {C::feature::rtsupport::replace with compat semaphores}
  + [[file:2.6.22/rt-mutex-compat-semaphores.patch][2.6.22]]
  M [[file:2.6.23/rt-mutex-compat-semaphores.patch][2.6.23]]
  M [[file:2.6.24/rt-mutex-compat-semaphores.patch][2.6.24]]
  M [[file:2.6.25/rt-mutex-compat-semaphores.patch][2.6.25]]
  M [[file:2.6.26/rt-mutex-compat-semaphores.patch][2.6.26]]
  M [[file:2.6.29/rt-mutex-compat-semaphores.patch][2.6.29]]
  - 3.0
* [2.6.22 - 2.6.29] lockdep-rt: annotate PREEMPT_RT DEFINE_MUTEX {C::feature::rtsupport::rename, replace with raw}
  + [[file:2.6.22/lockdep-rt-mutex.patch][2.6.22]]
    [[file:2.6.23/lockdep-rt-mutex.patch][2.6.23]]
    [[file:2.6.24/lockdep-rt-mutex.patch][2.6.24]]
    [[file:2.6.25/lockdep-rt-mutex.patch][2.6.25]]
    [[file:2.6.26/lockdep-rt-mutex.patch][2.6.26]]
    [[file:2.6.29/lockdep-rt-mutex.patch][2.6.29]]
  - 3.0
* [2.6.22 - 2.6.29] preempt-realtime-arm.patch {C::feature::rtsupport::replace api, add field}
  + [[file:2.6.22/preempt-realtime-arm.patch][2.6.22]]
  M [[file:2.6.23/preempt-realtime-arm.patch][2.6.23]]
    [[file:2.6.24/preempt-realtime-arm.patch][2.6.24]]
    [[file:2.6.25/preempt-realtime-arm.patch][2.6.25]]
  M [[file:2.6.26/preempt-realtime-arm.patch][2.6.26]]
  M [[file:2.6.29/preempt-realtime-arm.patch][2.6.29]]
  - 3.0
* [2.6.22 - 2.6.29] cputimer: thread rt fix {C::maintain::refactor::move codes}
  + [[file:2.6.22/cputimer-thread-rt-fix.patch][2.6.22]]
    [[file:2.6.23/cputimer-thread-rt-fix.patch][2.6.23]]
    [[file:2.6.24/cputimer-thread-rt-fix.patch][2.6.24]]
    [[file:2.6.25/cputimer-thread-rt-fix.patch][2.6.25]]
    [[file:2.6.26/cputimer-thread-rt-fix.patch][2.6.26]]
  M [[file:2.6.29/cputimer-thread-rt-fix.patch][2.6.29]]
  - 3.0
* [2.6.22 - 2.6.29] x86_64 GTOD: offer scalable vgettimeofday {C::bug::data_err::semantics::semantics::scalable vgettimeofday independently of tsc synchronize or not}
  + [[file:2.6.22/x86-64-tscless-vgettimeofday.patch][2.6.22]]
  M [[file:2.6.23/x86-64-tscless-vgettimeofday.patch][2.6.23]]
  M [[file:2.6.24/x86-64-tscless-vgettimeofday.patch][2.6.24]]
    [[file:2.6.25/x86-64-tscless-vgettimeofday.patch][2.6.25]]
    [[file:2.6.26/x86-64-tscless-vgettimeofday.patch][2.6.26]]
    [[file:2.6.29/x86-64-tscless-vgettimeofday.patch][2.6.29]]
  - 3.0
* [2.6.22 - 2.6.29] preempt: realtime console {C::maintain::refactor::add var}
  + [[file:2.6.22/preempt-realtime-console.patch][2.6.22]]
    [[file:2.6.23/preempt-realtime-console.patch][2.6.23]]
    [[file:2.6.24/preempt-realtime-console.patch][2.6.24]]
    [[file:2.6.25/preempt-realtime-console.patch][2.6.25]]
    [[file:2.6.26/preempt-realtime-console.patch][2.6.26]]
    [[file:2.6.29/preempt-realtime-console.patch][2.6.29]]
  - 3.0
* [2.6.22 - 2.6.29] patches/kprobes-preempt-fix.patch {C::performance::preempt::replace preempt_enable_no_resched preempt_enable with each other}
  + [[file:2.6.22/kprobes-preempt-fix.patch][2.6.22]]
    [[file:2.6.23/kprobes-preempt-fix.patch][2.6.23]]
    [[file:2.6.24/kprobes-preempt-fix.patch][2.6.24]]
  M [[file:2.6.25/kprobes-preempt-fix.patch][2.6.25]]
    [[file:2.6.26/kprobes-preempt-fix.patch][2.6.26]]
    [[file:2.6.29/kprobes-preempt-fix.patch][2.6.29]]
  - 3.0
* [2.6.22 - 2.6.29] NOHZ: local_softirq_pending with tickless {C::bug::softirq::softirq::softirq::replace fun}
  + [[file:2.6.22/preempt-realtime-net-softirq-fixups.patch][2.6.22]]
    [[file:2.6.23/preempt-realtime-net-softirq-fixups.patch][2.6.23]]
  M [[file:2.6.24/preempt-realtime-net-softirq-fixups.patch][2.6.24]]
    [[file:2.6.25/preempt-realtime-net-softirq-fixups.patch][2.6.25]]
    [[file:2.6.26/preempt-realtime-net-softirq-fixups.patch][2.6.26]]
    [[file:2.6.29/preempt-realtime-net-softirq-fixups.patch][2.6.29]]
  - 3.0
* [2.6.22 - 2.6.29] move: native irq {C::bug::irq::irq::irq::add init and check}
  + [[file:2.6.22/move-native-irq.patch][2.6.22]]
    [[file:2.6.23/move-native-irq.patch][2.6.23]]
    [[file:2.6.24/move-native-irq.patch][2.6.24]]
    [[file:2.6.25/move-native-irq.patch][2.6.25]]
    [[file:2.6.26/move-native-irq.patch][2.6.26]]
  m [[file:2.6.29/move-native-irq.patch][2.6.29]]
  - 3.0
* [2.6.22 - 2.6.29] preempt-irqs-arm.patch {C::feature::rtsupport::add nodelay to field}
  + [[file:2.6.22/preempt-irqs-arm.patch][2.6.22]]
    [[file:2.6.23/preempt-irqs-arm.patch][2.6.23]]
    [[file:2.6.24/preempt-irqs-arm.patch][2.6.24]]
    [[file:2.6.25/preempt-irqs-arm.patch][2.6.25]]
    [[file:2.6.26/preempt-irqs-arm.patch][2.6.26]]
    [[file:2.6.29/preempt-irqs-arm.patch][2.6.29]]
  - 3.0
* [2.6.22 - 2.6.29] preempt: realtime mm {C::feature::rtsupport::rt mm}
  + [[file:2.6.22/preempt-realtime-mm.patch][2.6.22]]
  m [[file:2.6.23/preempt-realtime-mm.patch][2.6.23]]
    [[file:2.6.24/preempt-realtime-mm.patch][2.6.24]]
    [[file:2.6.25/preempt-realtime-mm.patch][2.6.25]]
    [[file:2.6.26/preempt-realtime-mm.patch][2.6.26]]
  M [[file:2.6.29/preempt-realtime-mm.patch][2.6.29]]
  - 3.0
* [2.6.22 - 2.6.29] preempt: realtime compile fixes {C::maintain::refactor::reorder attribute}
  + [[file:2.6.22/preempt-realtime-compile-fixes.patch][2.6.22]]
    [[file:2.6.23/preempt-realtime-compile-fixes.patch][2.6.23]]
    [[file:2.6.24/preempt-realtime-compile-fixes.patch][2.6.24]]
    [[file:2.6.25/preempt-realtime-compile-fixes.patch][2.6.25]]
    [[file:2.6.26/preempt-realtime-compile-fixes.patch][2.6.26]]
    [[file:2.6.29/preempt-realtime-compile-fixes.patch][2.6.29]]
  - 3.0
* [2.6.22 - 2.6.29] paravirt: function pointer fix {C::maintain::refactor::add a wrap and config}
  + [[file:2.6.22/paravirt-function-pointer-fix.patch][2.6.22]]
  m [[file:2.6.23/paravirt-function-pointer-fix.patch][2.6.23]]
  m [[file:2.6.24/paravirt-function-pointer-fix.patch][2.6.24]]
  m [[file:2.6.25/paravirt-function-pointer-fix.patch][2.6.25]]
    [[file:2.6.26/paravirt-function-pointer-fix.patch][2.6.26]]
  m [[file:2.6.29/paravirt-function-pointer-fix.patch][2.6.29]]
  - 3.0
* [2.6.22 - 2.6.29] patches/rt-apis.patch {C::feature::rtsupport::add rt apis}
  + [[file:2.6.22/rt-apis.patch][2.6.22]]
  m [[file:2.6.23/rt-apis.patch][2.6.23]]
    [[file:2.6.24/rt-apis.patch][2.6.24]]
  m [[file:2.6.25/rt-apis.patch][2.6.25]]
    [[file:2.6.26/rt-apis.patch][2.6.26]]
  m [[file:2.6.29/rt-apis.patch][2.6.29]]
  - 3.0
* [2.6.22 - 2.6.29] patches/preempt-realtime-warn-and-bug-on-fix.patch {C::bug::compile::compiling_err::syntax::enclose with __ASSEMBLY__}
  + [[file:2.6.22/preempt-realtime-warn-and-bug-on-fix.patch][2.6.22]]
    [[file:2.6.23/preempt-realtime-warn-and-bug-on-fix.patch][2.6.23]]
    [[file:2.6.24/preempt-realtime-warn-and-bug-on-fix.patch][2.6.24]]
    [[file:2.6.25/preempt-realtime-warn-and-bug-on-fix.patch][2.6.25]]
    [[file:2.6.26/preempt-realtime-warn-and-bug-on-fix.patch][2.6.26]]
    [[file:2.6.29/preempt-realtime-warn-and-bug-on-fix.patch][2.6.29]]
  - 3.0
* [2.6.22 - 2.6.29] clean up the page fault disabling logic {C::maintain::refactor::disable pagefault cleanup, add cond check, rm mb and preempt check resched in pagefault}
  + [[file:2.6.22/pagefault-disable-cleanup.patch][2.6.22]]
  m [[file:2.6.23/pagefault-disable-cleanup.patch][2.6.23]]
    [[file:2.6.24/pagefault-disable-cleanup.patch][2.6.24]]
  M [[file:2.6.25/pagefault-disable-cleanup.patch][2.6.25]]
    [[file:2.6.26/pagefault-disable-cleanup.patch][2.6.26]]
  M [[file:2.6.29/pagefault-disable-cleanup.patch][2.6.29]]
  - 3.0
* [2.6.22 - 2.6.29] replace: bugon by warn on {C::maintain::refactor}
  + [[file:2.6.22/replace-bugon-by-warn-on.patch][2.6.22]]
  m [[file:2.6.23/replace-bugon-by-warn-on.patch][2.6.23]]
    [[file:2.6.24/replace-bugon-by-warn-on.patch][2.6.24]]
    [[file:2.6.25/replace-bugon-by-warn-on.patch][2.6.25]]
    [[file:2.6.26/replace-bugon-by-warn-on.patch][2.6.26]]
    [[file:2.6.29/replace-bugon-by-warn-on.patch][2.6.29]]
  - 3.0
* [2.6.22 - 2.6.29] softirq: per cpu assumptions fixes {C::maintain::refactor::transfer var instead of get it inside the fun, replace with raw}
  + [[file:2.6.22/softirq-per-cpu-assumptions-fixes.patch][2.6.22]]
  M [[file:2.6.23/softirq-per-cpu-assumptions-fixes.patch][2.6.23]]
    [[file:2.6.24/softirq-per-cpu-assumptions-fixes.patch][2.6.24]]
  M [[file:2.6.25/softirq-per-cpu-assumptions-fixes.patch][2.6.25]]
  m [[file:2.6.26/softirq-per-cpu-assumptions-fixes.patch][2.6.26]]
  M [[file:2.6.29/softirq-per-cpu-assumptions-fixes.patch][2.6.29]]
  - 3.0
* [2.6.22 - 2.6.29] preempt: irqs i386{C::feature::rtsupport::rt i386}
  + [[file:2.6.22/preempt-irqs-i386.patch][2.6.22]]
  M [[file:2.6.23/preempt-irqs-i386.patch][2.6.23]]
  M [[file:2.6.24/preempt-irqs-i386.patch][2.6.24]]
  M [[file:2.6.25/preempt-irqs-i386.patch][2.6.25]]
    [[file:2.6.26/preempt-irqs-i386.patch][2.6.26]]
  M [[file:2.6.29/preempt-irqs-i386.patch][2.6.29]]
  - 3.0
* [2.6.22 - 2.6.29] patches/ioapic-fix-too-fast-clocks.patch {C::bug::irq::irq::irq::add upper bound check to avoid clocks to go too fast}
  + [[file:2.6.22/ioapic-fix-too-fast-clocks.patch][2.6.22]]
    [[file:2.6.23/ioapic-fix-too-fast-clocks.patch][2.6.23]]
    [[file:2.6.24/ioapic-fix-too-fast-clocks.patch][2.6.24]]
  M [[file:2.6.25/ioapic-fix-too-fast-clocks.patch][2.6.25]]
    [[file:2.6.26/ioapic-fix-too-fast-clocks.patch][2.6.26]]
  m [[file:2.6.29/ioapic-fix-too-fast-clocks.patch][2.6.29]]
  - 3.0
* [2.6.22 - 2.6.29] preempt: realtime supress rtc printk {C::maintain::refactor::enclose warning with config}
  + [[file:2.6.22/preempt-realtime-supress-rtc-printk.patch][2.6.22]]
  m [[file:2.6.23/preempt-realtime-supress-rtc-printk.patch][2.6.23]]
    [[file:2.6.24/preempt-realtime-supress-rtc-printk.patch][2.6.24]]
  m [[file:2.6.25/preempt-realtime-supress-rtc-printk.patch][2.6.25]]
    [[file:2.6.26/preempt-realtime-supress-rtc-printk.patch][2.6.26]]
    [[file:2.6.29/preempt-realtime-supress-rtc-printk.patch][2.6.29]]
  - 3.0
* [2.6.22 - 2.6.29] patches/gcc-warnings-shut-up.patch {C::maintain::refactor::add init, reduce gcc warning}
  + [[file:2.6.22/gcc-warnings-shut-up.patch][2.6.22]]
  M [[file:2.6.23/gcc-warnings-shut-up.patch][2.6.23]]
  M [[file:2.6.24/gcc-warnings-shut-up.patch][2.6.24]]
  M [[file:2.6.25/gcc-warnings-shut-up.patch][2.6.25]]
  M [[file:2.6.26/gcc-warnings-shut-up.patch][2.6.26]]
  m [[file:2.6.29/gcc-warnings-shut-up.patch][2.6.29]]
  - 3.0
* [2.6.22 - 2.6.29] preempt: realtime acpi {C::feature::rtsupport::rt acpi}
  + [[file:2.6.22/preempt-realtime-acpi.patch][2.6.22]]
  M [[file:2.6.23/preempt-realtime-acpi.patch][2.6.23]]
  M [[file:2.6.24/preempt-realtime-acpi.patch][2.6.24]]
    [[file:2.6.25/preempt-realtime-acpi.patch][2.6.25]]
  m [[file:2.6.26/preempt-realtime-acpi.patch][2.6.26]]
  M [[file:2.6.29/preempt-realtime-acpi.patch][2.6.29]]
  - 3.0
* [2.6.22 - 2.6.29] preempt: rt no slub {C::feature::rtsupport::rm slub from rt}
  + [[file:2.6.22/preempt-rt-no-slub.patch][2.6.22]]
    [[file:2.6.23/preempt-rt-no-slub.patch][2.6.23]]
    [[file:2.6.24/preempt-rt-no-slub.patch][2.6.24]]
    [[file:2.6.25/preempt-rt-no-slub.patch][2.6.25]]
    [[file:2.6.26/preempt-rt-no-slub.patch][2.6.26]]
    [[file:2.6.29/preempt-rt-no-slub.patch][2.6.29]]
  - 3.0
* [2.6.22 - 2.6.29] patches/bh-uptodate-lock.patch {C::feature::rtsupport::replace api, add buginfo}
  + [[file:2.6.22/bh-uptodate-lock.patch][2.6.22]]
    [[file:2.6.23/bh-uptodate-lock.patch][2.6.23]]
  M [[file:2.6.24/bh-uptodate-lock.patch][2.6.24]]
    [[file:2.6.25/bh-uptodate-lock.patch][2.6.25]]
  m [[file:2.6.26/bh-uptodate-lock.patch][2.6.26]]
    [[file:2.6.29/bh-uptodate-lock.patch][2.6.29]]
  - 3.0
* [2.6.22 - 2.6.29] kmap: atomic i386 fix {C::feature::mm::add pagefault disable, and reorder mightsleep}
  + [[file:2.6.22/kmap-atomic-i386-fix.patch][2.6.22]]
    [[file:2.6.23/kmap-atomic-i386-fix.patch][2.6.23]]
    [[file:2.6.24/kmap-atomic-i386-fix.patch][2.6.24]]
    [[file:2.6.25/kmap-atomic-i386-fix.patch][2.6.25]]
    [[file:2.6.26/kmap-atomic-i386-fix.patch][2.6.26]]
  M [[file:2.6.29/kmap-atomic-i386-fix.patch][2.6.29]]
  - 3.0
* [2.6.22 - 2.6.29] preempt-realtime-arm-bagde4.patch {C::maintain::refactor::reorder code}
  + [[file:2.6.22/preempt-realtime-arm-bagde4.patch][2.6.22]]
    [[file:2.6.23/preempt-realtime-arm-bagde4.patch][2.6.23]]
    [[file:2.6.24/preempt-realtime-arm-bagde4.patch][2.6.24]]
  M [[file:2.6.25/preempt-realtime-arm-bagde4.patch][2.6.25]]
    [[file:2.6.26/preempt-realtime-arm-bagde4.patch][2.6.26]]
    [[file:2.6.29/preempt-realtime-arm-bagde4.patch][2.6.29]]
  - 3.0
* [2.6.22 - 2.6.29] patches/bh-state-lock.patch {C::bug::deadlock::deadlock::mutex::add another spinlock to track buffer header}
  + [[file:2.6.22/bh-state-lock.patch][2.6.22]]
    [[file:2.6.23/bh-state-lock.patch][2.6.23]]
    [[file:2.6.24/bh-state-lock.patch][2.6.24]]
    [[file:2.6.25/bh-state-lock.patch][2.6.25]]
    [[file:2.6.26/bh-state-lock.patch][2.6.26]]
    [[file:2.6.29/bh-state-lock.patch][2.6.29]]
  - 3.0
* [2.6.22 - 2.6.29] preempt: irqs Kconfig {C::feature::rtsupport::add Kconfig options}
  + [[file:2.6.22/preempt-irqs-Kconfig.patch][2.6.22]]
  M [[file:2.6.23/preempt-irqs-Kconfig.patch][2.6.23]]
  m [[file:2.6.24/preempt-irqs-Kconfig.patch][2.6.24]]
  m [[file:2.6.25/preempt-irqs-Kconfig.patch][2.6.25]]
    [[file:2.6.26/preempt-irqs-Kconfig.patch][2.6.26]]
  M [[file:2.6.29/preempt-irqs-Kconfig.patch][2.6.29]]
  - 3.0
* [2.6.22 - 2.6.29] preempt: realtime rawlocks {C::feature::rtsupport::replace with raw lock}
  + [[file:2.6.22/preempt-realtime-rawlocks.patch][2.6.22]]
  M [[file:2.6.23/preempt-realtime-rawlocks.patch][2.6.23]]
  m [[file:2.6.24/preempt-realtime-rawlocks.patch][2.6.24]]
  m [[file:2.6.25/preempt-realtime-rawlocks.patch][2.6.25]]
  m [[file:2.6.26/preempt-realtime-rawlocks.patch][2.6.26]]
  M [[file:2.6.29/preempt-realtime-rawlocks.patch][2.6.29]]
  - 3.0
* [2.6.22 - 2.6.29] mm: remove kmap_lock {C::feature::mm::rm lock}
  + [[file:2.6.22/highmem_rewrite.patch][2.6.22]]
    [[file:2.6.23/highmem_rewrite.patch][2.6.23]]
    [[file:2.6.24/highmem_rewrite.patch][2.6.24]]
  M [[file:2.6.25/highmem_rewrite.patch][2.6.25]]
    [[file:2.6.26/highmem_rewrite.patch][2.6.26]]
  M [[file:2.6.29/highmem_rewrite.patch][2.6.29]]
  - 3.0
* [2.6.22 - 2.6.29] preempt: realtime init show enabled debugs {C::feature::rtsupport::add buginfo}
  + [[file:2.6.22/preempt-realtime-init-show-enabled-debugs.patch][2.6.22]]
  m [[file:2.6.23/preempt-realtime-init-show-enabled-debugs.patch][2.6.23]]
  M [[file:2.6.24/preempt-realtime-init-show-enabled-debugs.patch][2.6.24]]
    [[file:2.6.25/preempt-realtime-init-show-enabled-debugs.patch][2.6.25]]
    [[file:2.6.26/preempt-realtime-init-show-enabled-debugs.patch][2.6.26]]
  m [[file:2.6.29/preempt-realtime-init-show-enabled-debugs.patch][2.6.29]]
  - 3.0
* [2.6.22 - 2.6.29] patches/percpu-locked-mm.patch {C::feature::rtsupport::add and replace with percpu lock}
  + [[file:2.6.22/percpu-locked-mm.patch][2.6.22]]
  M [[file:2.6.23/percpu-locked-mm.patch][2.6.23]]
  M [[file:2.6.24/percpu-locked-mm.patch][2.6.24]]
  M [[file:2.6.25/percpu-locked-mm.patch][2.6.25]]
  M [[file:2.6.26/percpu-locked-mm.patch][2.6.26]]
  M [[file:2.6.29/percpu-locked-mm.patch][2.6.29]]
  - 3.0
* [2.6.22 - 2.6.29] preempt-realtime-arm-integrator.patch {C::feature::rtsupport::replace with raw lock}
  + [[file:2.6.22/preempt-realtime-arm-integrator.patch][2.6.22]]
    [[file:2.6.23/preempt-realtime-arm-integrator.patch][2.6.23]]
    [[file:2.6.24/preempt-realtime-arm-integrator.patch][2.6.24]]
    [[file:2.6.25/preempt-realtime-arm-integrator.patch][2.6.25]]
    [[file:2.6.26/preempt-realtime-arm-integrator.patch][2.6.26]]
    [[file:2.6.29/preempt-realtime-arm-integrator.patch][2.6.29]]
  - 3.0
* [2.6.22 - 2.6.29] preempt-realtime-arm-ixp4xx.patch {C::feature::rtsupport::replace with raw lock}
  + [[file:2.6.22/preempt-realtime-arm-ixp4xx.patch][2.6.22]]
    [[file:2.6.23/preempt-realtime-arm-ixp4xx.patch][2.6.23]]
    [[file:2.6.24/preempt-realtime-arm-ixp4xx.patch][2.6.24]]
    [[file:2.6.25/preempt-realtime-arm-ixp4xx.patch][2.6.25]]
    [[file:2.6.26/preempt-realtime-arm-ixp4xx.patch][2.6.26]]
    [[file:2.6.29/preempt-realtime-arm-ixp4xx.patch][2.6.29]]
  - 3.0
* [2.6.22 - 2.6.29] highmem: redo mainline {C::maintain::refactor::restore flush unused warning}
  + [[file:2.6.22/highmem-redo-mainline.patch][2.6.22]]
    [[file:2.6.23/highmem-redo-mainline.patch][2.6.23]]
    [[file:2.6.24/highmem-redo-mainline.patch][2.6.24]]
  m [[file:2.6.25/highmem-redo-mainline.patch][2.6.25]]
    [[file:2.6.26/highmem-redo-mainline.patch][2.6.26]]
    [[file:2.6.29/highmem-redo-mainline.patch][2.6.29]]
  - 3.0
* [2.6.22 - 2.6.29] patches/vortex-fix.patch {C::performance::preempt::replace api, rm locks}
  + [[file:2.6.22/vortex-fix.patch][2.6.22]]
    [[file:2.6.23/vortex-fix.patch][2.6.23]]
    [[file:2.6.24/vortex-fix.patch][2.6.24]]
  M [[file:2.6.25/vortex-fix.patch][2.6.25]]
  M [[file:2.6.26/vortex-fix.patch][2.6.26]]
    [[file:2.6.29/vortex-fix.patch][2.6.29]]
  - 3.0
* [2.6.22 - 2.6.29] preempt: realtime input {C::feature::rtsupport::replace with rt api}
  + [[file:2.6.22/preempt-realtime-input.patch][2.6.22]]
    [[file:2.6.23/preempt-realtime-input.patch][2.6.23]]
    [[file:2.6.24/preempt-realtime-input.patch][2.6.24]]
    [[file:2.6.25/preempt-realtime-input.patch][2.6.25]]
    [[file:2.6.26/preempt-realtime-input.patch][2.6.26]]
    [[file:2.6.29/preempt-realtime-input.patch][2.6.29]]
  - 3.0
* [2.6.22 - 2.6.29] Premmpt-RT: Prevent boosting of idle task {C::feature::check::check and avoid boosting?}
  + [[file:2.6.22/preempt-realtime-prevent-idle-boosting.patch][2.6.22]]
  m [[file:2.6.23/preempt-realtime-prevent-idle-boosting.patch][2.6.23]]
    [[file:2.6.24/preempt-realtime-prevent-idle-boosting.patch][2.6.24]]
  m [[file:2.6.25/preempt-realtime-prevent-idle-boosting.patch][2.6.25]]
    [[file:2.6.26/preempt-realtime-prevent-idle-boosting.patch][2.6.26]]
    [[file:2.6.29/preempt-realtime-prevent-idle-boosting.patch][2.6.29]]
  - 3.0
* [2.6.22 - 2.6.29] preempt: realtime usb {C::feature::rtsupport::replace with rt}
  + [[file:2.6.22/preempt-realtime-usb.patch][2.6.22]]
  M [[file:2.6.23/preempt-realtime-usb.patch][2.6.23]]
  M [[file:2.6.24/preempt-realtime-usb.patch][2.6.24]]
  M [[file:2.6.25/preempt-realtime-usb.patch][2.6.25]]
  M [[file:2.6.26/preempt-realtime-usb.patch][2.6.26]]
    [[file:2.6.29/preempt-realtime-usb.patch][2.6.29]]
  - 3.0
* [2.6.22 - 2.6.29] serial: slow machines {C::performance::smallsize::enclose some code into rt precompile}
  + [[file:2.6.22/serial-slow-machines.patch][2.6.22]]
    [[file:2.6.23/serial-slow-machines.patch][2.6.23]]
    [[file:2.6.24/serial-slow-machines.patch][2.6.24]]
    [[file:2.6.25/serial-slow-machines.patch][2.6.25]]
    [[file:2.6.26/serial-slow-machines.patch][2.6.26]]
    [[file:2.6.29/serial-slow-machines.patch][2.6.29]]
  - 3.0
* [2.6.22 - 2.6.29] preempt-irqs-arm-fix-oprofile.patch {C::feature::hardware::add nodelay}
  + [[file:2.6.22/preempt-irqs-arm-fix-oprofile.patch][2.6.22]]
    [[file:2.6.23/preempt-irqs-arm-fix-oprofile.patch][2.6.23]]
    [[file:2.6.24/preempt-irqs-arm-fix-oprofile.patch][2.6.24]]
    [[file:2.6.25/preempt-irqs-arm-fix-oprofile.patch][2.6.25]]
    [[file:2.6.26/preempt-irqs-arm-fix-oprofile.patch][2.6.26]]
    [[file:2.6.29/preempt-irqs-arm-fix-oprofile.patch][2.6.29]]
  - 3.0
* [2.6.22 - 2.6.29] rt: mutex i386 {C::feature::rtsupport::rt mutex i386}
  + [[file:2.6.22/rt-mutex-i386.patch][2.6.22]]
  m [[file:2.6.23/rt-mutex-i386.patch][2.6.23]]
  M [[file:2.6.24/rt-mutex-i386.patch][2.6.24]]
  M [[file:2.6.25/rt-mutex-i386.patch][2.6.25]]
  M [[file:2.6.26/rt-mutex-i386.patch][2.6.26]]
  M [[file:2.6.29/rt-mutex-i386.patch][2.6.29]]
  - 3.0
* [2.6.22 - 2.6.29] patches/disable-irqpoll.patch {C::feature::check::rm fun, warning not support in rt}
  + [[file:2.6.22/disable-irqpoll.patch][2.6.22]]
    [[file:2.6.23/disable-irqpoll.patch][2.6.23]]
    [[file:2.6.24/disable-irqpoll.patch][2.6.24]]
    [[file:2.6.25/disable-irqpoll.patch][2.6.25]]
    [[file:2.6.26/disable-irqpoll.patch][2.6.26]]
    [[file:2.6.29/disable-irqpoll.patch][2.6.29]]
  - 3.0
* [2.6.22 - 2.6.29] i386: mark atomic irq ops raw {C::feature::rtsupport::replace with raw spinlock}
  + [[file:2.6.22/i386-mark-atomic-irq-ops-raw.patch][2.6.22]]
    [[file:2.6.23/i386-mark-atomic-irq-ops-raw.patch][2.6.23]]
    [[file:2.6.24/i386-mark-atomic-irq-ops-raw.patch][2.6.24]]
    [[file:2.6.25/i386-mark-atomic-irq-ops-raw.patch][2.6.25]]
    [[file:2.6.26/i386-mark-atomic-irq-ops-raw.patch][2.6.26]]
    [[file:2.6.29/i386-mark-atomic-irq-ops-raw.patch][2.6.29]]
  - 3.0
* [2.6.22 -    3.0] lock debugging: clean up rtmutex-debug.h {C::maintain::refactor}
  + [[file:2.6.22/rtmutex-debug.h-cleanup.patch][2.6.22]]
    [[file:2.6.23/rtmutex-debug.h-cleanup.patch][2.6.23]]
    [[file:2.6.24/rtmutex-debug.h-cleanup.patch][2.6.24]]
    [[file:2.6.25/rtmutex-debug.h-cleanup.patch][2.6.25]]
    [[file:2.6.26/rtmutex-debug.h-cleanup.patch][2.6.26]]
    [[file:2.6.29/rtmutex-debug.h-cleanup.patch][2.6.29]]
    [[file:3.0/lock-debugging-clean-up-rtmutex-debug.h.patch][3.0]]
  - 3.2
* [2.6.22 -   3.12] drivers/net: tulip_remove_one needs to call pci_disable_device() {C::feature::hardware::disable device pdev}
  + [[file:2.6.22/preempt-realtime-net-drivers.patch][2.6.22]]
    [[file:2.6.23/preempt-realtime-net-drivers.patch][2.6.23]]
    [[file:2.6.24/preempt-realtime-net-drivers.patch][2.6.24]]
    [[file:2.6.25/preempt-realtime-net-drivers.patch][2.6.25]]
    [[file:2.6.26/preempt-realtime-net-drivers.patch][2.6.26]]
    [[file:2.6.29/preempt-realtime-net-drivers.patch][2.6.29]]
    [[file:3.0/drivers-net-tulip-add-missing-pci-disable.patch][3.0]]
    [[file:3.2/drivers-net-tulip-add-missing-pci-disable.patch][3.2]]
    [[file:3.4/drivers-net-tulip-add-missing-pci-disable.patch][3.4]]
    [[file:3.6/drivers-net-tulip-add-missing-pci-disable.patch][3.6]]
    [[file:3.8/drivers-net-tulip-add-missing-pci-disable.patch][3.8]]
    [[file:3.10/drivers-net-tulip-add-missing-pci-disable.patch][3.10]]
    [[file:3.12/drivers-net-tulip-add-missing-pci-disable.patch][3.12]]
  - 3.14
* [2.6.22 -   4.11] ide: Do not disable interrupts for PREEMPT-RT {C::feature::rtsupport::nort irq}
  + [[file:2.6.22/preempt-realtime-ide.patch][2.6.22]]
  m [[file:2.6.23/preempt-realtime-ide.patch][2.6.23]]
  M [[file:2.6.24/preempt-realtime-ide.patch][2.6.24]]
  M [[file:2.6.25/preempt-realtime-ide.patch][2.6.25]]
  M [[file:2.6.26/preempt-realtime-ide.patch][2.6.26]]
  M [[file:2.6.29/preempt-realtime-ide.patch][2.6.29]]
  M [[file:3.0/ide-use-nort-local-irq-variants.patch][3.0]]
    [[file:3.2/ide-use-nort-local-irq-variants.patch][3.2]]
  m [[file:3.4/ide-use-nort-local-irq-variants.patch][3.4]]
    [[file:3.6/ide-use-nort-local-irq-variants.patch][3.6]]
    [[file:3.8/ide-use-nort-local-irq-variants.patch][3.8]]
    [[file:3.10/ide-use-nort-local-irq-variants.patch][3.10]]
    [[file:3.12/ide-use-nort-local-irq-variants.patch][3.12]]
    [[file:3.14/ide-use-nort-local-irq-variants.patch][3.14]]
    [[file:3.18/ide-use-nort-local-irq-variants.patch][3.18]]
    [[file:4.0/ide-use-nort-local-irq-variants.patch][4.0]]
    [[file:4.1/ide-use-nort-local-irq-variants.patch][4.1]]
    [[file:4.4/ide-use-nort-local-irq-variants.patch][4.4]]
    [[file:4.6/ide-use-nort-local-irq-variants.patch][4.6]]
    [[file:4.8/ide-use-nort-local-irq-variants.patch][4.8]]
    [[file:4.9/ide-use-nort-local-irq-variants.patch][4.9]]
    [[file:4.11/ide-use-nort-local-irq-variants.patch][4.11]]
* [2.6.22 -   4.11] drivers/net: Use disable_irq_nosync() in 8139too {C::feature::rtsupport::replace with irq nosync}
  + [[file:2.6.22/netpoll-8139too-fix.patch][2.6.22]]
    [[file:2.6.23/netpoll-8139too-fix.patch][2.6.23]]
    [[file:2.6.24/netpoll-8139too-fix.patch][2.6.24]]
    [[file:2.6.25/netpoll-8139too-fix.patch][2.6.25]]
    [[file:2.6.26/netpoll-8139too-fix.patch][2.6.26]]
    [[file:2.6.29/netpoll-8139too-fix.patch][2.6.29]]
    [[file:3.0/drivers-net-8139-disable-irq-nosync.patch][3.0]]
  M [[file:3.2/drivers-net-8139-disable-irq-nosync.patch][3.2]]
    [[file:3.4/drivers-net-8139-disable-irq-nosync.patch][3.4]]
  M [[file:3.6/drivers-net-8139-disable-irq-nosync.patch][3.6]]
    [[file:3.8/drivers-net-8139-disable-irq-nosync.patch][3.8]]
    [[file:3.10/drivers-net-8139-disable-irq-nosync.patch][3.10]]
    [[file:3.12/drivers-net-8139-disable-irq-nosync.patch][3.12]]
    [[file:3.14/drivers-net-8139-disable-irq-nosync.patch][3.14]]
    [[file:3.18/drivers-net-8139-disable-irq-nosync.patch][3.18]]
    [[file:4.0/drivers-net-8139-disable-irq-nosync.patch][4.0]]
    [[file:4.1/drivers-net-8139-disable-irq-nosync.patch][4.1]]
    [[file:4.4/drivers-net-8139-disable-irq-nosync.patch][4.4]]
    [[file:4.6/drivers-net-8139-disable-irq-nosync.patch][4.6]]
    [[file:4.8/drivers-net-8139-disable-irq-nosync.patch][4.8]]
    [[file:4.9/drivers-net-8139-disable-irq-nosync.patch][4.9]]
    [[file:4.11/drivers-net-8139-disable-irq-nosync.patch][4.11]]
* [2.6.23         ] x86_64: use i386 i8253.h {C::maintain::refactor::use i386 include files for x86_64}
  + [[file:2.6.23/x86_64-use-i386-i8253-h.patch][2.6.23]]
  - 2.6.24
* [2.6.23         ] rt-task-migration.patch {C::feature::sched::improve rt-task migration}
  + [[file:2.6.23/rt-task-migration.patch][2.6.23]]
  - 2.6.24
* [2.6.23         ] x86_64: convert to clock events {C::feature::timer::final switch to clock events}
  + [[file:2.6.23/x86_64-convert-to-clockevents.patch][2.6.23]]
  - 2.6.24
* [2.6.23         ] git-acpi.patch {C::feature::hardware::consolidated ACPI patch}
  + [[file:2.6.23/git-acpi.patch][2.6.23]]
  - 2.6.24
* [2.6.23         ] x86_64: Move apic calibration code around {C::maintain::refactor::move variable}
  + [[file:2.6.23/x86_64-apic-shuffle-calibration-around.patch][2.6.23]]
  - 2.6.24
* [2.6.23         ] x86_64: apic change setup_APIC_timer calling convention {C::maintain::refactor::remove argument of setup_APIC_timer}
  + [[file:2.6.23/x86_64-apic-change-setup-calling-convention.patch][2.6.23]]
  - 2.6.24
* [2.6.23         ] i386/x8664: cleanup the shared hpet code {C::maintain::refactor::cleanup the shared hpet code}
  + [[file:2.6.23/i386-hpet-sharing-optimize.patch][2.6.23]]
  - 2.6.24
* [2.6.23         ] x86_64: remove nested irq disables {C::performance::smallsize::remove nested local_irq_disable()}
  + [[file:2.6.23/x86_64-apic-remove-nested-irq-disable.patch][2.6.23]]
  - 2.6.24
* [2.6.23         ] x86_64: remove pit synchronization {C::performance::smallsize::remove PIT synchronization}
  + [[file:2.6.23/x86_64-apic-remove-bogus-pit-synchronization.patch][2.6.23]]
  - 2.6.24
* [2.6.23         ] x86_64: remove now unused code {C::maintain::refactor::remove unused code}
  + [[file:2.6.23/x86_64-remove-unused-code.patch][2.6.23]]
  - 2.6.24
* [2.6.23         ] i386: add x8664 specific hpet bits {C::feature::timer::add x86_64 specific bits for sharing hpet code}
  + [[file:2.6.23/i386-hpet-add-x8664-hpet-bits.patch][2.6.23]]
  - 2.6.24
* [2.6.23         ] x86_64: Add (not yet used) clock event functions {C::feature::timer:: add clock event functions}
  + [[file:2.6.23/x86_64-apic-add-clockevents-functions.patch][2.6.23]]
  - 2.6.24
* [2.6.23         ] clockevents: Remove unused inline function {C::maintain::refactor::remove unused inline function}
  + [[file:2.6.23/clockevents-remove-unused-inline-function.patch][2.6.23]]
  - 2.6.24
* [2.6.23         ] clockevents: Allow build w/o run-tine usage for migration purposes {C::feature::timer:: migration aid for clock events}
  + [[file:2.6.23/clockevents-allow-build-without-runtime-use.patch][2.6.23]]
  - 2.6.24
* [2.6.23         ] x86_64: cleanup apic.c after clock events switch {C::maintain::refactor::make variables static}
  + [[file:2.6.23/x86_64-cleanup-apic-c.patch][2.6.23]]
  - 2.6.24
* [2.6.23         ] sched-rt-balance-fix.patch {C::bug::hang::migration::migration::update variable in time}
  + [[file:2.6.23/sched-rt-balance-fix.patch][2.6.23]]
  - 2.6.24
* [2.6.23         ] x86_64: Remove APIC_DIVISOR {C::maintain::refactor::remove APIC_DIVISOR}
  + [[file:2.6.23/x86_64-apic-calibration-remove-divisor.patch][2.6.23]]
  - 2.6.24
* [2.6.23         ] jiffies: remove unused macros {C::maintain::refactor::remove unused macros}
  + [[file:2.6.23/jiffies-remove-unused-macros.patch][2.6.23]]
  - 2.6.24
* [2.6.23 - 2.6.24] mm: __add_to_swap_cache stuff {C::performance::mutex::ensure the page is locked instead of unconditionally locking the page}
  + [[file:2.6.23/2.6.21-rc6-lockless4-__add_to_swap_cache-stuff.patch][2.6.23]]
  M [[file:2.6.24/2.6.21-rc6-lockless4-__add_to_swap_cache-stuff.patch][2.6.24]]
  - 2.6.25
* [2.6.23 - 2.6.24] Compile fix for PREEMPT_TIMING on and TRACE_IRQFLAGS off {C::bug::compile::compiling_err::syntax::add condition for marco}
  + [[file:2.6.23/latency-trace-fix.patch][2.6.23]]
    [[file:2.6.24/latency-trace-fix.patch][2.6.24]]
  - 2.6.25
* [2.6.23 - 2.6.24] mm: prep find_lock_page {C::feature::mm::delete code which is needless}
  + [[file:2.6.23/2.6.21-rc6-lockless1-prep-find_lock_page.patch][2.6.23]]
    [[file:2.6.24/2.6.21-rc6-lockless1-prep-find_lock_page.patch][2.6.24]]
  - 2.6.25
* [2.6.23 - 2.6.24] softlockup: use cpu_clock() instead of sched_clock() {C::feature::timer::use cpu_clock() instead of sched_clock()}
  + [[file:2.6.23/softlockup-use-cpu-clock.patch][2.6.23]]
    [[file:2.6.24/softlockup-use-cpu-clock.patch][2.6.24]]
  - 2.6.25
* [2.6.23 - 2.6.24] stop critical timing in idle. {C::performance::idle::stop critical timing in idle}
  + [[file:2.6.23/stop-critical-timing-in-idle.patch][2.6.23]]
    [[file:2.6.24/stop-critical-timing-in-idle.patch][2.6.24]]
  - 2.6.25
* [2.6.23 - 2.6.24] RCU: synchronize_sched() workaround for CPU hotplug {C::bug::deadlock::deadlock::sync::workaround for deadlock}
  + [[file:2.6.23/rcu-new-4.patch][2.6.23]]
  m [[file:2.6.24/rcu-new-4.patch][2.6.24]]
  - 2.6.25
* [2.6.23 - 2.6.24] RT: fix spin_trylock_irq {C::bug::hang::irq::irq::use _spin_trylock_irq() instead of __spin_trylock_irq()}
  + [[file:2.6.23/fix-PICK_FUNCTION-spin_trylock_irq.patch][2.6.23]]
    [[file:2.6.24/fix-PICK_FUNCTION-spin_trylock_irq.patch][2.6.24]]
  - 2.6.25
* [2.6.23 - 2.6.24] flags as passed to spin_*_irqsave() should be unsigned long. {C::maintain::refactor::turn int variable into unsigned long}
  + [[file:2.6.23/powerpc-flags-as-passed-to-spin-x-irqsave-should-be-unsigned-long.patch][2.6.23]]
    [[file:2.6.24/powerpc-flags-as-passed-to-spin-x-irqsave-should-be-unsigned-long.patch][2.6.24]]
  - 2.6.25
* [2.6.23 - 2.6.24] latency hist: add resetting for all timing options {C::feature::statistics::add resetting for all timing options}
  + [[file:2.6.23/latency-hist-add-resetting-for-all-timing-options.patch][2.6.23]]
    [[file:2.6.24/latency-hist-add-resetting-for-all-timing-options.patch][2.6.24]]
  - 2.6.25
* [2.6.23 - 2.6.24] RCU: preemptible documentation and comment cleanups {C::maintain::refactor::rename marco and documentation}
  + [[file:2.6.23/rcu-new-9.patch][2.6.23]]
  M [[file:2.6.24/rcu-new-9.patch][2.6.24]]
  - 2.6.25
* [2.6.23 - 2.6.24] RCU: CPU hotplug support for preemptible RCU {C::feature::rtsupport::allow preemptible RCU to tolerate CPU-hotplug operations}
  + [[file:2.6.23/rcu-new-5.patch][2.6.23]]
    [[file:2.6.24/rcu-new-5.patch][2.6.24]]
  - 2.6.25
* [2.6.23 - 2.6.24] Compile fix for PREEMPT_TIMING on and IRQSOFF_TIMING off {C::bug::compile::compiling_err::syntax::avoid a compiler warning}
  + [[file:2.6.23/trace-cpuidle.patch][2.6.23]]
    [[file:2.6.24/trace-cpuidle.patch][2.6.24]]
  - 2.6.25
* [2.6.23 - 2.6.24] RCU: Make RCU priority boosting consume less power {C::feature::power::explicitly sleep when possible}
  + [[file:2.6.23/rcu-new-8.patch][2.6.23]]
    [[file:2.6.24/rcu-new-8.patch][2.6.24]]
  - 2.6.25
* [2.6.23 - 2.6.24] initialize the clock source to jiffies clock. {C::bug::crash::uninit_var::memory::initializes the clock to use clocksource_jiffies}
  + [[file:2.6.23/initialize-clocksource-to-jiffies.patch][2.6.23]]
  M [[file:2.6.24/initialize-clocksource-to-jiffies.patch][2.6.24]]
  - 2.6.25
* [2.6.23 - 2.6.24] fix get_monotonic_cycles for latency tracer {C::bug::data_err::time::migration::loop until data is consistent}
  + [[file:2.6.23/fix-get-monotonic-cycles-for-latency-tracer.patch][2.6.23]]
    [[file:2.6.24/fix-get-monotonic-cycles-for-latency-tracer.patch][2.6.24]]
  - 2.6.25
* [2.6.23 - 2.6.24] introduce PICK_FUNCTION {C::maintain::refactor::introduce PICK_FUNCTION}
  + [[file:2.6.23/introduce-pick-function-macro.patch][2.6.23]]
    [[file:2.6.24/introduce-pick-function-macro.patch][2.6.24]]
  - 2.6.25
* [2.6.23 - 2.6.24] time keeping add cycle_raw for actual incrementation {C::bug::data_err::time::semantics::provide an accumulative counter}
  + [[file:2.6.23/timekeeping-add-cycle-raw-for-actual-incrementation.patch][2.6.23]]
    [[file:2.6.24/timekeeping-add-cycle-raw-for-actual-incrementation.patch][2.6.24]]
  - 2.6.25
* [2.6.23 - 2.6.24] RCU: Fix barriers {C::feature::rtsupport::RFC 2/9, for RCU, make queueing of callbacks atomic}
  + [[file:2.6.23/rcu-new-2.patch][2.6.23]]
    [[file:2.6.24/rcu-new-2.patch][2.6.24]]
  - 2.6.25
* [2.6.23 - 2.6.24] spinlocks/rwlocks: use PICK_FUNCTION() {C::maintain::refactor::reaplace PICK_OP with PICK_FUNCTION}
  + [[file:2.6.23/replace-PICK_OP-with-PICK_FUNCTION.patch][2.6.23]]
    [[file:2.6.24/replace-PICK_OP-with-PICK_FUNCTION.patch][2.6.24]]
  - 2.6.25
* [2.6.23 - 2.6.24] RCU: Split API to permit multiple RCU implementations {C::feature::rtsupport::RFC 1/9, for RCU, re-organizes the RCU code}
  + [[file:2.6.23/rcu-new-1.patch][2.6.23]]
  M [[file:2.6.24/rcu-new-1.patch][2.6.24]]
  - 2.6.25
* [2.6.23 - 2.6.24] rcu-dynticks-update.patch {C::feature::rtsupport::RCU dynamic ticks}
  + [[file:2.6.23/rcu-dynticks-update.patch][2.6.23]]
    [[file:2.6.24/rcu-dynticks-update.patch][2.6.24]]
  - 2.6.25
* [2.6.23 - 2.6.24] rcu-warn-underflow.patch {C::feature::debuginfo::underflow and overflow warning}
  + [[file:2.6.23/rcu-warn-underflow.patch][2.6.23]]
    [[file:2.6.24/rcu-warn-underflow.patch][2.6.24]]
  - 2.6.25
* [2.6.23 - 2.6.24] softlockup watchdog: style cleanups {C::maintain::refactor::clean up the code}
  + [[file:2.6.23/softlockup-cleanups.patch][2.6.23]]
    [[file:2.6.24/softlockup-cleanups.patch][2.6.24]]
  - 2.6.25
* [2.6.23 - 2.6.24] preempt_max_latency in all modes {C::feature::statistics::enable preempt_max_latency facility for timing modes}
  + [[file:2.6.23/preempt_max_latency-in-all-modes.patch][2.6.23]]
    [[file:2.6.24/preempt_max_latency-in-all-modes.patch][2.6.24]]
  - 2.6.25
* [2.6.23 - 2.6.24] -rt scheduling: wakeup bug? {C::bug::rtlatency::preempt::preempt::move a section of code up}
  + [[file:2.6.23/rt-wakeup-fix.patch][2.6.23]]
    [[file:2.6.24/rt-wakeup-fix.patch][2.6.24]]
  - 2.6.25
* [2.6.23 - 2.6.24] softlockup: improve debug output {C::feature::debuginfo::improve debug output of the softlockup detector}
  + [[file:2.6.23/softlockup-better-printout.patch][2.6.23]]
    [[file:2.6.24/softlockup-better-printout.patch][2.6.24]]
  - 2.6.25
* [2.6.23 - 2.6.24] latency tracing: use now() consistently {C::maintain::refactor::change get_monotonic_cycles() to now()}
  + [[file:2.6.23/latency-tracing-use-now.patch][2.6.23]]
  m [[file:2.6.24/latency-tracing-use-now.patch][2.6.24]]
  - 2.6.25
* [2.6.23 - 2.6.24] seqlocks: use PICK_FUNCTION {C::maintain::refactor::replace the old PICK_OP style macros with PICK_FUNCTION}
  + [[file:2.6.23/seqlocks-use-PICK_FUNCTION.patch][2.6.23]]
    [[file:2.6.24/seqlocks-use-PICK_FUNCTION.patch][2.6.24]]
  - 2.6.25
* [2.6.23 - 2.6.24] rcu-new-10.patch {C::feature::rtsupport::code for RCU}
  + [[file:2.6.23/rcu-new-10.patch][2.6.23]]
    [[file:2.6.24/rcu-new-10.patch][2.6.24]]
  - 2.6.25
* [2.6.23 - 2.6.24] RCU: Preemptible RCU {C::feature::rtsupport::implement a new version of RCU}
  + [[file:2.6.23/rcu-new-3.patch][2.6.23]]
  m [[file:2.6.24/rcu-new-3.patch][2.6.24]]
  - 2.6.25
* [2.6.23 - 2.6.24] fix the softlockup watchdog to actually do something {C::bug::hang::livelock::semantics::fix the softlockup watchdog so it reports lockups}
  + [[file:2.6.23/softlockup-fix.patch][2.6.23]]
    [[file:2.6.24/softlockup-fix.patch][2.6.24]]
  - 2.6.25
* [2.6.23 - 2.6.24] RCU priority boosting for preemptible RCU {C::feature::rtsupport::RCU priority boosting}
  + [[file:2.6.23/rcu-new-6.patch][2.6.23]]
    [[file:2.6.24/rcu-new-6.patch][2.6.24]]
  - 2.6.25
* [2.6.23 - 2.6.24] rcu-fix-rcu-preempt.patch {C::feature::rtsupport::handle dynamic ticks}
  + [[file:2.6.23/rcu-fix-rcu-preempt.patch][2.6.23]]
  M [[file:2.6.24/rcu-fix-rcu-preempt.patch][2.6.24]]
  - 2.6.25
* [2.6.23 - 2.6.24] rt-time-starvation-fix-update.patch {C::maintain::refactor::add offset back}
  + [[file:2.6.23/rt-time-starvation-fix-update.patch][2.6.23]]
    [[file:2.6.24/rt-time-starvation-fix-update.patch][2.6.24]]
  - 2.6.25
* [2.6.23 - 2.6.24] fork: desched_thread comment rework. {C::maintain::refactor::reformat the comment}
  + [[file:2.6.23/fork-desched_thread-comment-rework.patch][2.6.23]]
    [[file:2.6.24/fork-desched_thread-comment-rework.patch][2.6.24]]
  - 2.6.25
* [2.6.23 - 2.6.25] Fix alternate_node_alloc() on RT kernel {C::bug::data_err::migration::migration::pass the this_cpu variable to cache_grow()}
  + [[file:2.6.23/fix-alternate_node_alloc.patch][2.6.23]]
    [[file:2.6.24/fix-alternate_node_alloc.patch][2.6.24]]
    [[file:2.6.25/fix-alternate_node_alloc.patch][2.6.25]]
  - 2.6.26
* [2.6.23 - 2.6.25] preempt-irqs-softirq-in-hardirq.patch {C::performance::irq::process softirqs straight from hardirq context}
  + [[file:2.6.23/preempt-irqs-softirq-in-hardirq.patch][2.6.23]]
    [[file:2.6.24/preempt-irqs-softirq-in-hardirq.patch][2.6.24]]
  m [[file:2.6.25/preempt-irqs-softirq-in-hardirq.patch][2.6.25]]
  - 2.6.26
* [2.6.23 - 2.6.25] Rearrange thread flags to work with the "andi" instruction. {C::feature::arch::rearrange thread flags to work with the "andi" instruction}
  + [[file:2.6.23/powerpc-rearrange-thread-flags-to-work-with-andi-instruction.patch][2.6.23]]
    [[file:2.6.24/powerpc-rearrange-thread-flags-to-work-with-andi-instruction.patch][2.6.24]]
    [[file:2.6.25/powerpc-rearrange-thread-flags-to-work-with-andi-instruction.patch][2.6.25]]
  - 2.6.26
* [2.6.23 - 2.6.25] rt-mutex-drop-generic-TIF_NEED_RESCHED_DELAYED.patch {C::maintain::refactor::remove default TIF_NEED_RESCHED_DELAYED}
  + [[file:2.6.23/rt-mutex-drop-generic-TIF_NEED_RESCHED_DELAYED.patch][2.6.23]]
    [[file:2.6.24/rt-mutex-drop-generic-TIF_NEED_RESCHED_DELAYED.patch][2.6.24]]
    [[file:2.6.25/rt-mutex-drop-generic-TIF_NEED_RESCHED_DELAYED.patch][2.6.25]]
  - 2.6.26
* [2.6.23 - 2.6.25] rt-mutex-delayed-resched.patch {C::feature::rtsupport::delayed resched}
  + [[file:2.6.23/rt-mutex-delayed-resched.patch][2.6.23]]
  M [[file:2.6.24/rt-mutex-delayed-resched.patch][2.6.24]]
  M [[file:2.6.25/rt-mutex-delayed-resched.patch][2.6.25]]
  - 2.6.26
* [2.6.23 - 2.6.25] schedule_on_each_cpu-enhance-rt.patch {C::performance::mutex::replace preempt_disable() with lock_cpu_hotplug()}
  + [[file:2.6.23/schedule_on_each_cpu-enhance-rt.patch][2.6.23]]
    [[file:2.6.24/schedule_on_each_cpu-enhance-rt.patch][2.6.24]]
    [[file:2.6.25/schedule_on_each_cpu-enhance-rt.patch][2.6.25]]
  - 2.6.26
* [2.6.23 - 2.6.26] watchdog_use_timer_and_hpet_on_x86_64.patch {C::feature::timer::consider both apic timer and PIT/HPET on x86_64 nmi_watchdog_tick}
  + [[file:2.6.23/watchdog_use_timer_and_hpet_on_x86_64.patch][2.6.23]]
  M [[file:2.6.24/watchdog_use_timer_and_hpet_on_x86_64.patch][2.6.24]]
    [[file:2.6.25/watchdog_use_timer_and_hpet_on_x86_64.patch][2.6.25]]
    [[file:2.6.26/watchdog_use_timer_and_hpet_on_x86_64.patch][2.6.26]]
  - 2.6.29
* [2.6.23 - 2.6.26] radix-tree: gang slot lookups {C::feature::lockless::introduce gang_lookup_slot and gang_lookup_slot_tag functions}
  + [[file:2.6.23/2.6.21-rc6-lockless3-radix-tree-gang-slot-lookups.patch][2.6.23]]
  m [[file:2.6.24/2.6.21-rc6-lockless3-radix-tree-gang-slot-lookups.patch][2.6.24]]
    [[file:2.6.25/2.6.21-rc6-lockless3-radix-tree-gang-slot-lookups.patch][2.6.25]]
    [[file:2.6.26/2.6.21-rc6-lockless3-radix-tree-gang-slot-lookups.patch][2.6.26]]
  - 2.6.29
* [2.6.23 - 2.6.26] rt-mutex-irq-flags-checking.patch {C::feature::debuginfo::add irq flags checking}
  + [[file:2.6.23/rt-mutex-irq-flags-checking.patch][2.6.23]]
    [[file:2.6.24/rt-mutex-irq-flags-checking.patch][2.6.24]]
  m [[file:2.6.25/rt-mutex-irq-flags-checking.patch][2.6.25]]
  m [[file:2.6.26/rt-mutex-irq-flags-checking.patch][2.6.26]]
  - 2.6.29
* [2.6.23 - 2.6.26] rcu-preempt-hotplug-hackaround.patch {C::feature::rtsupport::hackaround for CPU hotplug}
  + [[file:2.6.23/rcu-preempt-hotplug-hackaround.patch][2.6.23]]
  m [[file:2.6.24/rcu-preempt-hotplug-hackaround.patch][2.6.24]]
    [[file:2.6.25/rcu-preempt-hotplug-hackaround.patch][2.6.25]]
  m [[file:2.6.26/rcu-preempt-hotplug-hackaround.patch][2.6.26]]
  - 2.6.29
* [2.6.23 - 2.6.26] Add trace_preempt_*_idle() support for ARM. {C::feature::statistics::trace_preempt_*_idle() support for ARM}
  + [[file:2.6.23/arm-trace-preempt-idle.patch][2.6.23]]
    [[file:2.6.24/arm-trace-preempt-idle.patch][2.6.24]]
    [[file:2.6.25/arm-trace-preempt-idle.patch][2.6.25]]
  M [[file:2.6.26/arm-trace-preempt-idle.patch][2.6.26]]
  - 2.6.29
* [2.6.23 - 2.6.26] just rename call_rcu_bh instead of making it a macro {C::bug::compile::compiling_err::syntax::rename call_rcu_bh to call_rcu_preempt}
  + [[file:2.6.23/call_rcu_bh-rename-of-call_rcu.patch][2.6.23]]
    [[file:2.6.24/call_rcu_bh-rename-of-call_rcu.patch][2.6.24]]
  M [[file:2.6.25/call_rcu_bh-rename-of-call_rcu.patch][2.6.25]]
    [[file:2.6.26/call_rcu_bh-rename-of-call_rcu.patch][2.6.26]]
  - 2.6.29
* [2.6.23 - 2.6.26] percpu_list {C::performance::percpu_var::give the lock_list a percpu_head}
  + [[file:2.6.23/percpu_list.patch][2.6.23]]
    [[file:2.6.24/percpu_list.patch][2.6.24]]
    [[file:2.6.25/percpu_list.patch][2.6.25]]
    [[file:2.6.26/percpu_list.patch][2.6.26]]
  - 2.6.29
* [2.6.23 - 2.6.26] rcupreempt-boost-early-init.patch {C::feature::rtsupport::add support for rcu_preempt_boost}
  + [[file:2.6.23/rcupreempt-boost-early-init.patch][2.6.23]]
  m [[file:2.6.24/rcupreempt-boost-early-init.patch][2.6.24]]
  m [[file:2.6.25/rcupreempt-boost-early-init.patch][2.6.25]]
    [[file:2.6.26/rcupreempt-boost-early-init.patch][2.6.26]]
  - 2.6.29
* [2.6.23 - 2.6.26] rcu-preempt-fix-bad-dyntick-accounting.patch {C::bug::data_err::time::semantics::workaround for bad accounting of dynamic ticks}
  + [[file:2.6.23/rcu-preempt-fix-bad-dyntick-accounting.patch][2.6.23]]
    [[file:2.6.24/rcu-preempt-fix-bad-dyntick-accounting.patch][2.6.24]]
  M [[file:2.6.25/rcu-preempt-fix-bad-dyntick-accounting.patch][2.6.25]]
    [[file:2.6.26/rcu-preempt-fix-bad-dyntick-accounting.patch][2.6.26]]
  - 2.6.29
* [2.6.23 - 2.6.26] schedule_on_each_cpu-enhance.patch {C::maintain::refactor::change interface of schedule_on_each_cpu()}
  + [[file:2.6.23/schedule_on_each_cpu-enhance.patch][2.6.23]]
    [[file:2.6.24/schedule_on_each_cpu-enhance.patch][2.6.24]]
  M [[file:2.6.25/schedule_on_each_cpu-enhance.patch][2.6.25]]
    [[file:2.6.26/schedule_on_each_cpu-enhance.patch][2.6.26]]
  - 2.6.29
* [2.6.23 - 2.6.26] disable-lpptest-on-nonlinux.patch {C::bug::compile::compiling_err::syntax::disable lpptest on non-Linux hosts}
  + [[file:2.6.23/disable-lpptest-on-nonlinux.patch][2.6.23]]
    [[file:2.6.24/disable-lpptest-on-nonlinux.patch][2.6.24]]
    [[file:2.6.25/disable-lpptest-on-nonlinux.patch][2.6.25]]
    [[file:2.6.26/disable-lpptest-on-nonlinux.patch][2.6.26]]
  - 2.6.29
* [2.6.23 - 2.6.26] rcu-trace-fix-free.patch {C::bug::leak::resource_leak::memory::free the resource in time}
  + [[file:2.6.23/rcu-trace-fix-free.patch][2.6.23]]
    [[file:2.6.24/rcu-trace-fix-free.patch][2.6.24]]
    [[file:2.6.25/rcu-trace-fix-free.patch][2.6.25]]
    [[file:2.6.26/rcu-trace-fix-free.patch][2.6.26]]
  - 2.6.29
* [2.6.23 - 2.6.26] fix-circular-locking-deadlock.patch {C::bug::deadlock::deadlock::order::use the reverse locking order}
  + [[file:2.6.23/fix-circular-locking-deadlock.patch][2.6.23]]
    [[file:2.6.24/fix-circular-locking-deadlock.patch][2.6.24]]
    [[file:2.6.25/fix-circular-locking-deadlock.patch][2.6.25]]
    [[file:2.6.26/fix-circular-locking-deadlock.patch][2.6.26]]
  - 2.6.29
* [2.6.23 - 2.6.26] rt-s_files-kill-a-union.patch {C::maintain::refactor::turn a union into struct}
  + [[file:2.6.23/rt-s_files-kill-a-union.patch][2.6.23]]
    [[file:2.6.24/rt-s_files-kill-a-union.patch][2.6.24]]
    [[file:2.6.25/rt-s_files-kill-a-union.patch][2.6.25]]
  M [[file:2.6.26/rt-s_files-kill-a-union.patch][2.6.26]]
  - 2.6.29
* [2.6.23 - 2.6.26] radix-tree: optimistic locking {C::performance::mutex::implement optimistic locking for the concurrent radix tree}
  + [[file:2.6.23/radix-tree-optimistic.patch][2.6.23]]
  m [[file:2.6.24/radix-tree-optimistic.patch][2.6.24]]
    [[file:2.6.25/radix-tree-optimistic.patch][2.6.25]]
    [[file:2.6.26/radix-tree-optimistic.patch][2.6.26]]
  - 2.6.29
* [2.6.23 - 2.6.26] radix-tree: concurrent write side support {C::feature::rtsupport::concurrent write support for radix-tree}
  + [[file:2.6.23/radix-tree-concurrent.patch][2.6.23]]
  M [[file:2.6.24/radix-tree-concurrent.patch][2.6.24]]
  m [[file:2.6.25/radix-tree-concurrent.patch][2.6.25]]
  M [[file:2.6.26/radix-tree-concurrent.patch][2.6.26]]
  - 2.6.29
* [2.6.23 - 2.6.26] count_active_rt_tasks() is undefined when CONFIG_PREEMPT_RT is not set. {C::maintain::refactor::conditional compile for active_rt_tasks}
  + [[file:2.6.23/powerpc-count_active_rt_tasks-is-undefined-for-non-preempt-rt.patch][2.6.23]]
    [[file:2.6.24/powerpc-count_active_rt_tasks-is-undefined-for-non-preempt-rt.patch][2.6.24]]
    [[file:2.6.25/powerpc-count_active_rt_tasks-is-undefined-for-non-preempt-rt.patch][2.6.25]]
    [[file:2.6.26/powerpc-count_active_rt_tasks-is-undefined-for-non-preempt-rt.patch][2.6.26]]
  - 2.6.29
* [2.6.23 - 2.6.26] mm: lock_page_ref {C::feature::mm::replace the tree_lock with a per page lock}
  + [[file:2.6.23/lock_page_ref.patch][2.6.23]]
  M [[file:2.6.24/lock_page_ref.patch][2.6.24]]
  m [[file:2.6.25/lock_page_ref.patch][2.6.25]]
  M [[file:2.6.26/lock_page_ref.patch][2.6.26]]
  - 2.6.29
* [2.6.23 - 2.6.26] Only run softirqs from the irq thread if the irq affinity is set to 1 CPU {C::performance::irq::only run the softirq functions in IRQ thread when safe}
  + [[file:2.6.23/only-run-softirqs-from-irq-thread-when-irq-affinity-is-set.patch][2.6.23]]
    [[file:2.6.24/only-run-softirqs-from-irq-thread-when-irq-affinity-is-set.patch][2.6.24]]
    [[file:2.6.25/only-run-softirqs-from-irq-thread-when-irq-affinity-is-set.patch][2.6.25]]
    [[file:2.6.26/only-run-softirqs-from-irq-thread-when-irq-affinity-is-set.patch][2.6.26]]
  - 2.6.29
* [2.6.23 - 2.6.26] mm: spinlock tree_lock {C::performance::mutex::convert the lock from an rwlock to a spinlock}
  + [[file:2.6.23/2.6.21-rc6-lockless8-spinlock-tree_lock.patch][2.6.23]]
  M [[file:2.6.24/2.6.21-rc6-lockless8-spinlock-tree_lock.patch][2.6.24]]
  m [[file:2.6.25/2.6.21-rc6-lockless8-spinlock-tree_lock.patch][2.6.25]]
    [[file:2.6.26/2.6.21-rc6-lockless8-spinlock-tree_lock.patch][2.6.26]]
  - 2.6.29
* [2.6.23 - 2.6.26] radix-concurrent-lockdep.patch {C::feature::debuginfo::add name for radix tree nodes}
  + [[file:2.6.23/radix-concurrent-lockdep.patch][2.6.23]]
  m [[file:2.6.24/radix-concurrent-lockdep.patch][2.6.24]]
    [[file:2.6.25/radix-concurrent-lockdep.patch][2.6.25]]
    [[file:2.6.26/radix-concurrent-lockdep.patch][2.6.26]]
  - 2.6.29
* [2.6.23 - 2.6.26] mm: lockless probe {C::performance::mutex::convert tree_lock to RCU locking}
  + [[file:2.6.23/2.6.21-rc6-lockless5-lockless-probe.patch][2.6.23]]
  M [[file:2.6.24/2.6.21-rc6-lockless5-lockless-probe.patch][2.6.24]]
    [[file:2.6.25/2.6.21-rc6-lockless5-lockless-probe.patch][2.6.25]]
    [[file:2.6.26/2.6.21-rc6-lockless5-lockless-probe.patch][2.6.26]]
  - 2.6.29
* [2.6.23 - 2.6.26] rcu-torture-preempt-update.patch {C::feature::rtsupport::update rcu torture test}
  + [[file:2.6.23/rcu-torture-preempt-update.patch][2.6.23]]
    [[file:2.6.24/rcu-torture-preempt-update.patch][2.6.24]]
    [[file:2.6.25/rcu-torture-preempt-update.patch][2.6.25]]
    [[file:2.6.26/rcu-torture-preempt-update.patch][2.6.26]]
  - 2.6.29
* [2.6.23 - 2.6.26] Match __rw_yeild function declaration to prototype. {C::maintain::refactor::change function argument from raw_rwlock_t to __raw_rwlock_t}
  + [[file:2.6.23/powerpc-match-__rw_yield-function-declaration-to-prototype.patch][2.6.23]]
    [[file:2.6.24/powerpc-match-__rw_yield-function-declaration-to-prototype.patch][2.6.24]]
    [[file:2.6.25/powerpc-match-__rw_yield-function-declaration-to-prototype.patch][2.6.25]]
    [[file:2.6.26/powerpc-match-__rw_yield-function-declaration-to-prototype.patch][2.6.26]]
  - 2.6.29
* [2.6.23 - 2.6.26] flush_tlb_pending() is no more, use __flush_tlb_pending() instead. {C::maintain::refactor::replace flush_tlb_pending with __flush_tlb_pending}
  + [[file:2.6.23/powerpc-flush_tlb_pending-is-no-more.patch][2.6.23]]
    [[file:2.6.24/powerpc-flush_tlb_pending-is-no-more.patch][2.6.24]]
    [[file:2.6.25/powerpc-flush_tlb_pending-is-no-more.patch][2.6.25]]
    [[file:2.6.26/powerpc-flush_tlb_pending-is-no-more.patch][2.6.26]]
  - 2.6.29
* [2.6.23 - 2.6.26] arm-futex-atomic-cmpxchg.patch {C::feature::hardware::add futex_atomic_op for ARM}
  + [[file:2.6.23/arm-futex-atomic-cmpxchg.patch][2.6.23]]
    [[file:2.6.24/arm-futex-atomic-cmpxchg.patch][2.6.24]]
    [[file:2.6.25/arm-futex-atomic-cmpxchg.patch][2.6.25]]
  M [[file:2.6.26/arm-futex-atomic-cmpxchg.patch][2.6.26]]
  - 2.6.29
* [2.6.23 - 2.6.26] lockdep_lock_set_subclass_fix.patch {C::bug::data_err::semantics::semantics::check for condition}
  + [[file:2.6.23/lockdep_lock_set_subclass_fix.patch][2.6.23]]
    [[file:2.6.24/lockdep_lock_set_subclass_fix.patch][2.6.24]]
    [[file:2.6.25/lockdep_lock_set_subclass_fix.patch][2.6.25]]
    [[file:2.6.26/lockdep_lock_set_subclass_fix.patch][2.6.26]]
  - 2.6.29
* [2.6.23 - 2.6.26] export-schedule-on-each-cpu.patch {C::maintain::refactor::export symbol schedule_on_each_cpu}
  + [[file:2.6.23/export-schedule-on-each-cpu.patch][2.6.23]]
    [[file:2.6.24/export-schedule-on-each-cpu.patch][2.6.24]]
    [[file:2.6.25/export-schedule-on-each-cpu.patch][2.6.25]]
    [[file:2.6.26/export-schedule-on-each-cpu.patch][2.6.26]]
  - 2.6.29
* [2.6.23 - 2.6.26] mm/fs: abstract address_space::nrpages {C::maintain::refactor::provide function for accessing mapping->nrpages}
  + [[file:2.6.23/mapping_nrpages.patch][2.6.23]]
  m [[file:2.6.24/mapping_nrpages.patch][2.6.24]]
  M [[file:2.6.25/mapping_nrpages.patch][2.6.25]]
  M [[file:2.6.26/mapping_nrpages.patch][2.6.26]]
  - 2.6.29
* [2.6.23 - 2.6.26] rcu-preempt-boost-sdr.patch {C::feature::rtsupport::implement preempt_rcu_boost}
  + [[file:2.6.23/rcu-preempt-boost-sdr.patch][2.6.23]]
  m [[file:2.6.24/rcu-preempt-boost-sdr.patch][2.6.24]]
  m [[file:2.6.25/rcu-preempt-boost-sdr.patch][2.6.25]]
  M [[file:2.6.26/rcu-preempt-boost-sdr.patch][2.6.26]]
  - 2.6.29
* [2.6.23 - 2.6.26] debug: optimistic lock histogram {C::feature::statistics::simple histogram for the optimistic locking}
  + [[file:2.6.23/radix-tree-optimistic-hist.patch][2.6.23]]
  m [[file:2.6.24/radix-tree-optimistic-hist.patch][2.6.24]]
    [[file:2.6.25/radix-tree-optimistic-hist.patch][2.6.25]]
  M [[file:2.6.26/radix-tree-optimistic-hist.patch][2.6.26]]
  - 2.6.29
* [2.6.23 - 2.6.26] mm: -rt bits for concurrent pagecache {C::feature::mm::rt bits for concurrent pagecache}
  + [[file:2.6.23/mm-concurrent-pagecache-rt.patch][2.6.23]]
    [[file:2.6.24/mm-concurrent-pagecache-rt.patch][2.6.24]]
    [[file:2.6.25/mm-concurrent-pagecache-rt.patch][2.6.25]]
    [[file:2.6.26/mm-concurrent-pagecache-rt.patch][2.6.26]]
  - 2.6.29
* [2.6.23 - 2.6.26] mitigate-resched-flood.patch {C::performance::preempt::restrict condition for sending rescheduling interrupts to other CPUs}
  + [[file:2.6.23/mitigate-resched-flood.patch][2.6.23]]
  M [[file:2.6.24/mitigate-resched-flood.patch][2.6.24]]
  m [[file:2.6.25/mitigate-resched-flood.patch][2.6.25]]
  M [[file:2.6.26/mitigate-resched-flood.patch][2.6.26]]
  - 2.6.29
* [2.6.23 - 2.6.26] mm: concurrent pagecache write side {C::maintain::refactor::remove tree_lock, change address_space.nrpages to atomic_long_t}
  + [[file:2.6.23/mm-concurrent-pagecache.patch][2.6.23]]
  M [[file:2.6.24/mm-concurrent-pagecache.patch][2.6.24]]
  m [[file:2.6.25/mm-concurrent-pagecache.patch][2.6.25]]
  m [[file:2.6.26/mm-concurrent-pagecache.patch][2.6.26]]
  - 2.6.29
* [2.6.23 - 2.6.26] RCU: rcutorture testing for RCU priority boosting {C::feature::rtsupport::update rcutorture testing for RCU priority boosting}
  + [[file:2.6.23/rcu-new-7.patch][2.6.23]]
  M [[file:2.6.24/rcu-new-7.patch][2.6.24]]
  m [[file:2.6.25/rcu-new-7.patch][2.6.25]]
    [[file:2.6.26/rcu-new-7.patch][2.6.26]]
  - 2.6.29
* [2.6.23 - 2.6.29] preempt: softirqs core {C::feature::rtsupport::softirq preemption}
  + [[file:2.6.23/preempt-softirqs-core.patch][2.6.23]]
  m [[file:2.6.24/preempt-softirqs-core.patch][2.6.24]]
  M [[file:2.6.25/preempt-softirqs-core.patch][2.6.25]]
  m [[file:2.6.26/preempt-softirqs-core.patch][2.6.26]]
  M [[file:2.6.29/preempt-softirqs-core.patch][2.6.29]]
  - 3.0
* [2.6.23 - 2.6.29] preempt: irqs direct debug keyboard {C::feature::debuginfo::irqs direct debug keyboard}
  + [[file:2.6.23/preempt-irqs-direct-debug-keyboard.patch][2.6.23]]
    [[file:2.6.24/preempt-irqs-direct-debug-keyboard.patch][2.6.24]]
  m [[file:2.6.25/preempt-irqs-direct-debug-keyboard.patch][2.6.25]]
    [[file:2.6.26/preempt-irqs-direct-debug-keyboard.patch][2.6.26]]
  m [[file:2.6.29/preempt-irqs-direct-debug-keyboard.patch][2.6.29]]
  - 3.0
* [2.6.23 - 2.6.29] patches/loadavg_fixes_weird_loads.patch {C::bug::data_err::atomicity::semantics::force a variable non-negative}
  + [[file:2.6.23/loadavg_fixes_weird_loads.patch][2.6.23]]
    [[file:2.6.24/loadavg_fixes_weird_loads.patch][2.6.24]]
    [[file:2.6.25/loadavg_fixes_weird_loads.patch][2.6.25]]
    [[file:2.6.26/loadavg_fixes_weird_loads.patch][2.6.26]]
    [[file:2.6.29/loadavg_fixes_weird_loads.patch][2.6.29]]
  - 3.0
* [2.6.23 - 2.6.29] genirq: fix simple and fasteoi irq handlers {C::bug::hwerr::irq::irq::fix an IRQ handling error}
  + [[file:2.6.23/irq-mask-fix.patch][2.6.23]]
  M [[file:2.6.24/irq-mask-fix.patch][2.6.24]]
    [[file:2.6.25/irq-mask-fix.patch][2.6.25]]
    [[file:2.6.26/irq-mask-fix.patch][2.6.26]]
  m [[file:2.6.29/irq-mask-fix.patch][2.6.29]]
  - 3.0
* [2.6.23 - 2.6.29] Fixes spurious system load spikes in /proc/loadavgrt {C::bug::data_err::atomicity::semantics::additional fix for loadavgrt}
  + [[file:2.6.23/kstat-fix-spurious-system-load-spikes-in-proc-loadavgrt.patch][2.6.23]]
  M [[file:2.6.24/kstat-fix-spurious-system-load-spikes-in-proc-loadavgrt.patch][2.6.24]]
    [[file:2.6.25/kstat-fix-spurious-system-load-spikes-in-proc-loadavgrt.patch][2.6.25]]
  M [[file:2.6.26/kstat-fix-spurious-system-load-spikes-in-proc-loadavgrt.patch][2.6.26]]
    [[file:2.6.29/kstat-fix-spurious-system-load-spikes-in-proc-loadavgrt.patch][2.6.29]]
  - 3.0
* [2.6.23 - 2.6.29] Disable IST stacks for debug/int 3/stack fault for    PREEMPT_RT {C::bug::hang::semantics::semantics::disables IST stacks for debug/int 3/stack fault handlers for PREEMPT_RT}
  + [[file:2.6.23/disable-ist-x86_64.patch][2.6.23]]
    [[file:2.6.24/disable-ist-x86_64.patch][2.6.24]]
  m [[file:2.6.25/disable-ist-x86_64.patch][2.6.25]]
  M [[file:2.6.26/disable-ist-x86_64.patch][2.6.26]]
  M [[file:2.6.29/disable-ist-x86_64.patch][2.6.29]]
  - 3.0
* [2.6.23 - 2.6.29] quicklist: release before free page fix {C::bug::crash::semantics::semantics::fix quicklist patch}
  + [[file:2.6.23/quicklist-release-before-free-page-fix.patch][2.6.23]]
  M [[file:2.6.24/quicklist-release-before-free-page-fix.patch][2.6.24]]
    [[file:2.6.25/quicklist-release-before-free-page-fix.patch][2.6.25]]
    [[file:2.6.26/quicklist-release-before-free-page-fix.patch][2.6.26]]
    [[file:2.6.29/quicklist-release-before-free-page-fix.patch][2.6.29]]
  - 3.0
* [2.6.23 - 2.6.29] patches/lockdep-rt-recursion-limit-fix.patch {C::bug::compile::compiling_err::syntax::move code and add marcos
}
  + [[file:2.6.23/lockdep-rt-recursion-limit-fix.patch][2.6.23]]
    [[file:2.6.24/lockdep-rt-recursion-limit-fix.patch][2.6.24]]
    [[file:2.6.25/lockdep-rt-recursion-limit-fix.patch][2.6.25]]
    [[file:2.6.26/lockdep-rt-recursion-limit-fix.patch][2.6.26]]
  m [[file:2.6.29/lockdep-rt-recursion-limit-fix.patch][2.6.29]]
  - 3.0
* [2.6.23 - 2.6.29] Don't let -rt rw_semaphors do _non_owner locks {C::feature::rtsupport::prevent rw_semaphore in PREEMPT_RT from performing down_read_non_owner}
  + [[file:2.6.23/dont-let-rt-rw_semaphores-do-non_owner-locks.patch][2.6.23]]
    [[file:2.6.24/dont-let-rt-rw_semaphores-do-non_owner-locks.patch][2.6.24]]
  M [[file:2.6.25/dont-let-rt-rw_semaphores-do-non_owner-locks.patch][2.6.25]]
    [[file:2.6.26/dont-let-rt-rw_semaphores-do-non_owner-locks.patch][2.6.26]]
    [[file:2.6.29/dont-let-rt-rw_semaphores-do-non_owner-locks.patch][2.6.29]]
  - 3.0
* [2.6.23 - 2.6.29] remove: check pgt cache calls {C::maintain::refactor::remove check_pgt_cache}
  + [[file:2.6.23/remove-check-pgt-cache-calls.patch][2.6.23]]
    [[file:2.6.24/remove-check-pgt-cache-calls.patch][2.6.24]]
  m [[file:2.6.25/remove-check-pgt-cache-calls.patch][2.6.25]]
  m [[file:2.6.26/remove-check-pgt-cache-calls.patch][2.6.26]]
  m [[file:2.6.29/remove-check-pgt-cache-calls.patch][2.6.29]]
  - 3.0
* [2.6.23 - 2.6.29] x86: activate HARDIRQS_SW_RESEND {C::feature::hardware::use soft mechanism to trigger
execution of pending interrupts}
  + [[file:2.6.23/genirq-soft-resend.patch][2.6.23]]
  M [[file:2.6.24/genirq-soft-resend.patch][2.6.24]]
  m [[file:2.6.25/genirq-soft-resend.patch][2.6.25]]
  m [[file:2.6.26/genirq-soft-resend.patch][2.6.26]]
  m [[file:2.6.29/genirq-soft-resend.patch][2.6.29]]
  - 3.0
* [2.6.23 - 2.6.29] WARNING: at kernel/sched.c:5071 2.6.23-rc1-rt7 {C::bug::data_err::semantics::semantics::change conditional compilation marco}
  + [[file:2.6.23/cond_resched_softirq-WARN-fix.patch][2.6.23]]
    [[file:2.6.24/cond_resched_softirq-WARN-fix.patch][2.6.24]]
    [[file:2.6.25/cond_resched_softirq-WARN-fix.patch][2.6.25]]
    [[file:2.6.26/cond_resched_softirq-WARN-fix.patch][2.6.26]]
  m [[file:2.6.29/cond_resched_softirq-WARN-fix.patch][2.6.29]]
  - 3.0
* [2.6.23 - 2.6.29] QRCU with lockless fastpath {C::performance::mutex::QRCU with lockless fastpath}
  + [[file:2.6.23/qrcu.patch][2.6.23]]
    [[file:2.6.24/qrcu.patch][2.6.24]]
  m [[file:2.6.25/qrcu.patch][2.6.25]]
    [[file:2.6.26/qrcu.patch][2.6.26]]
    [[file:2.6.29/qrcu.patch][2.6.29]]
  - 3.0
* [2.6.23 - 2.6.29] convert i_alloc_sem for direct_io.c craziness! {C::bug::deadlock::semantics::semantics::converts i_alloc_sem into compat_rw_semaphore}
  + [[file:2.6.23/hack-convert-i_alloc_sem-for-direct_io-craziness.patch][2.6.23]]
    [[file:2.6.24/hack-convert-i_alloc_sem-for-direct_io-craziness.patch][2.6.24]]
    [[file:2.6.25/hack-convert-i_alloc_sem-for-direct_io-craziness.patch][2.6.25]]
    [[file:2.6.26/hack-convert-i_alloc_sem-for-direct_io-craziness.patch][2.6.26]]
    [[file:2.6.29/hack-convert-i_alloc_sem-for-direct_io-craziness.patch][2.6.29]]
  - 3.0
* [2.6.23 - 2.6.29] preempt: realtime mmdrop delayed {C::performance::mm::delay drop of mm or task}
  + [[file:2.6.23/preempt-realtime-mmdrop-delayed.patch][2.6.23]]
  M [[file:2.6.24/preempt-realtime-mmdrop-delayed.patch][2.6.24]]
  M [[file:2.6.25/preempt-realtime-mmdrop-delayed.patch][2.6.25]]
  M [[file:2.6.26/preempt-realtime-mmdrop-delayed.patch][2.6.26]]
  m [[file:2.6.29/preempt-realtime-mmdrop-delayed.patch][2.6.29]]
  - 3.0
* [2.6.23 - 2.6.29] patches/sched-rt-stats.patch {C::maintain::refactor::merge previous patches}
  + [[file:2.6.23/sched-rt-stats.patch][2.6.23]]
  M [[file:2.6.24/sched-rt-stats.patch][2.6.24]]
    [[file:2.6.25/sched-rt-stats.patch][2.6.25]]
    [[file:2.6.26/sched-rt-stats.patch][2.6.26]]
    [[file:2.6.29/sched-rt-stats.patch][2.6.29]]
  - 3.0
* [2.6.23 - 2.6.29] rt: mutex preempt debugging {C::feature::debuginfo::mutex preempt debugging}
  + [[file:2.6.23/rt-mutex-preempt-debugging.patch][2.6.23]]
  M [[file:2.6.24/rt-mutex-preempt-debugging.patch][2.6.24]]
  M [[file:2.6.25/rt-mutex-preempt-debugging.patch][2.6.25]]
  m [[file:2.6.26/rt-mutex-preempt-debugging.patch][2.6.26]]
  M [[file:2.6.29/rt-mutex-preempt-debugging.patch][2.6.29]]
  - 3.0
* [2.6.23 - 2.6.29] rt: mutex trivial tcp preempt fix {C::maintain::refactor::replace preempt_enable with preempt_enable_no_resched}
  + [[file:2.6.23/rt-mutex-trivial-tcp-preempt-fix.patch][2.6.23]]
    [[file:2.6.24/rt-mutex-trivial-tcp-preempt-fix.patch][2.6.24]]
    [[file:2.6.25/rt-mutex-trivial-tcp-preempt-fix.patch][2.6.25]]
    [[file:2.6.26/rt-mutex-trivial-tcp-preempt-fix.patch][2.6.26]]
  m [[file:2.6.29/rt-mutex-trivial-tcp-preempt-fix.patch][2.6.29]]
  - 3.0
* [2.6.23 - 2.6.29] core: make asm/irq_regs.h available on every platform {C::maintain::refactor::make asm/irq_regs.h available on every platform}
  + [[file:2.6.23/softlockup-add-irq-regs-h.patch][2.6.23]]
  M [[file:2.6.24/softlockup-add-irq-regs-h.patch][2.6.24]]
    [[file:2.6.25/softlockup-add-irq-regs-h.patch][2.6.25]]
    [[file:2.6.26/softlockup-add-irq-regs-h.patch][2.6.26]]
    [[file:2.6.29/softlockup-add-irq-regs-h.patch][2.6.29]]
  - 3.0
* [2.6.23 - 2.6.29] ARM: use raw lock in __new_context {C::bug::crash::atomicity::mutex::use raw lock in __new_context}
  + [[file:2.6.23/preempt-realtime-arm-rawlock-in-mmu_context-h.patch][2.6.23]]
    [[file:2.6.24/preempt-realtime-arm-rawlock-in-mmu_context-h.patch][2.6.24]]
    [[file:2.6.25/preempt-realtime-arm-rawlock-in-mmu_context-h.patch][2.6.25]]
    [[file:2.6.26/preempt-realtime-arm-rawlock-in-mmu_context-h.patch][2.6.26]]
    [[file:2.6.29/preempt-realtime-arm-rawlock-in-mmu_context-h.patch][2.6.29]]
  - 3.0
* [2.6.23 - 2.6.29] preempt: realtime sched i386 {C::feature::rtsupport::realtime sched on i386}
  + [[file:2.6.23/preempt-realtime-sched-i386.patch][2.6.23]]
  M [[file:2.6.24/preempt-realtime-sched-i386.patch][2.6.24]]
  m [[file:2.6.25/preempt-realtime-sched-i386.patch][2.6.25]]
  m [[file:2.6.26/preempt-realtime-sched-i386.patch][2.6.26]]
  m [[file:2.6.29/preempt-realtime-sched-i386.patch][2.6.29]]
  - 3.0
* [2.6.23 - 2.6.29] rt: mutex trivial route cast fix {C::maintain::refactor::typecast NULL pointer}
  + [[file:2.6.23/rt-mutex-trivial-route-cast-fix.patch][2.6.23]]
    [[file:2.6.24/rt-mutex-trivial-route-cast-fix.patch][2.6.24]]
  m [[file:2.6.25/rt-mutex-trivial-route-cast-fix.patch][2.6.25]]
    [[file:2.6.26/rt-mutex-trivial-route-cast-fix.patch][2.6.26]]
    [[file:2.6.29/rt-mutex-trivial-route-cast-fix.patch][2.6.29]]
  - 3.0
* [2.6.23 - 2.6.29] Fix compilation of 2.6.23rc4-rt1 without CONFIG_PREEMPT_RT {C::bug::compile::compiling_err::syntax::move marco down}
  + [[file:2.6.23/fix-compilation-for-non-RT-in-timer.patch][2.6.23]]
    [[file:2.6.24/fix-compilation-for-non-RT-in-timer.patch][2.6.24]]
    [[file:2.6.25/fix-compilation-for-non-RT-in-timer.patch][2.6.25]]
    [[file:2.6.26/fix-compilation-for-non-RT-in-timer.patch][2.6.26]]
    [[file:2.6.29/fix-compilation-for-non-RT-in-timer.patch][2.6.29]]
  - 3.0
* [2.6.23 - 2.6.29] release quicklist before free_page {C::bug::crash::irq::irq::use per_cpu_locked}
  + [[file:2.6.23/quicklist-release-before-free-page.patch][2.6.23]]
    [[file:2.6.24/quicklist-release-before-free-page.patch][2.6.24]]
    [[file:2.6.25/quicklist-release-before-free-page.patch][2.6.25]]
    [[file:2.6.26/quicklist-release-before-free-page.patch][2.6.26]]
    [[file:2.6.29/quicklist-release-before-free-page.patch][2.6.29]]
  - 3.0
* [2.6.23 -    4.8] relay: Fix timer madness {C::bug::deadlock::semantics::semantics::remove timer calls}
  + [[file:2.6.23/relay-fix.patch][2.6.23]]
    [[file:2.6.24/relay-fix.patch][2.6.24]]
    [[file:2.6.25/relay-fix.patch][2.6.25]]
    [[file:2.6.26/relay-fix.patch][2.6.26]]
  M [[file:2.6.29/relay-fix.patch][2.6.29]]
    [[file:3.0/relay-fix-timer-madness.patch][3.0]]
    [[file:3.2/relay-fix-timer-madness.patch][3.2]]
    [[file:3.4/relay-fix-timer-madness.patch][3.4]]
    [[file:3.6/relay-fix-timer-madness.patch][3.6]]
    [[file:3.8/relay-fix-timer-madness.patch][3.8]]
    [[file:3.10/relay-fix-timer-madness.patch][3.10]]
    [[file:3.12/relay-fix-timer-madness.patch][3.12]]
    [[file:3.14/relay-fix-timer-madness.patch][3.14]]
    [[file:3.18/relay-fix-timer-madness.patch][3.18]]
    [[file:4.0/relay-fix-timer-madness.patch][4.0]]
    [[file:4.1/relay-fix-timer-madness.patch][4.1]]
    [[file:4.4/relay-fix-timer-madness.patch][4.4]]
    [[file:4.6/relay-fix-timer-madness.patch][4.6]]
    [[file:4.8/relay-fix-timer-madness.patch][4.8]]
  - 4.9
* [2.6.23 -   4.11] infiniband: Mellanox IB driver patch use _nort() primitives {C::bug::crash::irq::irq::use _nort primitives}
  + [[file:2.6.23/preempt-realtime-mellanox-driver-fix.patch][2.6.23]]
    [[file:2.6.24/preempt-realtime-mellanox-driver-fix.patch][2.6.24]]
    [[file:2.6.25/preempt-realtime-mellanox-driver-fix.patch][2.6.25]]
    [[file:2.6.26/preempt-realtime-mellanox-driver-fix.patch][2.6.26]]
  m [[file:2.6.29/preempt-realtime-mellanox-driver-fix.patch][2.6.29]]
    [[file:3.0/infiniband-mellanox-ib-use-nort-irq.patch][3.0]]
    [[file:3.2/infiniband-mellanox-ib-use-nort-irq.patch][3.2]]
    [[file:3.4/infiniband-mellanox-ib-use-nort-irq.patch][3.4]]
    [[file:3.6/infiniband-mellanox-ib-use-nort-irq.patch][3.6]]
    [[file:3.8/infiniband-mellanox-ib-use-nort-irq.patch][3.8]]
    [[file:3.10/infiniband-mellanox-ib-use-nort-irq.patch][3.10]]
    [[file:3.12/infiniband-mellanox-ib-use-nort-irq.patch][3.12]]
    [[file:3.14/infiniband-mellanox-ib-use-nort-irq.patch][3.14]]
    [[file:3.18/infiniband-mellanox-ib-use-nort-irq.patch][3.18]]
    [[file:4.0/infiniband-mellanox-ib-use-nort-irq.patch][4.0]]
  m [[file:4.1/infiniband-mellanox-ib-use-nort-irq.patch][4.1]]
    [[file:4.4/infiniband-mellanox-ib-use-nort-irq.patch][4.4]]
    [[file:4.6/infiniband-mellanox-ib-use-nort-irq.patch][4.6]]
    [[file:4.8/infiniband-mellanox-ib-use-nort-irq.patch][4.8]]
    [[file:4.9/infiniband-mellanox-ib-use-nort-irq.patch][4.9]]
    [[file:4.11/infiniband-mellanox-ib-use-nort-irq.patch][4.11]]
* [2.6.24         ] sched: break out early if RT task cannot be migrated {C::performance::smallsize::break out early if RT task cannot be migrated}
  + [[file:2.6.24/0017-sched-break-out-early-if-RT-task-cannot-be-migrated.patch][2.6.24]]
  - 2.6.25
* [2.6.24         ] mcount-fault-notrace-annotations.patch {C::feature::debuginfo::add notrace}
  + [[file:2.6.24/mcount-fault-notrace-annotations.patch][2.6.24]]
  - 2.6.25
* [2.6.24         ] sched: clean up this_rq use in kernel/sched_rt.c {C::maintain::refactor::clean up this_rq use}
  + [[file:2.6.24/0009-sched-clean-up-this_rq-use-in-kernel-sched_rt.c.patch][2.6.24]]
  - 2.6.25
* [2.6.24         ] lib/Kconfig.debug {C::feature::debuginfo::change config for /proc/sys/kernel/preempt_max_latency}
  + [[file:2.6.24/critical-timing-kconfig.patch][2.6.24]]
  - 2.6.25
* [2.6.24         ] add notrace annotations to vsyscall. {C::feature::debuginfo::add notrace}
  + [[file:2.6.24/mcount-add-x86-vdso-notrace-annotations.patch][2.6.24]]
  - 2.6.25
* [2.6.24         ] sched: get rid of 'new_cpu' in try_to_wake_up() {C::maintain::refactor::remove new_cpu}
  + [[file:2.6.24/0039-sched-get-rid-of-new_cpu-in-try_to_wake_up.patch][2.6.24]]
  - 2.6.25
* [2.6.24         ] sched: add credits for RT balancing improvements {C::maintain::donothing::add credits for RT balancing improvements}
  + [[file:2.6.24/0035-sched-add-credits-for-RT-balancing-improvements.patch][2.6.24]]
  - 2.6.25
* [2.6.24         ] sched: break out search for RT tasks {C::maintain::refactor::isolate the search logic into a function}
  + [[file:2.6.24/0011-sched-break-out-search-for-RT-tasks.patch][2.6.24]]
  - 2.6.25
* [2.6.24         ] sched: add RT-balance cpu-weight {C::feature::sched::add RT-balance cpu-weight to avoid overhead}
  + [[file:2.6.24/0008-sched-add-RT-balance-cpu-weight.patch][2.6.24]]
  - 2.6.25
* [2.6.24         ] mcount-rcu-notrace-annotations.patch {C::feature::debuginfo::add notrace}
  + [[file:2.6.24/mcount-rcu-notrace-annotations.patch][2.6.24]]
  - 2.6.25
* [2.6.24         ] sched: RT-balance on new task {C::feature::sched::RT wakeup balance}
  + [[file:2.6.24/0020-sched-RT-balance-on-new-task.patch][2.6.24]]
  - 2.6.25
* [2.6.24         ] sched: RT balancing: include current CPU {C::maintain::refactor::include current CPU in search}
  + [[file:2.6.24/0012-sched-RT-balancing-include-current-CPU.patch][2.6.24]]
  - 2.6.25
* [2.6.24         ] sched: dynamically update the root-domain span/online maps {C::performance::idle::dynamically update the root-domain span/online maps}
  + [[file:2.6.24/dynamically-update-root-domain-span-online-maps.patch][2.6.24]]
  - 2.6.25
* [2.6.24         ] preempt_max_latency to microseconds {C::maintain::refactor::use microseconds instead of cycles}
  + [[file:2.6.24/latency-trace-convert-back-to-ms.patch][2.6.24]]
  - 2.6.25
* [2.6.24         ] kvm: check need_resched() inside the irq disabled region {C::bug::rtlatency::irq::irq::check need_resched() inside the irq_disabled region}
  + [[file:2.6.24/kvm-fix-preemption-bug.patch][2.6.24]]
  - 2.6.25
* [2.6.24         ] sched: no need for 'affine wakeup' balancing in {C::performance::smallsize::skip unnecessary check}
  + [[file:2.6.24/0038-sched-no-need-for-affine-wakeup-balancing-in.patch][2.6.24]]
  - 2.6.25
* [2.6.24         ] handle accurate time keeping over long delays {C::bug::data_err::time::semantics::add var to accumulate}
  + [[file:2.6.24/time-accumulate-over-delay.patch][2.6.24]]
  - 2.6.25
* [2.6.24         ] sched: clean up kernel/sched_rt.c {C::maintain::donothing::clean up whitespace damage and missing comments}
  + [[file:2.6.24/0024-sched-clean-up-kernel-sched_rt.c.patch][2.6.24]]
  - 2.6.25
* [2.6.24         ] sched: RT-balance, replace hooks with pre/post schedule and wakeup methods {C::feature::sched::replace hooks with pre/post schedule and wakeup methods}
  + [[file:2.6.24/0041-sched-RT-balance-replace-hooks-with-pre-post-sched.patch][2.6.24]]
  - 2.6.25
* [2.6.24         ] sched: RT-balance, optimize cpu search {C::performance::smallsize::optimize cpu search}
  + [[file:2.6.24/0019-sched-RT-balance-optimize-cpu-search.patch][2.6.24]]
  - 2.6.25
* [2.6.24         ] sched: clean up schedule_balance_rt() {C::maintain::donothing::clean up schedule_balance_rt()}
  + [[file:2.6.24/0028-sched-clean-up-schedule_balance_rt.patch][2.6.24]]
  - 2.6.25
* [2.6.24         ] sched: add sched-domain roots {C::feature::sched::add sched-domain roots}
  + [[file:2.6.24/0029-sched-add-sched-domain-roots.patch][2.6.24]]
  - 2.6.25
* [2.6.24         ] x86: Annotate core code that should not be traced {C::feature::debuginfo::add notrace}
  + [[file:2.6.24/mcount-add-time-notrace-annotations.patch][2.6.24]]
  - 2.6.25
* [2.6.24         ] mcount-lockdep-notrace-annotations.patch {C::feature::debuginfo::add notrace}
  + [[file:2.6.24/mcount-lockdep-notrace-annotations.patch][2.6.24]]
  - 2.6.25
* [2.6.24         ] sched: wake-balance fixes {C::feature::sched::consider rt.overloaded during migration}
  + [[file:2.6.24/0015-sched-wake-balance-fixes.patch][2.6.24]]
  - 2.6.25
* [2.6.24         ] sched: RT-balance, only adjust overload state when changing {C::feature::sched::only adjust overload state when changing}
  + [[file:2.6.24/0043-sched-RT-balance-only-adjust-overload-state-when-c.patch][2.6.24]]
  - 2.6.25
* [2.6.24         ] sched: track highest prio task queued {C::feature::sched::track highest priority task queued}
  + [[file:2.6.24/0002-sched-track-highest-prio-task-queued.patch][2.6.24]]
  - 2.6.25
* [2.6.24         ] Add basic support for gcc profiler instrumentation {C::feature::debuginfo::basic support for gcc profiler instrumentation}
  + [[file:2.6.24/mcount-add-basic-support-for-gcc-profiler-instrum.patch][2.6.24]]
  - 2.6.25
* [2.6.24         ] sched: reactivate fork balancing {C::feature::sched::reactivate fork balancing}
  + [[file:2.6.24/0036-sched-reactivate-fork-balancing.patch][2.6.24]]
  - 2.6.25
* [2.6.24         ] sched: whitespace cleanups in topology.h {C::maintain::donothing::whitespace cleanups in topology.h}
  + [[file:2.6.24/0037-sched-whitespace-cleanups-in-topology.h.patch][2.6.24]]
  - 2.6.25
* [2.6.24         ] add notrace annotations for NMI routines {C::feature::debuginfo::add notrace for NMI routines}
  + [[file:2.6.24/mcount-nmi-notrace-annotations.patch][2.6.24]]
  - 2.6.25
* [2.6.24         ] sched: count # of queued RT tasks {C::feature::sched:: count queued RT tasks}
  + [[file:2.6.24/0001-sched-count-of-queued-RT-tasks.patch][2.6.24]]
  - 2.6.25
* [2.6.24         ] sched: push RT tasks from overloaded CPUs {C::feature::sched::push RT tasks from overloaded CPUs}
  + [[file:2.6.24/0006-sched-push-RT-tasks-from-overloaded-CPUs.patch][2.6.24]]
  - 2.6.25
* [2.6.24         ] Add wakeup timing to expose /proc/preempt_max_latency {C::bug::data_err::time::semantics::change conditonal compilation marco}
  + [[file:2.6.24/latency-trace-sysctl-config-fix.patch][2.6.24]]
  - 2.6.25
* [2.6.24         ] sched: pre-route RT tasks on wakeup {C::feature::sched::optimized low-priority wakeup path}
  + [[file:2.6.24/0013-sched-pre-route-RT-tasks-on-wakeup.patch][2.6.24]]
  - 2.6.25
* [2.6.24         ] sched: RT-balance, avoid overloading {C::performance::cache::wake RT tasks up on another runqueue when possible, so rt task still in the same cpu for hot cache,tlb,etc.}
  + [[file:2.6.24/0016-sched-RT-balance-avoid-overloading.patch][2.6.24]]
  - 2.6.25
* [2.6.24         ] sched: RT-balance, optimize {C::performance::smallsize::skip search if only one CPU is available}
  + [[file:2.6.24/0018-sched-RT-balance-optimize.patch][2.6.24]]
  - 2.6.25
* [2.6.24         ] add get_monotonic_cycles {C::feature::timer::reliable clock source for latency tracer}
  + [[file:2.6.24/get-monotonic-cycles.patch][2.6.24]]
  - 2.6.25
* [2.6.24         ] Subject: SCHED - Only balance our RT tasks within our {C::feature::sched::only balance rt tasks within our domain}
  + [[file:2.6.24/0031-Subject-SCHED-Only-balance-our-RT-tasks-within-ou.patch][2.6.24]]
  - 2.6.25
* [2.6.24         ] sched: clean up find_lock_lowest_rq() {C::maintain::donothing::clean up find_lock_lowest_rq()}
  + [[file:2.6.24/0022-sched-clean-up-find_lock_lowest_rq.patch][2.6.24]]
  - 2.6.25
* [2.6.24         ] sched: optimize RT affinity {C::performance::cache::optimize RT affinity according to CPU topology}
  + [[file:2.6.24/0014-sched-optimize-RT-affinity.patch][2.6.24]]
  - 2.6.25
* [2.6.24         ] sched: clean up pull_rt_task() {C::maintain::donothing::clean up pull_rt_task()}
  + [[file:2.6.24/0027-sched-clean-up-pull_rt_task.patch][2.6.24]]
  - 2.6.25
* [2.6.24         ] mcount-irqs-notrace-annotations.patch {C::feature::debuginfo::add notrace}
  + [[file:2.6.24/mcount-irqs-notrace-annotations.patch][2.6.24]]
  - 2.6.25
* [2.6.24         ] sched: remove rt_overload() {C::performance::smallsize::remove rt_overload()}
  + [[file:2.6.24/0025-sched-remove-rt_overload.patch][2.6.24]]
  - 2.6.25
* [2.6.24         ] sched: de-SCHED_OTHER-ize the RT path {C::feature::sched::create a new sched_class interface for pre-wakeup routing decisions}
  + [[file:2.6.24/0010-sched-de-SCHED_OTHER-ize-the-RT-path.patch][2.6.24]]
  - 2.6.25
* [2.6.24         ] [yanmin_zhang@linux.intel.com: aim7 -30% regression in 2.6.24-rc1] {C::bug::rtlatency::semantics::semantics::allocate memory on higher address}
  + [[file:2.6.24/latency-tracer-arch-low-address.patch][2.6.24]]
  - 2.6.25
* [2.6.24         ] sched: disable standard balancer for RT tasks {C::feature::sched::remove standard balancer for RT tasks}
  + [[file:2.6.24/0007-sched-disable-standard-balancer-for-RT-tasks.patch][2.6.24]]
  - 2.6.25
* [2.6.24         ] sched: clean up overlong line in kernel/sched_debug.c {C::maintain::donothing::clean up overlong line}
  + [[file:2.6.24/0023-sched-clean-up-overlong-line-in-kernel-sched_debug.patch][2.6.24]]
  - 2.6.25
* [2.6.24         ] sched: update root-domain spans upon departure {C::feature::sched::update root-domain spans upon departure}
  + [[file:2.6.24/0030-sched-update-root-domain-spans-upon-departure.patch][2.6.24]]
  - 2.6.25
* [2.6.24         ] mcount-preemptcount-notrace-annotations.patch {C::feature::debuginfo::add notrace}
  + [[file:2.6.24/mcount-preemptcount-notrace-annotations.patch][2.6.24]]
  - 2.6.25
* [2.6.24         ] fix warning on dec_rt_tasks on UP {C::maintain::refactor::add conditional compilation marco}
  + [[file:2.6.24/remove-unused-var-warning.patch][2.6.24]]
  - 2.6.25
* [2.6.24         ] sched: remove unused JIFFIES_TO_NS() macro {C::maintain::refactor::remove unused code}
  + [[file:2.6.24/0033-sched-remove-unused-JIFFIES_TO_NS-macro.patch][2.6.24]]
  - 2.6.25
* [2.6.24         ] x86_64: notrace annotations {C::feature::debuginfo::add notrace}
  + [[file:2.6.24/mcount-add-x86_64-notrace-annotations.patch][2.6.24]]
  - 2.6.25
* [2.6.24         ] vsyscall-fixadder-pa.patch {C::bug::crash::err_var::semantics::use 'index to address' translation}
  + [[file:2.6.24/vsyscall-fixadder-pa.patch][2.6.24]]
  - 2.6.25
* [2.6.24         ] sched: RT-balance, add new methods to sched_class {C::feature::sched::new methods to sched_class}
  + [[file:2.6.24/0042-sched-RT-balance-add-new-methods-to-sched_class.patch][2.6.24]]
  - 2.6.25
* [2.6.24         ] [mingo@elte.hu: [BUG] Strange 1-second pauses during Resume-from-RAM] {C::bug::data_err::time::semantics::ignore any time spent resumed}
  + [[file:2.6.24/trace-suspend-resume.patch][2.6.24]]
  - 2.6.25
* [2.6.24         ] sched: remove do_div() from __sched_slice() {C::performance::smallsize::remove do_div() from __sched_slice()}
  + [[file:2.6.24/0040-sched-remove-do_div-from-__sched_slice.patch][2.6.24]]
  - 2.6.25
* [2.6.24         ] cpu_idle_wait handle CPUs in idle {C::bug::idle::hardware::idle::wake up CPUs in idle}
  + [[file:2.6.24/cpu-idle-wait-ipi-send.patch][2.6.24]]
  - 2.6.25
* [2.6.24         ] sched: fix sched_rt.c:join/leave_domain {C::bug::compile::compiling_err::syntax::move code around}
  + [[file:2.6.24/0032-sched-fix-sched_rt.c-join-leave_domain.patch][2.6.24]]
  - 2.6.25
* [2.6.24         ] PPC64 doesn't compile with CONFIG_SMP=n {C::bug::compile::compiling_err::syntax::add missing marcos}
  + [[file:2.6.24/ppc64-non-smp-compile-fix-per-cpu.patch][2.6.24]]
  - 2.6.25
* [2.6.24         ] sched: pull RT tasks from overloaded runqueues {C::feature::sched::algorithm to pull tasks from RT overloaded runqueues}
  + [[file:2.6.24/0005-sched-pull-RT-tasks-from-overloaded-runqueues.patch][2.6.24]]
  - 2.6.25
* [2.6.24         ] cycles_to_usecs rounding fix {C::bug::data_err::time::semantics::fix rounding down in cycles_to_usecs}
  + [[file:2.6.24/latency-trace-cycles-to-usecs-rounding-fix.patch][2.6.24]]
  - 2.6.25
* [2.6.24         ] Fixup merge between xtime_cache and timekeeping starvation fix {C::bug::data_err::semantics::semantics::fixup merge between xtime_cache and timekeeping starvation fix}
  + [[file:2.6.24/time-accumulate-offset-fix.patch][2.6.24]]
  - 2.6.25
* [2.6.24         ] Annotate core code that should not be traced {C::feature::debuginfo::add notrace}
  + [[file:2.6.24/mcount-annotate-generic-code.patch][2.6.24]]
  - 2.6.25
* [2.6.24         ] sched: remove leftover debugging {C::performance::smallsize::remove leftover debugging}
  + [[file:2.6.24/0026-sched-remove-leftover-debugging.patch][2.6.24]]
  - 2.6.25
* [2.6.24         ] Revert Softdisable for simple irqs. {C::bug::irq::irq::irq::reverts the masking in the simple handler}
  + [[file:2.6.24/revert-handle-simple-irq-soft-disable.patch][2.6.24]]
  - 2.6.25
* [2.6.24         ] sched: add rt-overload tracking {C::feature::sched::add an RT overload accounting system}
  + [[file:2.6.24/0004-sched-add-rt-overload-tracking.patch][2.6.24]]
  - 2.6.25
* [2.6.24         ] sched: style cleanup, #2 {C::maintain::donothing::cleanup the code}
  + [[file:2.6.24/0034-sched-style-cleanup-2.patch][2.6.24]]
  - 2.6.25
* [2.6.24         ] sched: clean up pick_next_highest_task_rt() {C::maintain::donothing::clean up pick_next_highest_task_rt()}
  + [[file:2.6.24/0021-sched-clean-up-pick_next_highest_task_rt.patch][2.6.24]]
  - 2.6.25
* [2.6.24         ] sched: add RT task pushing {C::feature::sched::algorithm to push extra RT tasks off a runqueue to other CPU runqueues}
  + [[file:2.6.24/0003-sched-add-RT-task-pushing.patch][2.6.24]]
  - 2.6.25
* [2.6.24         ] don't panic on failed bootmem alloc {C::bug::crash::semantics::semantics::don't panic on failed bootmem alloc}
  + [[file:2.6.24/latency-tracer-dont-panic-on-failed-bootmem-alloc.patch][2.6.24]]
  - 2.6.25
* [2.6.24         ] sched: remove some old cpuset logic {C::performance::smallsize::remove some old cpuset logic}
  + [[file:2.6.24/0044-sched-remove-some-old-cpuset-logic.patch][2.6.24]]
  - 2.6.25
* [2.6.24 - 2.6.25] kvm: silence the printk noise {C::feature::debuginfo::silence the printk noise}
  + [[file:2.6.24/kvm-make-less-noise.patch][2.6.24]]
    [[file:2.6.25/kvm-make-less-noise.patch][2.6.25]]
  - 2.6.26
* [2.6.24 - 2.6.25] Markers Implementation for RCU Preempt Tracing - Ver II {C::feature::rtsupport::convert preempt RCU tracing code infrastructure to implement
markers}
  + [[file:2.6.24/rcu-preempt-trace-markers-1.patch][2.6.24]]
  M [[file:2.6.25/rcu-preempt-trace-markers-1.patch][2.6.25]]
  - 2.6.26
* [2.6.24 - 2.6.25] ppc-select-mcount.patch {C::feature::statistics::select mcount for PPC}
  + [[file:2.6.24/ppc-select-mcount.patch][2.6.24]]
  m [[file:2.6.25/ppc-select-mcount.patch][2.6.25]]
  - 2.6.26
* [2.6.24 - 2.6.25] irq-flags-unsigned-long.patch {C::maintain::refactor::convert irq flags to unsigned long}
  + [[file:2.6.24/irq-flags-unsigned-long.patch][2.6.24]]
    [[file:2.6.25/irq-flags-unsigned-long.patch][2.6.25]]
  - 2.6.26
* [2.6.24 - 2.6.25] kvm: move the apic timer migration {C::bug::crash::preempt::semantics::move the apic timer migration}
  + [[file:2.6.24/kvm-lapic-migrate-latency-fix.patch][2.6.24]]
    [[file:2.6.25/kvm-lapic-migrate-latency-fix.patch][2.6.25]]
  - 2.6.26
* [2.6.24 - 2.6.25] lost patch for mpc52xx spinlock {C::bug::deadlock::deadlock::mutex::spin_unlock before tty_flip_buffer_push}
  + [[file:2.6.24/kernel-bug-after-entering-something-from-login.patch][2.6.24]]
  m [[file:2.6.25/kernel-bug-after-entering-something-from-login.patch][2.6.25]]
  - 2.6.26
* [2.6.24 - 2.6.25] Markers Implementation for Preempt RCU Boost Tracing - Ver II {C::feature::rtsupport::convert the tracing mechanism of Preempt RCU boosting into
markers}
  + [[file:2.6.24/rcu-preempt-trace-markers-2.patch][2.6.24]]
  m [[file:2.6.25/rcu-preempt-trace-markers-2.patch][2.6.25]]
  - 2.6.26
* [2.6.24 - 2.6.25] Use real time pcp locking for page draining during cpu unplug {C::bug::crash::irq::mutex::use real time pcp locking for page draining during cpu unplug}
  + [[file:2.6.24/page-alloc-use-real-time-pcp-locking-for-page-draining.patch][2.6.24]]
    [[file:2.6.25/page-alloc-use-real-time-pcp-locking-for-page-draining.patch][2.6.25]]
  - 2.6.26
* [2.6.24 - 2.6.25] kvm: add need_resched_delayed() {C::performance::preempt::loose condition}
  + [[file:2.6.24/kvm-preempt-rt-resched-delayed.patch][2.6.24]]
    [[file:2.6.25/kvm-preempt-rt-resched-delayed.patch][2.6.25]]
  - 2.6.26
* [2.6.24 - 2.6.26] rt: PI-workqueue: propagate prio for delayed work {C::feature::rtsupport::propagate prio for delayed work}
  + [[file:2.6.24/rt-delayed-prio.patch][2.6.24]]
  m [[file:2.6.25/rt-delayed-prio.patch][2.6.25]]
  m [[file:2.6.26/rt-delayed-prio.patch][2.6.26]]
  - 2.6.29
* [2.6.24 - 2.6.26] RT: change from raw_spinlock_t to __raw_spinlock_t {C::bug::compile::compiling_err::syntax::change from raw_spinlock_t to __raw_spinlock_t}
  + [[file:2.6.24/mips-change-raw-spinlock-type.patch][2.6.24]]
    [[file:2.6.25/mips-change-raw-spinlock-type.patch][2.6.25]]
    [[file:2.6.26/mips-change-raw-spinlock-type.patch][2.6.26]]
  - 2.6.29
* [2.6.24 - 2.6.26] send-nmi-all-preempt-disable.patch {C::performance::preempt::preempt disable}
  + [[file:2.6.24/send-nmi-all-preempt-disable.patch][2.6.24]]
    [[file:2.6.25/send-nmi-all-preempt-disable.patch][2.6.25]]
    [[file:2.6.26/send-nmi-all-preempt-disable.patch][2.6.26]]
  - 2.6.29
* [2.6.24 - 2.6.26] rt: PI-workqueue: fix barriers {C::bug::rtlatency::order::sync::The solution used is to nest plist structures.}
  + [[file:2.6.24/rt-workqueue-barrier.patch][2.6.24]]
    [[file:2.6.25/rt-workqueue-barrier.patch][2.6.25]]
  m [[file:2.6.26/rt-workqueue-barrier.patch][2.6.26]]
  - 2.6.29
* [2.6.24 - 2.6.26] rt: list_splice2 {C::feature::rtsupport::introduce list_splice2--,_tail--(), see patch rt: PI-workqueue: fix barriers}
  + [[file:2.6.24/rt-list-mods.patch][2.6.24]]
    [[file:2.6.25/rt-list-mods.patch][2.6.25]]
  M [[file:2.6.26/rt-list-mods.patch][2.6.26]]
  - 2.6.29
* [2.6.24 - 2.6.26] schedule-tail-balance-disable-irqs.patch {C::performance::irq::replace spin_lock_irq with spin_lock}
  + [[file:2.6.24/schedule-tail-balance-disable-irqs.patch][2.6.24]]
    [[file:2.6.25/schedule-tail-balance-disable-irqs.patch][2.6.25]]
    [[file:2.6.26/schedule-tail-balance-disable-irqs.patch][2.6.26]]
  - 2.6.29
* [2.6.24 - 2.6.26] don't trace early init functions for ppc32 {C::feature::debuginfo::add notrace}
  + [[file:2.6.24/ppc32_notrace_init_functions.patch][2.6.24]]
    [[file:2.6.25/ppc32_notrace_init_functions.patch][2.6.25]]
  M [[file:2.6.26/ppc32_notrace_init_functions.patch][2.6.26]]
  - 2.6.29
* [2.6.24 - 2.6.26] rt: PI-workqueue: wait_on_work() fixup {C::bug::rtlatency::order::sync::using a wait_queue to target at a worklet in a nested list}
  + [[file:2.6.24/rt-wq-barrier-fix.patch][2.6.24]]
    [[file:2.6.25/rt-wq-barrier-fix.patch][2.6.25]]
    [[file:2.6.26/rt-wq-barrier-fix.patch][2.6.26]]
  - 2.6.29
* [2.6.24 - 2.6.26] sched_prio.patch {C::bug::compile::compiling_err::syntax::fix a circular dependency}
  + [[file:2.6.24/sched_prio.patch][2.6.24]]
    [[file:2.6.25/sched_prio.patch][2.6.25]]
    [[file:2.6.26/sched_prio.patch][2.6.26]]
  - 2.6.29
* [2.6.24 - 2.6.26] per_cpu__ppc64_tlb_batch is only for 64 bit {C::bug::compile::compiling_err::syntax::change marcos}
  + [[file:2.6.24/ppc-make-tlb-batch-64-only.patch][2.6.24]]
    [[file:2.6.25/ppc-make-tlb-batch-64-only.patch][2.6.25]]
    [[file:2.6.26/ppc-make-tlb-batch-64-only.patch][2.6.26]]
  - 2.6.29
* [2.6.24 - 2.6.26] local_irq_save_nort-in-swap.patch {C::feature::rtsupport:: change local_irq_save/restore to local_irq_save/restore_nort}
  + [[file:2.6.24/local_irq_save_nort-in-swap.patch][2.6.24]]
    [[file:2.6.25/local_irq_save_nort-in-swap.patch][2.6.25]]
    [[file:2.6.26/local_irq_save_nort-in-swap.patch][2.6.26]]
  - 2.6.29
* [2.6.24 - 2.6.26] rcu-preempt-boost-default.patch {C::feature::rtsupport::enable priority boosting of RCU by default}
  + [[file:2.6.24/rcu-preempt-boost-default.patch][2.6.24]]
    [[file:2.6.25/rcu-preempt-boost-default.patch][2.6.25]]
    [[file:2.6.26/rcu-preempt-boost-default.patch][2.6.26]]
  - 2.6.29
* [2.6.24 - 2.6.26] ppc32-latency-compile-hack-fixes.patch {C::bug::compile::compiling_err::syntax::add defines}
  + [[file:2.6.24/ppc32-latency-compile-hack-fixes.patch][2.6.24]]
    [[file:2.6.25/ppc32-latency-compile-hack-fixes.patch][2.6.25]]
    [[file:2.6.26/ppc32-latency-compile-hack-fixes.patch][2.6.26]]
  - 2.6.29
* [2.6.24 - 2.6.26] Change bug_on for atomic to pagefault_disabled. {C::bug::data_err::semantics::semantics::change bug_on for atomic to pagefault_disabled}
  + [[file:2.6.24/fix-bug-on-in-filemap.patch][2.6.24]]
    [[file:2.6.25/fix-bug-on-in-filemap.patch][2.6.25]]
    [[file:2.6.26/fix-bug-on-in-filemap.patch][2.6.26]]
  - 2.6.29
* [2.6.24 - 2.6.26] rt: PI-workqueue support {C::feature::rtsupport::support for priority queueing and priority inheritance to the workqueue infrastructure}
  + [[file:2.6.24/rt-workqeue-prio.patch][2.6.24]]
    [[file:2.6.25/rt-workqeue-prio.patch][2.6.25]]
  m [[file:2.6.26/rt-workqeue-prio.patch][2.6.26]]
  - 2.6.29
* [2.6.24 - 2.6.26] ARM: compile fix for event tracing {C::bug::compile::compiling_err::syntax::change marco}
  + [[file:2.6.24/arm-compile-fix.patch][2.6.24]]
    [[file:2.6.25/arm-compile-fix.patch][2.6.25]]
    [[file:2.6.26/arm-compile-fix.patch][2.6.26]]
  - 2.6.29
* [2.6.24 - 2.6.26] Disable running softirqs from hardirqs completely! {C::feature::rtsupport::disable running softirqs from hardirqs}
  + [[file:2.6.24/disable-run-softirq-from-hardirq-completely.patch][2.6.24]]
    [[file:2.6.25/disable-run-softirq-from-hardirq-completely.patch][2.6.25]]
    [[file:2.6.26/disable-run-softirq-from-hardirq-completely.patch][2.6.26]]
  - 2.6.29
* [2.6.24 - 2.6.26] RT: remove duplicate time/Kconfig {C::maintain::donothing::remove duplicate time/Kconfig}
  + [[file:2.6.24/mips-remove-duplicate-kconfig.patch][2.6.24]]
    [[file:2.6.25/mips-remove-duplicate-kconfig.patch][2.6.25]]
  m [[file:2.6.26/mips-remove-duplicate-kconfig.patch][2.6.26]]
  - 2.6.29
* [2.6.24 - 2.6.26] CFS: enable irqs in fire_sched_in_preempt_notifier {C::feature::sched::enable irqs in fire_sched_in_preempt_notifier}
  + [[file:2.6.24/sched-enable-irqs-in-preempt-in-notifier-call.patch][2.6.24]]
    [[file:2.6.25/sched-enable-irqs-in-preempt-in-notifier-call.patch][2.6.25]]
    [[file:2.6.26/sched-enable-irqs-in-preempt-in-notifier-call.patch][2.6.26]]
  - 2.6.29
* [2.6.24 - 2.6.26] hacks to allow -rt to run kernbench on POWER {C::feature::rtsupport::hacks to allow -rt to run kernbench on POWER}
  + [[file:2.6.24/ppc-hacks-to-allow-rt-to-run-kernbench.patch][2.6.24]]
    [[file:2.6.25/ppc-hacks-to-allow-rt-to-run-kernbench.patch][2.6.25]]
  M [[file:2.6.26/ppc-hacks-to-allow-rt-to-run-kernbench.patch][2.6.26]]
  - 2.6.29
* [2.6.24 - 2.6.26] rcu-preempt-boost-fix.patch {C::bug::deadlock::preempt::preempt::add careful checks}
  + [[file:2.6.24/rcu-preempt-boost-fix.patch][2.6.24]]
  M [[file:2.6.25/rcu-preempt-boost-fix.patch][2.6.25]]
    [[file:2.6.26/rcu-preempt-boost-fix.patch][2.6.26]]
  - 2.6.29
* [2.6.24 - 2.6.26] ppc-chpr-set-rtc-lock.patch {C::feature::rtsupport::change raw_spinlock_t to raw_spinlock}
  + [[file:2.6.24/ppc-chpr-set-rtc-lock.patch][2.6.24]]
    [[file:2.6.25/ppc-chpr-set-rtc-lock.patch][2.6.25]]
    [[file:2.6.26/ppc-chpr-set-rtc-lock.patch][2.6.26]]
  - 2.6.29
* [2.6.24 - 2.6.26] filemap-dont-bug-non-atomic.patch {C::feature::debuginfo::dont bug on non-atomic in PREEMPT_RT}
  + [[file:2.6.24/filemap-dont-bug-non-atomic.patch][2.6.24]]
    [[file:2.6.25/filemap-dont-bug-non-atomic.patch][2.6.25]]
    [[file:2.6.26/filemap-dont-bug-non-atomic.patch][2.6.26]]
  - 2.6.29
* [2.6.24 - 2.6.26] local_bh_enable() is safe for irqs_disabled() {C::feature::debuginfo::remove unnessary warning}
  + [[file:2.6.24/no-warning-for-irqs-disabled-in-local-bh-enable.patch][2.6.24]]
    [[file:2.6.25/no-warning-for-irqs-disabled-in-local-bh-enable.patch][2.6.25]]
    [[file:2.6.26/no-warning-for-irqs-disabled-in-local-bh-enable.patch][2.6.26]]
  - 2.6.29
* [2.6.24 - 2.6.26] rt: plist_head_splice {C::feature::other::merge-sort two plists together}
  + [[file:2.6.24/rt-plist-mods.patch][2.6.24]]
    [[file:2.6.25/rt-plist-mods.patch][2.6.25]]
    [[file:2.6.26/rt-plist-mods.patch][2.6.26]]
  - 2.6.29
* [2.6.24 - 2.6.26] 2.6.24-rc7-rt1 {C::bug::idle::semantics::sched::return directly on single-core CPU}
  + [[file:2.6.24/hack-fix-rt-migration.patch][2.6.24]]
  M [[file:2.6.25/hack-fix-rt-migration.patch][2.6.25]]
    [[file:2.6.26/hack-fix-rt-migration.patch][2.6.26]]
  - 2.6.29
* [2.6.24 - 2.6.26] RT: remove conflicting rtc_lock declaration {C::bug::compile::compiling_err::syntax::remove conflicting rtc_lock declaration}
  + [[file:2.6.24/mips-remove-conlicting-rtc-lock-declaration.patch][2.6.24]]
    [[file:2.6.25/mips-remove-conlicting-rtc-lock-declaration.patch][2.6.25]]
    [[file:2.6.26/mips-remove-conlicting-rtc-lock-declaration.patch][2.6.26]]
  - 2.6.29
* [2.6.24 - 2.6.26] RT: remove finish_arch_switch {C::feature::rtsupport::temporary workaround for MIPS}
  + [[file:2.6.24/mips-remove-finish-arch-switch.patch][2.6.24]]
    [[file:2.6.25/mips-remove-finish-arch-switch.patch][2.6.25]]
    [[file:2.6.26/mips-remove-finish-arch-switch.patch][2.6.26]]
  - 2.6.29
* [2.6.24 - 2.6.26] sched-use-a-2d-bitmap-search-prio-cpu.patch {C::feature::sched::use a 2-d bitmap for searching lowest priority CPU}
  + [[file:2.6.24/sched-use-a-2d-bitmap-search-prio-cpu.patch][2.6.24]]
  M [[file:2.6.25/sched-use-a-2d-bitmap-search-prio-cpu.patch][2.6.25]]
  m [[file:2.6.26/sched-use-a-2d-bitmap-search-prio-cpu.patch][2.6.26]]
  - 2.6.29
* [2.6.24 - 2.6.29] handle IRQ_PENDING for simple irq handler {C::bug::irq::irq::irq::handle IRQ_PENDING for simple irq handler}
  + [[file:2.6.24/handle-pending-in-simple-irq.patch][2.6.24]]
    [[file:2.6.25/handle-pending-in-simple-irq.patch][2.6.25]]
    [[file:2.6.26/handle-pending-in-simple-irq.patch][2.6.26]]
    [[file:2.6.29/handle-pending-in-simple-irq.patch][2.6.29]]
  - 3.0
* [2.6.24 - 2.6.29] printk: dont bug on sched {C::performance::smallsize::don't grab locks for printk in atomic}
  + [[file:2.6.24/printk-dont-bug-on-sched.patch][2.6.24]]
  m [[file:2.6.25/printk-dont-bug-on-sched.patch][2.6.25]]
  m [[file:2.6.26/printk-dont-bug-on-sched.patch][2.6.26]]
    [[file:2.6.29/printk-dont-bug-on-sched.patch][2.6.29]]
  - 3.0
* [2.6.24 - 2.6.29] preempt: realtime sched cpupri {C::maintain::refactor::use raw_spin_lock instead of spinlock}
  + [[file:2.6.24/preempt-realtime-sched-cpupri.patch][2.6.24]]
    [[file:2.6.25/preempt-realtime-sched-cpupri.patch][2.6.25]]
    [[file:2.6.26/preempt-realtime-sched-cpupri.patch][2.6.26]]
  m [[file:2.6.29/preempt-realtime-sched-cpupri.patch][2.6.29]]
  - 3.0
* [2.6.24 - 2.6.29] [AT91: PATCH]: Use edge triggered interrupt handling for AT91-GPIO instead of si {C::bug::hwerr::irq::irq::use edge triggered interrupt handling for at91-gpio instead of simple_irq-handler}
  + [[file:2.6.24/use-edge-triggered-irq-handler-instead-of-simple-irq.patch][2.6.24]]
  m [[file:2.6.25/use-edge-triggered-irq-handler-instead-of-simple-irq.patch][2.6.25]]
    [[file:2.6.26/use-edge-triggered-irq-handler-instead-of-simple-irq.patch][2.6.26]]
    [[file:2.6.29/use-edge-triggered-irq-handler-instead-of-simple-irq.patch][2.6.29]]
  - 3.0
* [2.6.24 - 2.6.29] rt: rename rt_mutex_setprio to task_setprio {C::maintain::refactor::rename functions}
  + [[file:2.6.24/rt_mutex_setprio.patch][2.6.24]]
  M [[file:2.6.25/rt_mutex_setprio.patch][2.6.25]]
  M [[file:2.6.26/rt_mutex_setprio.patch][2.6.26]]
  M [[file:2.6.29/rt_mutex_setprio.patch][2.6.29]]
  - 3.0
* [2.6.24 - 2.6.29] seqlocks: use of PICK_FUNCTION breaks kernel compile when    CONFIG_GENERIC_TIME {C::bug::compile::compiling_err::semantics::add __seq_irqsave_raw and other fucntions}
  + [[file:2.6.24/seq-irqsave.patch][2.6.24]]
    [[file:2.6.25/seq-irqsave.patch][2.6.25]]
    [[file:2.6.26/seq-irqsave.patch][2.6.26]]
    [[file:2.6.29/seq-irqsave.patch][2.6.29]]
  - 3.0
* [2.6.24 - 2.6.29] Don't disable preemption in exception handlers without IST {C::feature::rtsupport::don't disable preemption in exception handlers without IST}
  + [[file:2.6.24/dont-disable-preemption-without-IST.patch][2.6.24]]
  M [[file:2.6.25/dont-disable-preemption-without-IST.patch][2.6.25]]
    [[file:2.6.26/dont-disable-preemption-without-IST.patch][2.6.26]]
  M [[file:2.6.29/dont-disable-preemption-without-IST.patch][2.6.29]]
  - 3.0
* [2.6.24 - 2.6.29] NMI watchdog trace of deadlock {C::bug::deadlock::atomicity::mutex::replace local_irq_save with local_irq_save_nort}
  + [[file:2.6.24/ntfs-local-irq-save-nort.patch][2.6.24]]
    [[file:2.6.25/ntfs-local-irq-save-nort.patch][2.6.25]]
    [[file:2.6.26/ntfs-local-irq-save-nort.patch][2.6.26]]
  M [[file:2.6.29/ntfs-local-irq-save-nort.patch][2.6.29]]
  - 3.0
* [2.6.24 - 2.6.29] drain: all local pages via sched {C::feature::mm::hack around for drain_all_local_pages}
  + [[file:2.6.24/drain-all-local-pages-via-sched.patch][2.6.24]]
  M [[file:2.6.25/drain-all-local-pages-via-sched.patch][2.6.25]]
    [[file:2.6.26/drain-all-local-pages-via-sched.patch][2.6.26]]
  M [[file:2.6.29/drain-all-local-pages-via-sched.patch][2.6.29]]
  - 3.0
* [2.6.24 - 2.6.29] Fix plist initialisation for CONFIG_DEBUG_PI_LIST {C::feature::rtsupport::change argument type of marco}
  + [[file:2.6.24/lock-init-plist-fix.patch][2.6.24]]
    [[file:2.6.25/lock-init-plist-fix.patch][2.6.25]]
    [[file:2.6.26/lock-init-plist-fix.patch][2.6.26]]
  m [[file:2.6.29/lock-init-plist-fix.patch][2.6.29]]
  - 3.0
* [2.6.24 - 2.6.29] proportions: raw locks {C::maintain::refactor::use raw locks}
  + [[file:2.6.24/proportions-raw-locks.patch][2.6.24]]
    [[file:2.6.25/proportions-raw-locks.patch][2.6.25]]
    [[file:2.6.26/proportions-raw-locks.patch][2.6.26]]
  m [[file:2.6.29/proportions-raw-locks.patch][2.6.29]]
  - 3.0
* [2.6.24 - 2.6.29] Set plist.lock to NULL on PREEMPT_RT {C::maintain::refactor::add conditional compilation marcos}
  + [[file:2.6.24/plist-debug.patch][2.6.24]]
    [[file:2.6.25/plist-debug.patch][2.6.25]]
    [[file:2.6.26/plist-debug.patch][2.6.26]]
    [[file:2.6.29/plist-debug.patch][2.6.29]]
  - 3.0
* [2.6.24 - 2.6.29] Fix rt preempt slab NUMA freeing {C::performance::migration::keeping this_cpu/node/slabp in sync}
  + [[file:2.6.24/numa-slab-freeing.patch][2.6.24]]
    [[file:2.6.25/numa-slab-freeing.patch][2.6.25]]
    [[file:2.6.26/numa-slab-freeing.patch][2.6.26]]
    [[file:2.6.29/numa-slab-freeing.patch][2.6.29]]
  - 3.0
* [2.6.24 - 2.6.29] Preemption problem in kernel RT    Patch] {C::bug::rtlatency::migration::migration:: change preempt problem in net code}
  + [[file:2.6.24/dev-queue-xmit-preempt-fix.patch][2.6.24]]
    [[file:2.6.25/dev-queue-xmit-preempt-fix.patch][2.6.25]]
    [[file:2.6.26/dev-queue-xmit-preempt-fix.patch][2.6.26]]
  M [[file:2.6.29/dev-queue-xmit-preempt-fix.patch][2.6.29]]
  - 3.0
* [2.6.24 - 2.6.29] rt: sched groups {C::feature::rtsupport::define release_list_lock as raw_spinlock}
  + [[file:2.6.24/rt-sched-groups.patch][2.6.24]]
    [[file:2.6.25/rt-sched-groups.patch][2.6.25]]
    [[file:2.6.26/rt-sched-groups.patch][2.6.26]]
    [[file:2.6.29/rt-sched-groups.patch][2.6.29]]
  - 3.0
* [2.6.24 -   4.11] core: Do not disable interrupts on RT in kernel/users.c {C::performance::irq::use the local_irq_*_nort variants to reduce latencies in RT}
  + [[file:2.6.24/user-no-irq-disable.patch][2.6.24]]
    [[file:2.6.25/user-no-irq-disable.patch][2.6.25]]
    [[file:2.6.26/user-no-irq-disable.patch][2.6.26]]
    [[file:2.6.29/user-no-irq-disable.patch][2.6.29]]
  m [[file:3.0/user-use-local-irq-nort.patch][3.0]]
    [[file:3.2/user-use-local-irq-nort.patch][3.2]]
    [[file:3.4/user-use-local-irq-nort.patch][3.4]]
  m [[file:3.6/user-use-local-irq-nort.patch][3.6]]
    [[file:3.8/user-use-local-irq-nort.patch][3.8]]
    [[file:3.10/user-use-local-irq-nort.patch][3.10]]
    [[file:3.12/user-use-local-irq-nort.patch][3.12]]
    [[file:3.14/user-use-local-irq-nort.patch][3.14]]
    [[file:3.18/user-use-local-irq-nort.patch][3.18]]
    [[file:4.0/user-use-local-irq-nort.patch][4.0]]
    [[file:4.1/user-use-local-irq-nort.patch][4.1]]
    [[file:4.4/user-use-local-irq-nort.patch][4.4]]
    [[file:4.6/user-use-local-irq-nort.patch][4.6]]
    [[file:4.8/user-use-local-irq-nort.patch][4.8]]
    [[file:4.9/user-use-local-irq-nort.patch][4.9]]
    [[file:4.11/user-use-local-irq-nort.patch][4.11]]
* [2.6.25         ] sched: push rt tasks only if newly activated tasks have been {C::feature::sched::push rt tasks only if newly activated tasks have been added}
  + [[file:2.6.25/sched-rt-push-only-new.patch][2.6.25]]
  - 2.6.26
* [2.6.25         ] ftrace-cpu-clock-update.patch {C::feature::timer::update sched_clock_cpu}
  + [[file:2.6.25/ftrace-cpu-clock-update.patch][2.6.25]]
  - 2.6.26
* [2.6.25         ] GCC 4.3 kernel linker error (fwd) {C::bug::compile::compiling_err::syntax::make function argument volatile}
  + [[file:2.6.25/time-gcc-linker-error.patch][2.6.25]]
  - 2.6.26
* [2.6.25         ] ftrace-peterz-cpu_clock.patch {C::feature::sched::add optional support for CONFIG_HAVE_UNSTABLE_SCHED_CLOCK}
  + [[file:2.6.25/ftrace-peterz-cpu_clock.patch][2.6.25]]
  - 2.6.26
* [2.6.25         ] foo.patch {C::feature::sched::update of sched_clock code}
  + [[file:2.6.25/foo.patch][2.6.25]]
  - 2.6.26
* [2.6.25         ] tracer-use-sched-clock.patch {C::maintain::refactor::use sched_clock() for tracer}
  + [[file:2.6.25/tracer-use-sched-clock.patch][2.6.25]]
  - 2.6.26
* [2.6.25         ] ftrace: remove printks from max hit {C::bug::deadlock::deadlock::semantics::remove printks from max hit}
  + [[file:2.6.25/ftrace-remove-max-printks.patch][2.6.25]]
  - 2.6.26
* [2.6.25         ] fix-irq-flags-size.patch {C::maintain::refactor::change unsigned int to unsigned long}
  + [[file:2.6.25/fix-irq-flags-size.patch][2.6.25]]
  - 2.6.26
* [2.6.25         ] disable-sched-rt-groups.patch {C::bug::hang::sched::sched::temporary disable sched_rt groups}
  + [[file:2.6.25/disable-sched-rt-groups.patch][2.6.25]]
  - 2.6.26
* [2.6.25         ] ftrace: unlock the mutex on reading failure {C::bug::deadlock::deadlock::mutex::unlock the mutex on reading failure}
  + [[file:2.6.25/ftrace-unlock-mutex-in-output.patch][2.6.25]]
  - 2.6.26
* [2.6.25         ] ftrace-remove-print-of-max.patch {C::bug::deadlock::deadlock::semantics::remove printks from trace irqsoff}
  + [[file:2.6.25/ftrace-remove-print-of-max.patch][2.6.25]]
  - 2.6.26
* [2.6.25         ] pcounter-percpu-protect.patch {C::bug::data_err::preempt::preempt::add protection to per_cpu variables in pcounter addition}
  + [[file:2.6.25/pcounter-percpu-protect.patch][2.6.25]]
  - 2.6.26
* [2.6.25         ] ftrace: avoid lockdep annotation problems {C::bug::data_err::order::order::move the capturing of the timestamp outside of the raw spinlocks
of ftrace}
  + [[file:2.6.25/ftrace-handle-time-outside-of-lockdep.patch][2.6.25]]
  - 2.6.26
* [2.6.25         ] RESEND: fix cpus_allowed settings {C::bug::rtlatency::semantics::semantics::fix cpus_allowed settings}
  + [[file:2.6.25/kthread-cpus-allowed-init.patch][2.6.25]]
  - 2.6.26
* [2.6.25 - 2.6.26] fix oops in root-domain code during repartitioning {C::feature::mm::defer kfree until outside the critical section}
  + [[file:2.6.25/root-domain-kfree-in-atomic.patch][2.6.25]]
    [[file:2.6.26/root-domain-kfree-in-atomic.patch][2.6.26]]
  - 2.6.29
* [2.6.25 - 2.6.26] sched_rt-fixup.patch {C::feature::timer::use global_rt_runtime() instead of hard-coded number}
  + [[file:2.6.25/sched_rt-fixup.patch][2.6.25]]
  M [[file:2.6.26/sched_rt-fixup.patch][2.6.26]]
  - 2.6.29
* [2.6.25 - 2.6.26] preempt-trace.patch {C::feature::debuginfo::track preempt disable nesting}
  + [[file:2.6.25/preempt-trace.patch][2.6.25]]
    [[file:2.6.26/preempt-trace.patch][2.6.26]]
  - 2.6.29
* [2.6.25 - 2.6.26] genhd-protect-percpu-var.patch {C::bug::data_err::preempt::preempt::protect use of smp_processor_id in genhd.h with preempt disable}
  + [[file:2.6.25/genhd-protect-percpu-var.patch][2.6.25]]
  m [[file:2.6.26/genhd-protect-percpu-var.patch][2.6.26]]
  - 2.6.29
* [2.6.25 - 2.6.26] x86: return true for NMI handled {C::maintain::refactor::change function return type from void to int}
  + [[file:2.6.25/nmi-watchdog-fix-2.patch][2.6.25]]
  m [[file:2.6.26/nmi-watchdog-fix-2.patch][2.6.26]]
  - 2.6.29
* [2.6.25 - 2.6.26] trace-add-event-markers-arm.patch {C::feature::statistics::trace add event markers}
  + [[file:2.6.25/trace-add-event-markers-arm.patch][2.6.25]]
    [[file:2.6.26/trace-add-event-markers-arm.patch][2.6.26]]
  - 2.6.29
* [2.6.25 - 2.6.26] sched-clock-nmi.patch {C::feature::timer::update sched clock for NMI}
  + [[file:2.6.25/sched-clock-nmi.patch][2.6.25]]
  M [[file:2.6.26/sched-clock-nmi.patch][2.6.26]]
  - 2.6.29
* [2.6.25 - 2.6.26] ftrace: avoid lockdep recursion {C::bug::crash::semantics::semantics::changes local_irq_save to preempt_disable}
  + [[file:2.6.25/ftrace-use-preempt-disable-not-irq-disable.patch][2.6.25]]
  M [[file:2.6.26/ftrace-use-preempt-disable-not-irq-disable.patch][2.6.26]]
  - 2.6.29
* [2.6.25 - 2.6.26] event-tracer-syscall-x86_64.patch {C::feature::debuginfo::add hooks to x86 to track syscalls for event trace}
  + [[file:2.6.25/event-tracer-syscall-x86_64.patch][2.6.25]]
  m [[file:2.6.26/event-tracer-syscall-x86_64.patch][2.6.26]]
  - 2.6.29
* [2.6.25 - 2.6.26] trace-histograms.patch {C::feature::statistics::histograms of interrupts off, preemption off and wakeup timings}
  + [[file:2.6.25/trace-histograms.patch][2.6.25]]
  M [[file:2.6.26/trace-histograms.patch][2.6.26]]
  - 2.6.29
* [2.6.25 - 2.6.26] event-tracer-syscall-i386.patch {C::feature::debuginfo::hooks into i386 to track event calls}
  + [[file:2.6.25/event-tracer-syscall-i386.patch][2.6.25]]
  M [[file:2.6.26/event-tracer-syscall-i386.patch][2.6.26]]
  - 2.6.29
* [2.6.25 - 2.6.26] x86_64: send NMI after nmi_show_regs on {C::bug::crash::order::order::send NMI after nmi_show_regs on}
  + [[file:2.6.25/nmi-watchdog-fix-1.patch][2.6.25]]
    [[file:2.6.26/nmi-watchdog-fix-1.patch][2.6.26]]
  - 2.6.29
* [2.6.25 - 2.6.26] Memory corruption fixes {C::bug::corrupt::atomicity::mutex::call __flush_tlb_pending and hpte_need_flush within non-preempt region}
  + [[file:2.6.25/ppc-tlbflush-preempt.patch][2.6.25]]
  M [[file:2.6.26/ppc-tlbflush-preempt.patch][2.6.26]]
  - 2.6.29
* [2.6.25 - 2.6.26] wait for finish show_regs() before panic {C::bug::crash::order::order::clear nmi_show_regs after show_regs() is called}
  + [[file:2.6.25/nmi-watchdog-fix-4.patch][2.6.25]]
    [[file:2.6.26/nmi-watchdog-fix-4.patch][2.6.26]]
  - 2.6.29
* [2.6.25 - 2.6.26] trace-events-handle-syscalls.patch {C::feature::debuginfo::add syscall tracing in event trace}
  + [[file:2.6.25/trace-events-handle-syscalls.patch][2.6.25]]
  M [[file:2.6.26/trace-events-handle-syscalls.patch][2.6.26]]
  - 2.6.29
* [2.6.25 - 2.6.26] tracer-event-trace.patch {C::feature::debuginfo::add event tracer.}
  + [[file:2.6.25/tracer-event-trace.patch][2.6.25]]
  M [[file:2.6.26/tracer-event-trace.patch][2.6.26]]
  - 2.6.29
* [2.6.25 - 2.6.26] shorten softirq kernel thread names {C::bug::corrupt::overflow::semantics::shorten softirq kernel thread names}
  + [[file:2.6.25/rt-shorten-softirq-thread-names.patch][2.6.25]]
    [[file:2.6.26/rt-shorten-softirq-thread-names.patch][2.6.26]]
  - 2.6.29
* [2.6.25 - 2.6.26] radix-percpu-hack-fix.patch {C::bug::corrupt::migration::migration::protect the percpu var}
  + [[file:2.6.25/radix-percpu-hack-fix.patch][2.6.25]]
    [[file:2.6.26/radix-percpu-hack-fix.patch][2.6.26]]
  - 2.6.29
* [2.6.25 - 2.6.26] Cache calls to pci_find_capability {C::performance::cache::cache calls to pci_find_capability}
  + [[file:2.6.25/cache_pci_find_capability.patch][2.6.25]]
  m [[file:2.6.26/cache_pci_find_capability.patch][2.6.26]]
  - 2.6.29
* [2.6.25 - 2.6.26] x86: nmi_watchdog NMI needed for irq_show_regs_callback() {C::bug::crash::order::order::change nmi_watchdog fucntion}
  + [[file:2.6.25/nmi-watchdog-fix-3.patch][2.6.25]]
    [[file:2.6.26/nmi-watchdog-fix-3.patch][2.6.26]]
  - 2.6.29
* [2.6.25 - 2.6.26] tracer-add-event-markers.patch {C::feature::debuginfo::add markers to various events in the kernel}
  + [[file:2.6.25/tracer-add-event-markers.patch][2.6.25]]
  M [[file:2.6.26/tracer-add-event-markers.patch][2.6.26]]
  - 2.6.29
* [2.6.25 - 2.6.26] cycles-to-ns-trace-fix.patch {C::bug::data_err::time::preempt::preempt disable for getting time}
  + [[file:2.6.25/cycles-to-ns-trace-fix.patch][2.6.25]]
  m [[file:2.6.26/cycles-to-ns-trace-fix.patch][2.6.26]]
  - 2.6.29
* [2.6.25 - 2.6.26] avoid deadlock related with PG_nonewrefs and swap_lock {C::bug::deadlock::deadlock::mutex::add spin_unlock}
  + [[file:2.6.25/rt-avoid-deadlock-in-swap.patch][2.6.25]]
    [[file:2.6.26/rt-avoid-deadlock-in-swap.patch][2.6.26]]
  - 2.6.29
* [2.6.25 - 2.6.26] ftrace-upstream.patch {C::feature::debuginfo::ftrace upstream code}
  + [[file:2.6.25/ftrace-upstream.patch][2.6.25]]
  M [[file:2.6.26/ftrace-upstream.patch][2.6.26]]
  - 2.6.29
* [2.6.25 - 2.6.26] preempt-realtime-ftrace.patch {C::feature::rtsupport::preempt realtime ftrace}
  + [[file:2.6.25/preempt-realtime-ftrace.patch][2.6.25]]
  M [[file:2.6.26/preempt-realtime-ftrace.patch][2.6.26]]
  - 2.6.29
* [2.6.25 - 2.6.29] apic: level smp affinity {C::feature::rtsupport::irq affinity on cpu}
  + [[file:2.6.25/apic-level-smp-affinity.patch][2.6.25]]
    [[file:2.6.26/apic-level-smp-affinity.patch][2.6.26]]
  M [[file:2.6.29/apic-level-smp-affinity.patch][2.6.29]]
  - 3.0
* [2.6.25 - 2.6.29] deadlock on 2.6.24.3-rt3 {C::bug::deadlock::deadlock::mutex::add spin_unlock}
  + [[file:2.6.25/swap-spinlock-fix.patch][2.6.25]]
    [[file:2.6.26/swap-spinlock-fix.patch][2.6.26]]
  m [[file:2.6.29/swap-spinlock-fix.patch][2.6.29]]
  - 3.0
* [2.6.25 - 2.6.29] rt-slab: fix cpu inconsistency case {C::bug::corrupt::migration::migration::add per-CPU variable}
  + [[file:2.6.25/slab-irq-nopreempt-fix.patch][2.6.25]]
    [[file:2.6.26/slab-irq-nopreempt-fix.patch][2.6.26]]
    [[file:2.6.29/slab-irq-nopreempt-fix.patch][2.6.29]]
  - 3.0
* [2.6.25 - 2.6.29] timer:fix build warning in timer.c {C::bug::compile::compiling_err::semantics::add conditional compilation marcos}
  + [[file:2.6.25/timer-warning-fix.patch][2.6.25]]
    [[file:2.6.26/timer-warning-fix.patch][2.6.26]]
  M [[file:2.6.29/preempt-realtimer-timer-non-rt-warning-fixes.patch][2.6.29]]
  - 3.0
* [2.6.25 - 2.6.29] aacraid: compat sem {C::maintain::refactor:: semaphore --> compat_semaphore}
  + [[file:2.6.25/aacraid-compat-sem.patch][2.6.25]]
    [[file:2.6.26/aacraid-compat-sem.patch][2.6.26]]
    [[file:2.6.29/aacraid-compat-sem.patch][2.6.29]]
  - 3.0
* [2.6.25 - 2.6.29] fix printk in atomic hack {C::bug::deadlock::deadlock::mutex::skips releasing the lock if in printk - atomic and not the lock owner}
  + [[file:2.6.25/printk-in-atomic-hack-fix.patch][2.6.25]]
    [[file:2.6.26/printk-in-atomic-hack-fix.patch][2.6.26]]
    [[file:2.6.29/printk-in-atomic-hack-fix.patch][2.6.29]]
  - 3.0
* [2.6.25 - 2.6.29] patches/printk-in-atomic.patch {C::feature::debuginfo::make early printk safe on RT}
  + [[file:2.6.25/printk-in-atomic.patch][2.6.25]]
  M [[file:2.6.26/printk-in-atomic.patch][2.6.26]]
  M [[file:2.6.29/printk-in-atomic.patch][2.6.29]]
  - 3.0
* [2.6.25 - 2.6.29] rt: move update_wall_time back to do timer {C::performance::irq::move update_wall_time() back into do_timer}
  + [[file:2.6.25/rt-move-update-wall-time-back-to-do-timer.patch][2.6.25]]
    [[file:2.6.26/rt-move-update-wall-time-back-to-do-timer.patch][2.6.26]]
    [[file:2.6.29/rt-move-update-wall-time-back-to-do-timer.patch][2.6.29]]
  - 3.0
* [2.6.26         ] m68knommu: make cmpxchg RT-safe
  + [[file:2.6.26/m68knommu-make-cmpxchg-RT-safe.patch][2.6.26]]
  - 2.6.29
* [2.6.26         ] rwlock: fix torture test to handle non-rt
  + [[file:2.6.26/rwlock-torture-no-rt.patch][2.6.26]]
  - 2.6.29
* [2.6.26         ] rwlock: fix non PREEMPT_RT case
  + [[file:2.6.26/rwlocks-fix-no-preempt-rt.patch][2.6.26]]
  - 2.6.29
* [2.6.26         ] rwlock: be more conservative in locking reader_lock_count
  + [[file:2.6.26/rt-rwlock-conservative-locking.patch][2.6.26]]
  - 2.6.29
* [2.6.26         ] ftrace: print ktime values in readable form
  + [[file:2.6.26/trace-ktime-scalar.patch][2.6.26]]
  - 2.6.29
* [2.6.26         ] Fix preempt unsafe paths accessing per_cpu variables
  + [[file:2.6.26/ppc64-fix-preempt-unsafe-paths-accessing-per_cpu-variables.patch][2.6.26]]
  - 2.6.29
* [2.6.26         ] ftrace-fix-missing-kprobe-include.pathc
  + [[file:2.6.26/ftrace-fix-get-kprobe-wreckage.patch][2.6.26]]
  - 2.6.29
* [2.6.26         ] map read/write locks back to their readers
  + [[file:2.6.26/multi-reader-lock-account.patch][2.6.26]]
  - 2.6.29
* [2.6.26         ] ftrace: dont trace markers
  + [[file:2.6.26/ftrace-dont-trace-markers.patch][2.6.26]]
  - 2.6.29
* [2.6.26         ] RT: wrap BUILD_CHECK_IRQ_FLAGS
  + [[file:2.6.26/arm-omap-02.patch][2.6.26]]
  - 2.6.29
* [2.6.26         ] rwlock-protect-reader_lock_count.patch
  + [[file:2.6.26/rwlock-protect-reader_lock_count.patch][2.6.26]]
  - 2.6.29
* [2.6.26         ] rt: remove call to stop tracer
  + [[file:2.6.26/ftrace-compile-fixes.patch][2.6.26]]
  - 2.6.29
* [2.6.26         ] m68knommu_fixes_ontop_of_v2.6.26.patch
  + [[file:2.6.26/m68knommu_fixes_ontop_of_v2.6.26.patch][2.6.26]]
  - 2.6.29
* [2.6.26         ] sched: fix cpupri hotplug support
  + [[file:2.6.26/sched-cpupri-hotplug-support.patch][2.6.26]]
  - 2.6.29
* [2.6.26         ] implement rwlocks management
  + [[file:2.6.26/rwlocks-multiple-readers.patch][2.6.26]]
  - 2.6.29
* [2.6.26         ] lockdep: add +1 to radix tree array
  + [[file:2.6.26/radix-tree-lockdep-plus1.patch][2.6.26]]
  - 2.6.29
* [2.6.26         ] pmtmr: allow command line override of ioport
  + [[file:2.6.26/pmtmr-override.patch][2.6.26]]
  - 2.6.29
* [2.6.26         ] rtmutex-debug-fix.patch
  + [[file:2.6.26/rtmutex-debug-fix.patch][2.6.26]]
  - 2.6.29
* [2.6.26         ] rwlock: reset prio on unlocks and wakeups
  + [[file:2.6.26/rwlock-prio-fix.patch][2.6.26]]
  - 2.6.29
* [2.6.26         ] ftrace-document-event-tracer.patch
  + [[file:2.6.26/ftrace-document-event-tracer.patch][2.6.26]]
  - 2.6.29
* [2.6.26         ] fix sysrq+l when nmi_watchdog disabled
  + [[file:2.6.26/nmi-show-regs-fix.patch][2.6.26]]
  - 2.6.29
* [2.6.26         ] ftrace: define function trace nop
  + [[file:2.6.26/ftrace-function-record-nop.patch][2.6.26]]
  - 2.6.29
* [2.6.26         ] map tasks to reader locks held
  + [[file:2.6.26/multi-reader-account.patch][2.6.26]]
  - 2.6.29
* [2.6.26         ] rwlock-slowunlock-mutex-fix2.patch
  + [[file:2.6.26/rwlock-slowunlock-mutex-fix2.patch][2.6.26]]
  - 2.6.29
* [2.6.26         ] m68knommu: generic stacktrace function
  + [[file:2.6.26/ftrace-m68knommu-generic-stacktrace-function.patch][2.6.26]]
  - 2.6.29
* [2.6.26         ] powerpc: ftrace stop on crash
  + [[file:2.6.26/powerpc-ftrace-stop-on-oops.patch][2.6.26]]
  - 2.6.29
* [2.6.26         ] preempt-realtime-ftrace-disable-ftraced.patch
  + [[file:2.6.26/preempt-realtime-ftrace-disable-ftraced.patch][2.6.26]]
  - 2.6.29
* [2.6.26         ] fix for compiling 2.6.24.7-rt10 without CONFIG_FTRACE
  + [[file:2.6.26/ftrace-fix-header.patch][2.6.26]]
  - 2.6.29
* [2.6.26         ] ftrace: only trace preempt off with preempt tracer
  + [[file:2.6.26/ftrace-preempt-trace-check.patch][2.6.26]]
  - 2.6.29
* [2.6.26         ] ftrace: trace sched.c
  + [[file:2.6.26/ftrace-trace-sched.patch][2.6.26]]
  - 2.6.29
* [2.6.26         ] mapping_nrpages-fix.patch
  + [[file:2.6.26/mapping_nrpages-fix.patch][2.6.26]]
  - 2.6.29
* [2.6.26         ] arm-fix-compile-error-trace-exit-idle.patch
  + [[file:2.6.26/arm-fix-compile-error-trace-exit-idle.patch][2.6.26]]
  - 2.6.29
* [2.6.26         ] rwlock-slowunlock-mutex-fix.patch
  + [[file:2.6.26/rwlock-slowunlock-mutex-fix.patch][2.6.26]]
  - 2.6.29
* [2.6.26         ] ftrace: user raw spin lock for wakeup function trace
  + [[file:2.6.26/ftrace-wakeup-rawspinlock.patch][2.6.26]]
  - 2.6.29
* [2.6.26         ] fix-tracer-wreckage-wtf-is-this-code-all-features.patch
  + [[file:2.6.26/ftrace-stop-trace-on-crash.patch][2.6.26]]
  - 2.6.29
* [2.6.26         ] rwlock: rwlock torture test
  + [[file:2.6.26/rwlock-torture.patch][2.6.26]]
  - 2.6.29
* [2.6.26         ] event-tracer: add clockevent trace
  + [[file:2.6.26/event-trace-hrtimer-trace.patch][2.6.26]]
  - 2.6.29
* [2.6.26         ] m68knommu: add FTRACE support
  + [[file:2.6.26/ftrace-m68knommu-add-FTRACE-support.patch][2.6.26]]
  - 2.6.29
* [2.6.26         ] ftrace: record comm on function ctrl change
  + [[file:2.6.26/ftrace-record-comm-on-ctrl.patch][2.6.26]]
  - 2.6.29
* [2.6.26         ] lockstat: fix contention points
  + [[file:2.6.26/lockstat-fix-contention-points.patch][2.6.26]]
  - 2.6.29
* [2.6.26         ] m68knommu: make timer interrupt non threaded
  + [[file:2.6.26/preempt-irqs-m68knommu-make-timer-interrupt-non-threaded.patch][2.6.26]]
  - 2.6.29
* [2.6.26         ] trace-do-not-wakeup-when-irqs-disabled.patch
  + [[file:2.6.26/trace-do-not-wakeup-when-irqs-disabled.patch][2.6.26]]
  - 2.6.29
* [2.6.26         ] trace_hist-latediv.patch
  + [[file:2.6.26/trace_hist-latediv.patch][2.6.26]]
  - 2.6.29
* [2.6.26         ] rwlocks multi downgrade write
  + [[file:2.6.26/rwlock-implement-downgrade-write.patch][2.6.26]]
  - 2.6.29
* [2.6.26         ] read lock Priority Inheritance implementation
  + [[file:2.6.26/multi-reader-pi.patch][2.6.26]]
  - 2.6.29
* [2.6.26         ] trace_hist.c: divide-by-zero problem (2)
  + [[file:2.6.26/trace_hist-divzero.patch][2.6.26]]
  - 2.6.29
* [2.6.26         ] remove warn on for scatterlist in preempt rt
  + [[file:2.6.26/warn-on-rt-scatterlist.patch][2.6.26]]
  - 2.6.29
* [2.6.26         ] frace-use-tsc.patch
  + [[file:2.6.26/frace-use-tsc.patch][2.6.26]]
  - 2.6.29
* [2.6.26         ] rt-mutex-namespace.patch
  + [[file:2.6.26/rt-mutex-namespace.patch][2.6.26]]
  - 2.6.29
* [2.6.26         ] rt-mutex-cleanup.patch
  + [[file:2.6.26/rt-mutex-use-inline.patch][2.6.26]]
  - 2.6.29
* [2.6.26         ] sched-nr-migrate-lower-default-preempt-rt.patch
  + [[file:2.6.26/sched-nr-migrate-lower-default-preempt-rt.patch][2.6.26]]
  - 2.6.29
* [2.6.26         ] rwlocks-default-nr-readers-nr-cpus.patch
  + [[file:2.6.26/rwlocks-default-nr-readers-nr-cpus.patch][2.6.26]]
  - 2.6.29
* [2.6.26         ] implement reader limit on read write locks
  + [[file:2.6.26/multi-reader-limit.patch][2.6.26]]
  - 2.6.29
* [2.6.26         ] idle2-fix.patch
  + [[file:2.6.26/idle2-fix.patch][2.6.26]]
  - 2.6.29
* [2.6.26         ] ftrace: fix the command line printing
  + [[file:2.6.26/ftrace-print-missing-cmdline.patch][2.6.26]]
  - 2.6.29
* [2.6.26         ] lockstat: warn about disabled lock debugging
  + [[file:2.6.26/lockstat-output.patch][2.6.26]]
  - 2.6.29
* [2.6.26         ] ftrace: document updates
  + [[file:2.6.26/ftrace-document-update1.patch][2.6.26]]
  - 2.6.29
* [2.6.26         ] ftrace: cpu hotplug fix
  + [[file:2.6.26/ftrace-hotplug-fix.patch][2.6.26]]
  - 2.6.29
* [2.6.26         ] sched: fix cpupri priocount
  + [[file:2.6.26/sched-cpupri-priocount.patch][2.6.26]]
  - 2.6.29
* [2.6.26         ] ftrace: fix if define to prove locking
  + [[file:2.6.26/lockdep-avoid-fork-waring.patch][2.6.26]]
  - 2.6.29
* [2.6.26         ] rwlock-pi-lock-reader.patch
  + [[file:2.6.26/rwlock-pi-lock-reader.patch][2.6.26]]
  - 2.6.29
* [2.6.26         ] idle-fix.patch
  + [[file:2.6.26/idle-fix.patch][2.6.26]]
  - 2.6.29
* [2.6.26         ] sched: prioritize non-migratable tasks over migratable ones
  + [[file:2.6.26/sched-prioritize-non-migrating-rt-tasks.patch][2.6.26]]
  - 2.6.29
* [2.6.26         ] Fix a previously reverted "fix"
  + [[file:2.6.26/fix-a-previously-reverted-fix.patch][2.6.26]]
  - 2.6.29
* [2.6.26         ] 2.6.25.4-rt2 (native_sched_clock() booboo)
  + [[file:2.6.26/native-sched-clock-booboo.patch][2.6.26]]
  - 2.6.29
* [2.6.26         ] 2.6.25.4-rt4
  + [[file:2.6.26/trace-eip2ip.patch][2.6.26]]
  - 2.6.29
* [2.6.26         ] add framework for multi readers on rwsems
  + [[file:2.6.26/rwsems-multiple-readers.patch][2.6.26]]
  - 2.6.29
* [2.6.26         ] rwlock: fix pi_list race conditions
  + [[file:2.6.26/rwlock-fixes.patch][2.6.26]]
  - 2.6.29
* [2.6.26         ] Compile warning rtmutex code on 2.6.24.7-rt8 (CC:LKML added)
  + [[file:2.6.26/rtmutex-rwlock-cmpxchg-typecast.patch][2.6.26]]
  - 2.6.29
* [2.6.26 - 2.6.29] realtime: preempt warn about tracing
  + [[file:2.6.26/realtime-preempt-warn-about-tracing.patch][2.6.26]]
  M [[file:2.6.29/realtime-preempt-warn-about-tracing.patch][2.6.29]]
  - 3.0
* [2.6.26 - 2.6.29] optimize rt lock wakeup
  + [[file:2.6.26/adaptive-optimize-rt-lock-wakeup.patch][2.6.26]]
    [[file:2.6.29/adaptive-optimize-rt-lock-wakeup.patch][2.6.29]]
  - 3.0
* [2.6.26 - 2.6.29] patches/raw-spinlocks-for-nmi-print.patch
  + [[file:2.6.26/raw-spinlocks-for-nmi-print.patch][2.6.26]]
  M [[file:2.6.29/raw-spinlocks-for-nmi-print.patch][2.6.29]]
  - 3.0
* [2.6.26 - 2.6.29] adjust pi_lock usage in wakeup
  + [[file:2.6.26/adaptive-adjust-pi-wakeup.patch][2.6.26]]
    [[file:2.6.29/adaptive-adjust-pi-wakeup.patch][2.6.29]]
  - 3.0
* [2.6.26 - 2.6.29] gitignore scripts/testlpp
  + [[file:2.6.26/git-ignore-script-lpp.patch][2.6.26]]
    [[file:2.6.29/git-ignore-script-lpp.patch][2.6.29]]
  - 3.0
* [2.6.26 - 2.6.29] sched: wake_up_idle_cpu rt
  + [[file:2.6.26/sched-wake_up_idle_cpu-rt.patch][2.6.26]]
    [[file:2.6.29/sched-wake_up_idle_cpu-rt.patch][2.6.29]]
  - 3.0
* [2.6.26 - 2.6.29] patches/rtmutex-rearrange.patch
  + [[file:2.6.26/rtmutex-rearrange.patch][2.6.26]]
    [[file:2.6.29/rtmutex-rearrange.patch][2.6.29]]
  - 3.0
* [2.6.26 - 2.6.29] fix-adaptive-hack.patch
  + [[file:2.6.26/fix-adaptive-hack.patch][2.6.26]]
    [[file:2.6.29/fix-adaptive-hack.patch][2.6.29]]
  - 3.0
* [2.6.26 - 2.6.29] ARM: OMAP: remove unnecessary locking in clk_get_rate()
  + [[file:2.6.26/arm-omap-05.patch][2.6.26]]
    [[file:2.6.29/arm-omap-05.patch][2.6.29]]
  - 3.0
* [2.6.26 - 2.6.29] rtmutex: break out early on first run
  + [[file:2.6.26/adaptive-earlybreak-on-steal.patch][2.6.26]]
    [[file:2.6.29/adaptive-earlybreak-on-steal.patch][2.6.29]]
  - 3.0
* [2.6.26 - 2.6.29] remove the extra call to try_to_take_lock
  + [[file:2.6.26/adapt-remove-extra-try-to-lock.patch][2.6.26]]
    [[file:2.6.29/adapt-remove-extra-try-to-lock.patch][2.6.29]]
  - 3.0
* [2.6.26 - 2.6.29] sched-fix-dequeued-race.patch
  + [[file:2.6.26/sched-fix-dequeued-race.patch][2.6.26]]
  m [[file:2.6.29/sched-fix-dequeued-race.patch][2.6.29]]
  - 3.0
* [2.6.26 - 2.6.29] patches/rtmutex-lateral-steal.patch
  + [[file:2.6.26/rtmutex-lateral-steal.patch][2.6.26]]
    [[file:2.6.29/rtmutex-lateral-steal.patch][2.6.29]]
  - 3.0
* [2.6.26 - 2.6.29] rtmutex - remove double xchg
  + [[file:2.6.26/rtmutex-remove-xchg.patch][2.6.26]]
    [[file:2.6.29/rtmutex-remove-xchg.patch][2.6.29]]
  - 3.0
* [2.6.26 - 2.6.29] patches/revert-preempt-bkl-revert.patch
  + [[file:2.6.26/revert-preempt-bkl-revert.patch][2.6.26]]
  m [[file:2.6.29/revert-preempt-bkl-revert.patch][2.6.29]]
  - 3.0
* [2.6.26 - 2.6.29] sched: make task->oncpu available in all configurations
  + [[file:2.6.26/adaptive-task-oncpu.patch][2.6.26]]
  m [[file:2.6.29/adaptive-task-oncpu.patch][2.6.29]]
  - 3.0
* [2.6.26 - 2.6.29] patches/bz235099-idle-load-fix.patch
  + [[file:2.6.26/bz235099-idle-load-fix.patch][2.6.26]]
  M [[file:2.6.29/bz235099-idle-load-fix.patch][2.6.29]]
  - 3.0
* [2.6.26 - 2.6.29] Fix CONFIG_DEBUG_RT_MUTEX lock underflow warnings
  + [[file:2.6.26/fix-config-debug-rt-mutex-lock-underflow-warnings.patch][2.6.26]]
  m [[file:2.6.29/fix-config-debug-rt-mutex-lock-underflow-warnings.patch][2.6.29]]
  - 3.0
* [2.6.26 - 2.6.29] patches/fix_vdso_gtod_vsyscall64_2.patch
  + [[file:2.6.26/fix_vdso_gtod_vsyscall64_2.patch][2.6.26]]
  m [[file:2.6.29/fix_vdso_gtod_vsyscall64_2.patch][2.6.29]]
  - 3.0
* [2.6.26 - 2.6.29] adaptive spinlocks lite
  + [[file:2.6.26/adaptive-spinlock-lite-v2.patch][2.6.26]]
  m [[file:2.6.29/adaptive-spinlock-lite-v2.patch][2.6.29]]
  - 3.0
* [2.6.26 - 2.6.29] nfs: fix missing preemption check
  + [[file:2.6.26/nfs-stats-miss-preemption.patch][2.6.26]]
  m [[file:2.6.29/nfs-stats-miss-preemption.patch][2.6.29]]
  - 3.0
* [2.6.26 -    3.8] generic: Use raw local irq variant for generic cmpxchg
  + [[file:2.6.26/generic-cmpxchg-use-raw-local-irq-variant.patch][2.6.26]]
    [[file:2.6.29/generic-cmpxchg-use-raw-local-irq-variant.patch][2.6.29]]
    [[file:3.0/generic-cmpxchg-use-raw-local-irq.patch][3.0]]
    [[file:3.2/generic-cmpxchg-use-raw-local-irq.patch][3.2]]
    [[file:3.4/generic-cmpxchg-use-raw-local-irq.patch][3.4]]
    [[file:3.6/generic-cmpxchg-use-raw-local-irq.patch][3.6]]
    [[file:3.8/generic-cmpxchg-use-raw-local-irq.patch][3.8]]
  - 3.10
* [2.6.26 -   3.12] usb: Use local_irq_*_nort() variants
  + [[file:2.6.26/sub-dont-disable-irqs.patch][2.6.26]]
    [[file:2.6.29/sub-dont-disable-irqs.patch][2.6.29]]
  m [[file:3.0/usb-hcd-use-local-irq-nort.patch][3.0]]
    [[file:3.2/usb-hcd-use-local-irq-nort.patch][3.2]]
  m [[file:3.4/usb-hcd-use-local-irq-nort.patch][3.4]]
    [[file:3.6/usb-hcd-use-local-irq-nort.patch][3.6]]
    [[file:3.8/usb-hcd-use-local-irq-nort.patch][3.8]]
    [[file:3.10/usb-hcd-use-local-irq-nort.patch][3.10]]
    [[file:3.12/usb-hcd-use-local-irq-nort.patch][3.12]]
  - 3.14
* [2.6.29         ] rt: page_alloc.c cleanup
  + [[file:2.6.29/rt-page_alloc.c-cleanup.patch][2.6.29]]
  - 3.0
* [2.6.29         ] disable-maxcpus-for-now.patch
  + [[file:2.6.29/disable-maxcpus-for-now.patch][2.6.29]]
  - 3.0
* [2.6.29         ] preempt-rt-x86-pageattr-flush-unused.patch
  + [[file:2.6.29/preempt-rt-x86-pageattr-flush-unused.patch][2.6.29]]
  - 3.0
* [2.6.29         ] preempt-rt-scatterlist-nort.patch
  + [[file:2.6.29/preempt-rt-scatterlist-nort.patch][2.6.29]]
  - 3.0
* [2.6.29         ] ftrace: fix erroneous histogram stop WARN_ON() messages
  + [[file:2.6.29/fix-erroneous-histogram-stop-warn-on-messages.patch][2.6.29]]
  - 3.0
* [2.6.29         ] mingo: rt spinlock fix
  + [[file:2.6.29/rt-mutex-core-fixes2.patch][2.6.29]]
  - 3.0
* [2.6.29         ] seqlock - fix for both PREEMPT_RT and non PREEMPT_RT
  + [[file:2.6.29/seqlocks-handle-rwlock-and-spin.patch][2.6.29]]
  - 3.0
* [2.6.29         ] rt: mingo kernel_sem fix
  + [[file:2.6.29/rt-mutex-fix-non-lock-kernel-config.patch][2.6.29]]
  - 3.0
* [2.6.29         ] rt: fix timer.c warning
  + [[file:2.6.29/preempt-realtimer-timer-more-non-rt-warning-fixes.patch][2.6.29]]
  - 3.0
* [2.6.29         ] pagealloc-cond-resched-rt-only.patch
  + [[file:2.6.29/pagealloc-cond-resched-rt-only.patch][2.6.29]]
  - 3.0
* [2.6.29         ] pagealloc: reduce lock sections further
  + [[file:2.6.29/page-alloc-bulk-moar.patch][2.6.29]]
  - 3.0
* [2.6.29         ] kbuild.patch
  + [[file:2.6.29/kbuild.patch][2.6.29]]
  - 3.0
* [2.6.29         ] powerpc-rtmutex.patch
  + [[file:2.6.29/powerpc-rtmutex.patch][2.6.29]]
  - 3.0
* [2.6.29         ] signals: allow rt tasks to cache one sigqueue struct
  + [[file:2.6.29/signal-keep-a-task-private-siginfo-for-rt-tasks.patch][2.6.29]]
  - 3.0
* [2.6.29         ] preempt: realtime sched remove debug
  + [[file:2.6.29/preempt-realtime-sched-remove-debug.patch][2.6.29]]
  - 3.0
* [2.6.29         ] genirq-warn-on-do-irq.patch
  + [[file:2.6.29/genirq-warn-on-do-irq.patch][2.6.29]]
  - 3.0
* [2.6.29         ] cpu-hotplug: vs slab
  + [[file:2.6.29/cpuhotplug-vs-slab.patch][2.6.29]]
  - 3.0
* [2.6.29         ] slab-free-pages.patch
  + [[file:2.6.29/slab-free-pages.patch][2.6.29]]
  - 3.0
* [2.6.29         ] rt: convert stop_machine_run() to PREEMPT_RT
  + [[file:2.6.29/rt-stop-cpus-fix.patch][2.6.29]]
  - 3.0
* [2.6.29         ] powerpc-compat-semaphore.patch
  + [[file:2.6.29/powerpc-compat-semaphore.patch][2.6.29]]
  - 3.0
* [2.6.29         ] revert-bkl-cleanup.patch
  + [[file:2.6.29/revert-bkl-cleanup.patch][2.6.29]]
  - 3.0
* [2.6.29         ] rt: fix RCU menuconfig
  + [[file:2.6.29/preempt-realtime-force-rcu-preempt.patch][2.6.29]]
  - 3.0
* [2.6.29         ] lockdep: fix compat_sema_init
  + [[file:2.6.29/lockdep-compat-sema-fix.patch][2.6.29]]
  - 3.0
* [2.6.29         ] x86-microcode-fix-sysfs-wreckage.patch
  + [[file:2.6.29/x86-microcode-fix-sysfs-wreckage.patch][2.6.29]]
  - 3.0
* [2.6.29         ] revert-sched-changes.patch
  + [[file:2.6.29/revert-sched-changes.patch][2.6.29]]
  - 3.0
* [2.6.29         ] remove one extra (incorrect) test in mask_ack_irq()
  + [[file:2.6.29/preempt-irqs-core-fix.patch][2.6.29]]
  - 3.0
* [2.6.29         ] hrtimer-fix-wait-for-hrtimer.patch
  + [[file:2.6.29/hrtimer-fix-wait-for-hrtimer.patch][2.6.29]]
  - 3.0
* [2.6.29         ] cpu-hotplug: cpu_down vs preempt-rt
  + [[file:2.6.29/cpuhotplug-idle.patch][2.6.29]]
  - 3.0
* [2.6.29         ] rtmutex: remove uber optimization
  + [[file:2.6.29/tglx-05-rtmutex-remove-uber-optimization.patch][2.6.29]]
  - 3.0
* [2.6.29         ] rt: xfs fix
  + [[file:2.6.29/preempt-realtime-xfs-compat-semaphore.patch][2.6.29]]
  - 3.0
* [2.6.29         ] rt: mutex core fixes
  + [[file:2.6.29/rt-mutex-core-fixes.patch][2.6.29]]
  - 3.0
* [2.6.29         ] preempt-realtime-tracer.patch
  + [[file:2.6.29/preempt-realtime-tracer.patch][2.6.29]]
  - 3.0
* [2.6.29         ] trace-setprio.patch
  + [[file:2.6.29/trace-setprio.patch][2.6.29]]
  - 3.0
* [2.6.29         ] net: xmit lock owner cleanup
  + [[file:2.6.29/net-xmit-lock-owner-cleanup.patch][2.6.29]]
  - 3.0
* [2.6.29         ] net: clean up dev_queue_xmit() code flow
  + [[file:2.6.29/preempt-realtime-cleanup-dev-queue-xmit.patch][2.6.29]]
  - 3.0
* [2.6.29         ] percpu-locked-netfilter-ecache.patch
  + [[file:2.6.29/percpu-locked-netfilter-ecache.patch][2.6.29]]
  - 3.0
* [2.6.29         ] add -rt version tag
  + [[file:2.6.29/version.patch][2.6.29]]
  - 3.0
* [2.6.29         ] rt: port hardirq threading to CONFIG_SPARSEIRQ
  + [[file:2.6.29/preempt-realtime-irqthreading-sparseirq-fixups.patch][2.6.29]]
  - 3.0
* [2.6.29         ] seqlock: make sure that raw_seqlock_t retries readers while writes are pending]
  + [[file:2.6.29/seqlock-01-make-sure-that-raw_seqlock-retries.patch][2.6.29]]
  - 3.0
* [2.6.29         ] rt-spin-needbreak-fixup.patch
  + [[file:2.6.29/rt-spin-needbreak-fixup.patch][2.6.29]]
  - 3.0
* [2.6.29         ] powerpc-rawlocks.patch
  + [[file:2.6.29/powerpc-rawlocks.patch][2.6.29]]
  - 3.0
* [2.6.29         ] rtmutex: unify state manipulation
  + [[file:2.6.29/tglx-04-rtmutex-unify-state-manipulation.patch][2.6.29]]
  - 3.0
* [2.6.29         ] preempt: irqs port fixes
  + [[file:2.6.29/preempt-irqs-port-fixes.patch][2.6.29]]
  - 3.0
* [2.6.29         ] rt: CONFIG_SPARSEIRQ=y fix
  + [[file:2.6.29/preempt-realtime-sparseirq-waitqueue-init-fix.patch][2.6.29]]
  - 3.0
* [2.6.29         ] Fix Bug messages
  + [[file:2.6.29/namespace-lock-fixes.patch][2.6.29]]
  - 3.0
* [2.6.29         ] -rt, bit-spinlocks: add __bit_spin_unlock()
  + [[file:2.6.29/slub-compile-fix.patch][2.6.29]]
  - 3.0
* [2.6.29         ] netfilter-rcu-destroy.patch
  + [[file:2.6.29/netfilter-rcu-destroy.patch][2.6.29]]
  - 3.0
* [2.6.29         ] add -rt extra-version
  + [[file:2.6.29/rt-mutex-core-mutex-fixes.patch][2.6.29]]
  - 3.0
* [2.6.29         ] preempt-realtime-x86-32-gup-kmapatomic.patch
  + [[file:2.6.29/preempt-realtime-x86-32-gup-kmapatomic.patch][2.6.29]]
  - 3.0
* [2.6.29         ] rt: fix perfcounters
  + [[file:2.6.29/preempt-realtime-perfcounters.patch][2.6.29]]
  - 3.0
* [2.6.29         ] x86: fix sparse irq vector
  + [[file:2.6.29/x86-vector-sparse-irq-fix.patch][2.6.29]]
  - 3.0
* [2.6.29         ] arm-tracing-updates.patch
  + [[file:2.6.29/arm-tracing-updates.patch][2.6.29]]
  - 3.0
* [2.6.29         ] arm-fix-compile-1.patch
  + [[file:2.6.29/arm-fix-compile-1.patch][2.6.29]]
  - 3.0
* [2.6.29         ] powerpc-pseries-rtasd-irq-disable-check-non-rt.patch
  + [[file:2.6.29/powerpc-pseries-rtasd-irq-disable-check-non-rt.patch][2.6.29]]
  - 3.0
* [2.6.29         ] rt: sparseirq build fix
  + [[file:2.6.29/preempt-realtime-fix-irqdesc-lock-initializers.patch][2.6.29]]
  - 3.0
* [2.6.29         ] per: cpu locked infrastructure
  + [[file:2.6.29/per-cpu-locked-infrastructure.patch][2.6.29]]
  - 3.0
* [2.6.29         ] threaded-irq-revert-for-first-shot.patch
  + [[file:2.6.29/threaded-irq-revert-for-first-shot.patch][2.6.29]]
  - 3.0
* [2.6.29         ] cpu-hotplug: get_cpu_var_locked online aware
  + [[file:2.6.29/cpuhotplug-per-cpu.patch][2.6.29]]
  - 3.0
* [2.6.29         ] preempt-realtime-debugobjects-rt-safe.patch
  + [[file:2.6.29/preempt-realtime-debugobjects-rt-safe.patch][2.6.29]]
  - 3.0
* [2.6.29         ] mm-lock-break-on-bulk.patch
  + [[file:2.6.29/mm-lock-break-on-bulk.patch][2.6.29]]
  - 3.0
* [2.6.29         ] rt: res_counter fix
  + [[file:2.6.29/rt-res_counter-fix.patch][2.6.29]]
  - 3.0
* [2.6.29         ] suppress warning of smp_processor_id use.
  + [[file:2.6.29/sched-generic-hide-smp-warning.patch][2.6.29]]
  - 3.0
* [2.6.29         ] irq: desc init
  + [[file:2.6.29/irq-desc-init.patch][2.6.29]]
  - 3.0
* [2.6.29         ] rtmutex: prevent missed wakeups
  + [[file:2.6.29/tglx-07-rtmutex-prevent-missed-wakeups.patch][2.6.29]]
  - 3.0
* [2.6.29         ] rt: btrfs locking fix/workaround
  + [[file:2.6.29/preempt-realtime-btrfs-locking-workaround.patch][2.6.29]]
  - 3.0
* [2.6.29         ] patches/fix-net-bug-fixes.patch
  + [[file:2.6.29/fix-net-bug-fixes.patch][2.6.29]]
  - 3.0
* [2.6.29         ] rt: fix paravirt spinlocks
  + [[file:2.6.29/preempt-realtime-paravirt-spinlocks-fix.patch][2.6.29]]
  - 3.0
* [2.6.29         ] rtmutex-mutex-fixups.patch
  + [[file:2.6.29/rtmutex-mutex-fixups.patch][2.6.29]]
  - 3.0
* [2.6.29         ] cpu-hotplug: preemptible page_alloc
  + [[file:2.6.29/cpuhotplug-page_alloc.patch][2.6.29]]
  - 3.0
* [2.6.29         ] powerpc-raw-spin-unlock-wait-disable-preemption.patch
  + [[file:2.6.29/powerpc-raw-spin-unlock-wait-disable-preemption.patch][2.6.29]]
  - 3.0
* [2.6.29         ] t: fix ipi call lock
  + [[file:2.6.29/preempt-realtime-ipi-call-lock-raw.patch][2.6.29]]
  - 3.0
* [2.6.29         ] trace-disable-hw-branch-tracer.patch
  + [[file:2.6.29/trace-disable-hw-branch-tracer.patch][2.6.29]]
  - 3.0
* [2.6.29         ] resurrect: softirq code
  + [[file:2.6.29/resurrect-softirq-code.patch][2.6.29]]
  - 3.0
* [2.6.29         ] powerpc-percpu-tlb.patch
  + [[file:2.6.29/powerpc-percpu-tlb.patch][2.6.29]]
  - 3.0
* [2.6.29         ] rt: no workqueue tracer
  + [[file:2.6.29/preempt-realtime-disable-workqueue-tracer-on-preempt-rt.patch][2.6.29]]
  - 3.0
* [2.6.29         ] rt: serial console fix
  + [[file:2.6.29/preempt-realtime-serial-console-fix.patch][2.6.29]]
  - 3.0
* [2.6.29         ] rt: signals struct lock init fix
  + [[file:2.6.29/preempt-realtime-fix-sig-cputimer-lock.patch][2.6.29]]
  - 3.0
* [2.6.29         ] powerpc-realtime-preempt.patch
  + [[file:2.6.29/powerpc-realtime-preempt.patch][2.6.29]]
  - 3.0
* [2.6.29         ] lockdep: atomic fixup
  + [[file:2.6.29/lockdep-atomic-fixup.patch][2.6.29]]
  - 3.0
* [2.6.29         ] highmem: atomic fix
  + [[file:2.6.29/highmem-atomic-fix.patch][2.6.29]]
  - 3.0
* [2.6.29         ] seqlock: serialize against writers
  + [[file:2.6.29/seqlock-serialize-against-writers.patch][2.6.29]]
  - 3.0
* [2.6.29         ] rt: irq handle.c fix2
  + [[file:2.6.29/preempt-realtime-direct-keyboard-sparseirq-fix.patch][2.6.29]]
  - 3.0
* [2.6.29         ] x86-pae-preempt-realtime-fix.patch
  + [[file:2.6.29/x86-pae-preempt-realtime-fix.patch][2.6.29]]
  - 3.0
* [2.6.29         ] irq threading: fix PF_HARDIRQ definition
  + [[file:2.6.29/blkcypher-fix.patch][2.6.29]]
  - 3.0
* [2.6.29 -    3.4] timers: fix timer hotplug on -rt
  + [[file:2.6.29/preempt-realtime-timer-cpu-hotplug-fix.patch][2.6.29]]
    [[file:3.0/timers-fix-timer-hotplug-on-rt.patch][3.0]]
    [[file:3.2/timers-fix-timer-hotplug-on-rt.patch][3.2]]
    [[file:3.4/timers-fix-timer-hotplug-on-rt.patch][3.4]]
  - 3.6
* [2.6.29 -    3.6] signals: Do not wakeup self
  + [[file:2.6.29/signal-do-not-wakeup-self.patch][2.6.29]]
    [[file:3.0/signals-do-not-wake-self.patch][3.0]]
    [[file:3.2/signals-do-not-wake-self.patch][3.2]]
    [[file:3.4/signals-do-not-wake-self.patch][3.4]]
    [[file:3.6/signals-do-not-wake-self.patch][3.6]]
  - 3.8
* [2.6.29 -    3.8] timers: mov printk_tick to soft interrupt
  + [[file:2.6.29/printk-tick-move-to-softirq-on-rt.patch][2.6.29]]
  m [[file:3.0/timers-mov-printk_tick-to-soft-interrupt.patch][3.0]]
    [[file:3.2/timers-mov-printk_tick-to-soft-interrupt.patch][3.2]]
    [[file:3.4/timers-mov-printk_tick-to-soft-interrupt.patch][3.4]]
    [[file:3.6/timers-mov-printk_tick-to-soft-interrupt.patch][3.6]]
    [[file:3.8/timers-mov-printk_tick-to-soft-interrupt.patch][3.8]]
  - 3.10
* [2.6.29 -    4.0] posix-timers: Shorten posix_cpu_timers/<CPU> kernel thread names
  + [[file:2.6.29/shorten-posix-cpu-timers-name.patch][2.6.29]]
    [[file:3.0/posix-timers-shorten-cpu-timers-thread.patch][3.0]]
    [[file:3.2/posix-timers-shorten-cpu-timers-thread.patch][3.2]]
    [[file:3.4/posix-timers-shorten-cpu-timers-thread.patch][3.4]]
    [[file:3.6/posix-timers-shorten-cpu-timers-thread.patch][3.6]]
    [[file:3.8/posix-timers-shorten-cpu-timers-thread.patch][3.8]]
    [[file:3.10/posix-timers-shorten-cpu-timers-thread.patch][3.10]]
    [[file:3.12/posix-timers-shorten-cpu-timers-thread.patch][3.12]]
    [[file:3.14/posix-timers-shorten-cpu-timers-thread.patch][3.14]]
    [[file:3.18/posix-timers-shorten-cpu-timers-thread.patch][3.18]]
    [[file:4.0/posix-timers-shorten-cpu-timers-thread.patch][4.0]]
  - 4.1
* [2.6.29 -    4.0] posix-timers: Avoid wakeups when no timers are active
  + [[file:2.6.29/posixtimer-avoid-wakeups.patch][2.6.29]]
    [[file:3.0/posix-timers-avoid-wakeups-when-no-timers-are-active.patch][3.0]]
    [[file:3.2/posix-timers-avoid-wakeups-when-no-timers-are-active.patch][3.2]]
    [[file:3.4/posix-timers-avoid-wakeups-when-no-timers-are-active.patch][3.4]]
    [[file:3.6/posix-timers-avoid-wakeups-when-no-timers-are-active.patch][3.6]]
    [[file:3.8/posix-timers-avoid-wakeups-when-no-timers-are-active.patch][3.8]]
    [[file:3.10/posix-timers-avoid-wakeups-when-no-timers-are-active.patch][3.10]]
    [[file:3.12/posix-timers-avoid-wakeups-when-no-timers-are-active.patch][3.12]]
    [[file:3.14/posix-timers-avoid-wakeups-when-no-timers-are-active.patch][3.14]]
    [[file:3.18/posix-timers-avoid-wakeups-when-no-timers-are-active.patch][3.18]]
    [[file:4.0/posix-timers-avoid-wakeups-when-no-timers-are-active.patch][4.0]]
  - 4.1
* [2.6.29 -   4.11] hrtimer: Fixup hrtimer callback changes for preempt-rt
  + [[file:2.6.29/hrtimer-fixup-hrtimer-callback-changes.patch][2.6.29]]
  M [[file:3.0/hrtimer-fixup-hrtimer-callback-changes-for-preempt-r.patch][3.0]]
  m [[file:3.2/hrtimer-fixup-hrtimer-callback-changes-for-preempt-r.patch][3.2]]
  M [[file:3.4/hrtimer-fixup-hrtimer-callback-changes-for-preempt-r.patch][3.4]]
  M [[file:3.6/hrtimer-fixup-hrtimer-callback-changes-for-preempt-r.patch][3.6]]
  M [[file:3.8/hrtimer-fixup-hrtimer-callback-changes-for-preempt-r.patch][3.8]]
  M [[file:3.10/hrtimer-fixup-hrtimer-callback-changes-for-preempt-r.patch][3.10]]
  m [[file:3.12/hrtimer-fixup-hrtimer-callback-changes-for-preempt-r.patch][3.12]]
    [[file:3.14/hrtimer-fixup-hrtimer-callback-changes-for-preempt-r.patch][3.14]]
  M [[file:3.18/hrtimer-fixup-hrtimer-callback-changes-for-preempt-r.patch][3.18]]
  m [[file:4.0/hrtimer-fixup-hrtimer-callback-changes-for-preempt-r.patch][4.0]]
  M [[file:4.1/hrtimer-fixup-hrtimer-callback-changes-for-preempt-r.patch][4.1]]
  M [[file:4.4/hrtimer-fixup-hrtimer-callback-changes-for-preempt-r.patch][4.4]]
  M [[file:4.6/hrtimer-fixup-hrtimer-callback-changes-for-preempt-r.patch][4.6]]
  M [[file:4.8/hrtimer-fixup-hrtimer-callback-changes-for-preempt-r.patch][4.8]]
    [[file:4.9/hrtimer-fixup-hrtimer-callback-changes-for-preempt-r.patch][4.9]]
  M [[file:4.11/hrtimer-fixup-hrtimer-callback-changes-for-preempt-r.patch][4.11]]
* [2.6.29 -   4.11] ata: Do not disable interrupts in ide code for preempt-rt
  + [[file:2.6.29/ata-irq-save-nort.patch][2.6.29]]
    [[file:3.0/ata-disable-interrupts-if-non-rt.patch][3.0]]
  m [[file:3.2/ata-disable-interrupts-if-non-rt.patch][3.2]]
  m [[file:3.4/ata-disable-interrupts-if-non-rt.patch][3.4]]
    [[file:3.6/ata-disable-interrupts-if-non-rt.patch][3.6]]
    [[file:3.8/ata-disable-interrupts-if-non-rt.patch][3.8]]
    [[file:3.10/ata-disable-interrupts-if-non-rt.patch][3.10]]
    [[file:3.12/ata-disable-interrupts-if-non-rt.patch][3.12]]
    [[file:3.14/ata-disable-interrupts-if-non-rt.patch][3.14]]
    [[file:3.18/ata-disable-interrupts-if-non-rt.patch][3.18]]
    [[file:4.0/ata-disable-interrupts-if-non-rt.patch][4.0]]
    [[file:4.1/ata-disable-interrupts-if-non-rt.patch][4.1]]
    [[file:4.4/ata-disable-interrupts-if-non-rt.patch][4.4]]
    [[file:4.6/ata-disable-interrupts-if-non-rt.patch][4.6]]
    [[file:4.8/ata-disable-interrupts-if-non-rt.patch][4.8]]
    [[file:4.9/ata-disable-interrupts-if-non-rt.patch][4.9]]
  m [[file:4.11/ata-disable-interrupts-if-non-rt.patch][4.11]]
* [2.6.29 -   4.11] posix-timers: Prevent broadcast signals
  + [[file:2.6.29/posix-timers-prevent-broadcast-signals.patch][2.6.29]]
    [[file:3.0/posix-timers-no-broadcast.patch][3.0]]
    [[file:3.2/posix-timers-no-broadcast.patch][3.2]]
    [[file:3.4/posix-timers-no-broadcast.patch][3.4]]
    [[file:3.6/posix-timers-no-broadcast.patch][3.6]]
    [[file:3.8/posix-timers-no-broadcast.patch][3.8]]
    [[file:3.10/posix-timers-no-broadcast.patch][3.10]]
    [[file:3.12/posix-timers-no-broadcast.patch][3.12]]
    [[file:3.14/posix-timers-no-broadcast.patch][3.14]]
    [[file:3.18/posix-timers-no-broadcast.patch][3.18]]
    [[file:4.0/posix-timers-no-broadcast.patch][4.0]]
    [[file:4.1/posix-timers-no-broadcast.patch][4.1]]
    [[file:4.4/posix-timers-no-broadcast.patch][4.4]]
    [[file:4.6/posix-timers-no-broadcast.patch][4.6]]
    [[file:4.8/posix-timers-no-broadcast.patch][4.8]]
    [[file:4.9/posix-timers-no-broadcast.patch][4.9]]
    [[file:4.11/posix-timers-no-broadcast.patch][4.11]]
* [   3.0         ] dmar-make-qi-lock-raw.patch{C::feature::rtsupport::replace with raw}
  + [[file:3.0/dmar-make-qi-lock-raw.patch][3.0]]
  - 3.2
* [   3.0         ] mips: Allow irq threading{C::feature::rtsupport::enable rt thrd, add reverse dependency entry in Kconfig}
  + [[file:3.0/mips-allow-irq-threading.patch][3.0]]
  - 3.2
* [   3.0         ] rtmutex: Cleanup the debug code{C::maintain::refactor::rm some debuginfo, replace rt_trace_on with debug_locks}
  + [[file:3.0/rtmutex-debug-cleanup.patch][3.0]]
  - 3.2
* [   3.0         ] sched: Convert thread_group_cputimer lock to raw_spinlock{C::feature::rtsupport::replace with raw}
  + [[file:3.0/sched-thread-group-cputimer-lock-raw.patch][3.0]]
  - 3.2
* [   3.0         ] floppy: Use timer_del_sync() in init cleanup path{C::bug::crash::hardware::sync::add barrier in time related fun in floppy driver}
  + [[file:3.0/drivers-floppy-use-timer-del-sync.patch][3.0]]
  - 3.2
* [   3.0         ] x86-iommu-rt-aware.patch{C::feature::rtsupport::replace with raw}
  + [[file:3.0/dmar-make-register-lock-raw.patch][3.0]]
  - 3.2
* [   3.0         ] ftrace-hash-fix.patch{C::bug::data_err::??::semantics::add and replace old fun}
  + [[file:3.0/ftrace-hash-fix.patch][3.0]]
  - 3.2
* [   3.0         ] ACPI: Convert c3_lock to raw_spinlock{C::feature::rtsupport::replace with raw}
  + [[file:3.0/acpi-convert-c3lock-raw.patch][3.0]]
  - 3.2
* [   3.0         ] trace: Convert various locks to raw_spinlock{C::feature::rtsupport::replace with raw}
  + [[file:3.0/trace-convert-various-locks-to-raw.patch][3.0]]
  - 3.2
* [   3.0         ] dmar-mark-dmar-irq-no-thread.patch{C::feature::rtsupport::add IRQF_NO_THREAD when request irq}
  + [[file:3.0/dmar-mark-dmar-irq-no-thread.patch][3.0]]
  - 3.2
* [   3.0         ] latencytop: Convert latency_lock to raw_spinlock{C::feature::rtsupport::replace with raw}
  + [[file:3.0/latency-top-lock-raw.patch][3.0]]
  - 3.2
* [   3.0         ] oprofile: Convert orpofilefs lock to raw_spinlock{C::feature::rtsupport::replace with raw}
  + [[file:3.0/oprofile-fslock-raw.patch][3.0]]
  - 3.2
* [   3.0         ] timer_stats: Convert table_lock to raw_spin_lock{C::feature::rtsupport::replace with raw}
  + [[file:3.0/timer-stats-raw-table-lock.patch][3.0]]
  - 3.2
* [   3.0         ] local-bh-migrate.patch{C::feature::rtsupport::move fun into rt-full on, add enclose some fun with rt-config}
  + [[file:3.0/rcu-disable-the-rcu-bh-stuff-for-rt.patch][3.0]]
  - 3.2
* [   3.0         ] MIPS: Mark cascade and low level interrupts IRQF_NO_THREAD{C::feature::rtsupport::add nothread field in irq to avoid threading}
  + [[file:3.0/mips-mark-cascade-interrupts-nothread.patch][3.0]]
  - 3.2
* [   3.0         ] printk: Convert logbuf_lock to raw_spinlock{C::feature::rtsupport::replace with raw}
  + [[file:3.0/prink-convert-logbuf-lock-raw.patch][3.0]]
  - 3.2
* [   3.0         ] perf, x86: Avoid kfree in CPU_STARTING{C::bug::leak::resource_leak::semantics::add pointer to record the resourse to be freed}
  + [[file:3.0/perf-x86-no-kfree-in-cpu_starting.patch][3.0]]
  - 3.2
* [   3.0         ] fs: Add missing rcu protection for __task_cred() in sys_ioprio_get{C::bug::data_err::atomicity::mutex::enclose with rcu_read_lock}
  + [[file:3.0/fs-add-missing-rcu-protection.patch][3.0]]
  - 3.2
* [   3.0         ] rtc: Limit frequency{C::feature::hrtimer::check freq upper bound}
  + [[file:3.0/rtc-limit-frequency.patch][3.0]]
  - 3.2
* [   3.0         ] rtc: rtc-tegra: Use proper lock initializer{C::maintain::refactor::use another fun to init tegra_rtc_lock}
  + [[file:3.0/rtc-tegra-lock-init.patch][3.0]]
  - 3.2
* [   3.0         ] powerpc: Convert uic->lock to raw_spinlock{C::feature::rtsupport::replace with raw}
  + [[file:3.0/powerpc-uic-lock-raw.patch][3.0]]
  - 3.2
* [   3.0         ] sched: Convert cgroups release_list_lock to raw_spinlock{C::feature::rtsupport::replace with raw}
  + [[file:3.0/sched-convert-cgroups-release-lock-raw.patch][3.0]]
  - 3.2
* [   3.0         ] highmem-rt.patch{C::feature::rtsupport::highmem, no rt when highmem on}
  + [[file:3.0/x86-no-highmem-with-rt.patch][3.0]]
  - 3.2
* [   3.0         ] mm: memory: Efficient ZAP block size{C::feature::rtsupport::add comment, preemptible when rt-full}
  + [[file:3.0/mm-memory-rt.patch][3.0]]
  - 3.2
* [   3.0         ] ARM: raw_lock conversions{C::feature::rtsupport::replace with raw}
  + [[file:3.0/arm-raw_lock-conversions.patch][3.0]]
  - 3.2
* [   3.0         ] drivers/dca: Convert dca_lock to a raw spinlock{C::bug::??::preempt::preempt::replace with raw}
  + [[file:3.0/drivers-dca-convert-dcalock-to-raw.patch][3.0]]
  - 3.2
* [   3.0         ] semaphore: Make inner lock raw{C::feature::rtsupport::replace with raw}
  + [[file:3.0/sema-make-lock-raw.patch][3.0]]
  - 3.2
* [   3.0         ] sched-copy-cpumask-in-one-place.patch{C::maintain::refactor::merge codes}
  + [[file:3.0/sched-copy-cpumask-in-one-place.patch][3.0]]
  - 3.2
* [   3.0         ] pci-intr-remapping-make-irte-lock-raw.patch{C::feature::rtsupport::replace with raw}
  + [[file:3.0/pci-intr-remapping-make-irte-lock-raw.patch][3.0]]
  - 3.2
* [   3.0         ] mips: ftrace: Fix the CONFIG_DYNAMIC_FTRACE=n compile{C::maintain?::refactor(I guess maybe it is fix compile err here)}
  + [[file:3.0/mips-ftrace-fix-non-dynamic-crappola.patch][3.0]]
  - 3.2
* [   3.0         ] MIPS: Loongson: Mark cascade interrupts IRQF_NO_THREAD{C::feature::rtsupport::irq no thread}
  + [[file:3.0/mips-loongson-mark-cascade-interrupts-non-thread.patch][3.0]]
  - 3.2
* [   3.0         ] netfilter-wtf.patch{C::maintain::refactor::init with fun}
  + [[file:3.0/net-netfilter-use-proper-rw-init.patch][3.0]]
  - 3.2
* [   3.0         ] sched: Warn on rt throttling{C::feature::debuginfo::warning info}
  + [[file:3.0/sched-warn-on-throttle.patch][3.0]]
  - 3.2
* [   3.0         ] fs: btrfs locking workaround for preempt -rt{C::feature::rtsupport::add config}
  + [[file:3.0/fs-btrfs-locking-workaround-for-preempt-rt.patch][3.0]]
  - 3.2
* [   3.0         ] rtc: Fix hrtimer deadlock{C::bug::deadlock::deadlock::semantics::add fun to disable timer here, not a real fix}
  + [[file:3.0/rtc-fix-hrtimer-deadlock.patch][3.0]]
  - 3.2
* [   3.0         ] xfs: Convert mr_lock to rw_anon_semaphore{C::feature::rtsupport::replace with anon sem}
  + [[file:3.0/xfs-convert-mr-lock-to-rw-anon.patch][3.0]]
  - 3.2
* [   3.0         ] sched: Move blk_schedule_flush_plug() out of __schedule(){C::feature::rtsupport::preempt, remove fun into schedule, rm irq and preempt wrap around}
  + [[file:3.0/sched-move-blk_schedule_flush_plug-out-of-__schedule.patch][3.0]]
  - 3.2
* [   3.0         ] video: Convert vga console lock to raw_spinlock{C::feature::rtsupport::make printk atomic}
  + [[file:3.0/video-convert-vga-console-lock-to-raw.patch][3.0]]
  - 3.2
* [   3.0         ] drm-sigh.patch{C::feature::rtsupport::rm preempt disable in gpu drm}
  + [[file:3.0/drm-sigh.patch][3.0]]
  - 3.2
* [   3.0         ] percpu_counter: Convert to raw_spinlock{C::feature::rtsupport::replace with raw}
  + [[file:3.0/percpu-cpunter-raw-lock.patch][3.0]]
  - 3.2
* [   3.0         ] sched: remove useles get_cpu() in sched_fork(){C::feature::rtsupport?::said to rm useless preempt disable}
  + [[file:3.0/sched-remove-useless-preempt-disable-in-sched-fork.patch][3.0]]
  - 3.2
* [   3.0         ] rtc: Handle errors correctly in rtc_irq_set_state(){}{C::feature::errhandle::release spinlock when meet err}
  + [[file:3.0/rtc-deal-with-errors-correctly.patch][3.0]]
  - 3.2
* [   3.0         ] highmem: Explicitely disable preemption{C::feature::rtsupport::enclose pagefault_disable with explicit preempt_disable}
  + [[file:3.0/highmem-explicitly-disable-preemption.patch][3.0]]
  - 3.2
* [   3.0         ] rwsem: Make inner lock raw{C::feature::rtsupport::replace with raw}
  + [[file:3.0/rwsem-make-inner-lock-raw.patch][3.0]]
  - 3.2
* [   3.0         ] fs: jdb/jbd2: Put identical code in a common header{C::maintain::refactor::merge the shared codes}
  + [[file:3.0/jdb-shared-state-bits.patch][3.0]]
  - 3.2
* [   3.0         ] fs: Convert i_alloc_sem to rw_anon_semaphore{C::feature::rtsupport::replace with raw}
  + [[file:3.0/fs-convert-i-alloc-sem-to-rw-anon.patch][3.0]]
  - 3.2
* [   3.0         ] watchdog-madness.patch{C::bug::??::rm static, add set scheduler fun}
  + [[file:3.0/watchdog-madness.patch][3.0]]
  - 3.2
* [   3.0         ] mips: sibyte: Add missing irq_mask function{C::bug::??::rename a field}
  + [[file:3.0/mips-sibyte-fix-irq-chip.patch][3.0]]
  - 3.2
* [   3.0         ] sched-show-state-no-task-list-lock.patch{C::feature::lock::replace rd_lock with rcu_read_lock}
  + [[file:3.0/sched-show-state-no-task-list-lock.patch][3.0]]
  - 3.2
* [   3.0         ] plist-remove-spinlock-types-dependency.patch{C::maintain::refactor::rm spinlock types dependency}
  + [[file:3.0/plist-remove-spinlock-types-dependency.patch][3.0]]
  - 3.2
* [   3.0         ] sched: Rename rt_mutex_setprio to task_setprio{C::maintain::refactor::rename var}
  + [[file:3.0/sched-rename-=rtmutex-set-prio-to-task-setprio.patch][3.0]]
  - 3.2
* [   3.0         ] x86: mce: Convert cmci_discover_lock to raw_spinlock{C::feature::rtsupport::replace with raw}
  + [[file:3.0/x86-mce-cmc-lock-raw.patch][3.0]]
  - 3.2
* [   3.0         ] rw_semaphores: Add rw_anon_semaphores{C::feature::rtsupport::anon sem, implement anonymous sem to make convertion to rt easier}
  + [[file:3.0/rwsem-implement-anon-rwsems.patch][3.0]]
  - 3.2
* [   3.0         ] ide: Fix irq flags madness{C::bug::data_err::uninit_var::memory::init with 0}
  + [[file:3.0/drivers-ide-fix-irq-flags-madness.patch][3.0]]
  - 3.2
* [   3.0         ] proportions: Convert to raw_spinlck{C::feature::rtsupport::replace with raw}
  + [[file:3.0/proportions-raw-lock.patch][3.0]]
  - 3.2
* [   3.0         ] drm-more-moronic-crap.patch{C::feature::rtsupport::rm preempt disable}
  + [[file:3.0/drm-more-moronic-crap.patch][3.0]]
  - 3.2
* [   3.0         ] sched: Separate the scheduler entry for preemption{C::maintain::refactor::separate codes, actually a rename}
  + [[file:3.0/sched-separate-the-scheduler-entry-for-preemption.patch][3.0]]
  - 3.2
* [   3.0         ] MIPS: Make the die_lock be raw{C::feature::rtsupport::replace with raw}
  + [[file:3.0/mips-make-die-lock-raw.patch][3.0]]
  - 3.2
* [   3.0         ] sched-use-task-allowed-accessor.patch{C::maintain::refactor::replace fun, prepare for further migrate disable}
  + [[file:3.0/sched-use-task-allowed-accessor.patch][3.0]]
  - 3.2
* [   3.0         ] kprobes: Convert the hash locks and kretprobe.lock to raw_spinlock{C::feature::rtsupport::replace with raw}
  + [[file:3.0/kprobes-use-raw-lock.patch][3.0]]
  - 3.2
* [   3.0 -    3.2] preempt-mark-legitimated-no-resched-sites.patch{C::maintain::refactor::rename, maybe change imple someday}
  + [[file:3.0/preempt-mark-legitimated-no-resched-sites.patch][3.0]]
  M [[file:3.2/preempt-mark-legitimated-no-resched-sites.patch][3.2]]
  - 3.4
* [   3.0 -    3.2] sched: Break out from load_balancing on rq_lock contention{C::performance::mutex::break out from load-balancing idle to minimize critical section}
  + [[file:3.0/sched-load-balance-break-on-rq-contention.patch][3.0]]
    [[file:3.2/sched-load-balance-break-on-rq-contention.patch][3.2]]
  - 3.4
* [   3.0 -    3.2] sched: Use schedule_preempt_disabled(){C::maintain::refactor::use a combined fun to replace two}
  + [[file:3.0/sched-use-schedule-preempt-disabled.patch][3.0]]
  M [[file:3.2/sched-use-schedule-preempt-disabled.patch][3.2]]
  - 3.4
* [   3.0 -    3.2] sched-prevent-idle-boost.patch{C::feature::sched::allow idle task boosting in preempt, warning info}
  + [[file:3.0/sched-prevent-idle-boost.patch][3.0]]
  m [[file:3.2/sched-prevent-idle-boost.patch][3.2]]
  - 3.4
* [   3.0 -    3.2] powerpc: 85xx: Mark cascade irq IRQF_NO_THREAD{C::feature::rtsupport::add flag irq no thread}
  + [[file:3.0/powerpc-85xx-mark-cascade-irq-no-thread.patch][3.0]]
    [[file:3.2/powerpc-85xx-mark-cascade-irq-no-thread.patch][3.2]]
  - 3.4
* [   3.0 -    3.2] powerpc: Allow irq threading{C::feature::rtsupport::allow irq threading in ppc}
  + [[file:3.0/power-allow-irq-threading.patch][3.0]]
  m [[file:3.2/power-allow-irq-threading.patch][3.2]]
  - 3.4
* [   3.0 -    3.2] sched-no-work-when-pi-blocked.patch{C::feature::sched::no sched when pi blocked}
  + [[file:3.0/sched-no-work-when-pi-blocked.patch][3.0]]
  M [[file:3.2/sched-no-work-when-pi-blocked.patch][3.2]]
  - 3.4
* [   3.0 -    3.2] seqlock: Create raw_seqlock{C::feature::rtsupport::raw_seqlock_t implementation to annotate seqlocks}
  + [[file:3.0/seqlock-raw-seqlock.patch][3.0]]
    [[file:3.2/seqlock-raw-seqlock.patch][3.2]]
  - 3.4
* [   3.0 -    3.2] x86-32-fix-signal-crap.patch{C::bug::??:irq::irq::add irqenable}
  + [[file:3.0/x86-32-fix-signal-crap.patch][3.0]]
    [[file:3.2/x86-32-fix-signal-crap.patch][3.2]]
  - 3.4
* [   3.0 -    3.2] mm-vmstat-fix-the-irq-lock-asymetry.patch{C::maintain::refactor::move codes into a fun}
  + [[file:3.0/mm-vmstat-fix-the-irq-lock-asymetry.patch][3.0]]
  m [[file:3.2/mm-vmstat-fix-the-irq-lock-asymetry.patch][3.2]]
  - 3.4
* [   3.0 -    3.2] sched: Create schedule_preempt_disabled(){C::maintain::refactor::combine three fun together}
  + [[file:3.0/sched-create-schedule-preempt-disabled.patch][3.0]]
    [[file:3.2/sched-create-schedule-preempt-disabled.patch][3.2]]
  - 3.4
* [   3.0 -    3.2] timekeeping: Convert xtime_lock to raw_seqlock{C::maintain::refactor::replace with raw but not a roll-back}
  + [[file:3.0/timekeeping-covert-xtimelock.patch][3.0]]
  M [[file:3.2/timekeeping-covert-xtimelock.patch][3.2]]
  - 3.4
* [   3.0 -    3.2] rcu: Reduce lock section{C::performance::mutex::waitqueue wakeup is moved out of the raw locked section}
  + [[file:3.0/rcu-reduce-lock-section.patch][3.0]]
    [[file:3.2/rcu-reduce-lock-section.patch][3.2]]
  - 3.4
* [   3.0 -    3.4] console-make-rt-friendly.patch{C::feature::rtsupport::add raw lock when config rt}
  + [[file:3.0/console-make-rt-friendly.patch][3.0]]
  m [[file:3.2/console-make-rt-friendly.patch][3.2]]
    [[file:3.4/console-make-rt-friendly.patch][3.4]]
  - 3.6
* [   3.0 -    3.4] net-ipv4-route-use-locks-on-up-rt.patch{C::feature::rtsupport::add rt to some circumstances}
  + [[file:3.0/net-ipv4-route-use-locks-on-up-rt.patch][3.0]]
    [[file:3.2/net-ipv4-route-use-locks-on-up-rt.patch][3.2]]
    [[file:3.4/net-ipv4-route-use-locks-on-up-rt.patch][3.4]]
  - 3.6
* [   3.0 -    3.4] genirq: Disable random call on preempt-rt{C::feature::rtsupport::disable random call on preempt rt}
  + [[file:3.0/genirq-disable-random-call-on-preempt-rt.patch][3.0]]
    [[file:3.2/genirq-disable-random-call-on-preempt-rt.patch][3.2]]
    [[file:3.4/genirq-disable-random-call-on-preempt-rt.patch][3.4]]
  - 3.6
* [   3.0 -    3.4] arm-enable-interrupts-in-signal-code.patch{}{C::feature::signal::add irq in signal code}
  + [[file:3.0/arm-enable-interrupts-in-signal-code.patch][3.0]]
    [[file:3.2/arm-enable-interrupts-in-signal-code.patch][3.2]]
    [[file:3.4/arm-enable-interrupts-in-signal-code.patch][3.4]]
  - 3.6
* [   3.0 -    3.4] workqueue-avoid-the-lock-in-cpu-dying.patch{C::feature::sched::add more case conditions}
  + [[file:3.0/workqueue-avoid-the-lock-in-cpu-dying.patch][3.0]]
    [[file:3.2/workqueue-avoid-the-lock-in-cpu-dying.patch][3.2]]
    [[file:3.4/workqueue-avoid-the-lock-in-cpu-dying.patch][3.4]]
  - 3.6
* [   3.0 -    3.4] sched: Distangle worker accounting from rq-%3Elock{C::maintain::refactor}
  + [[file:3.0/sched-distangle-worker-accounting-from-rq-3elock.patch][3.0]]
  m [[file:3.2/sched-distangle-worker-accounting-from-rq-3elock.patch][3.2]]
  m [[file:3.4/sched-distangle-worker-accounting-from-rq-3elock.patch][3.4]]
  - 3.6
* [   3.0 -    3.6] workqueue-use-get-cpu-light.patch{C::feature::sched::use _light fun to replace? I guess relevant with rt}
  + [[file:3.0/workqueue-use-get-cpu-light.patch][3.0]]
    [[file:3.2/workqueue-use-get-cpu-light.patch][3.2]]
    [[file:3.4/workqueue-use-get-cpu-light.patch][3.4]]
    [[file:3.6/workqueue-use-get-cpu-light.patch][3.6]]
  - 3.8
* [   3.0 -    3.6] x86: kprobes: Remove remove bogus preempt_enable{C::maintain::refactor::rm fun not function}
  + [[file:3.0/x86-kprobes-remove-bogus-preempt-enable.patch][3.0]]
    [[file:3.2/x86-kprobes-remove-bogus-preempt-enable.patch][3.2]]
    [[file:3.4/x86-kprobes-remove-bogus-preempt-enable.patch][3.4]]
    [[file:3.6/x86-kprobes-remove-bogus-preempt-enable.patch][3.6]]
  - 3.8
* [   3.0 -    3.6] drivers: net: at91_ether: Make mdio protection -rt safe{C::feature::rtsupport::add proper lock to serialize UP codes in rt}
  + [[file:3.0/drivers-net-at91-make-mdio-protection-rt-safe.patch][3.0]]
    [[file:3.2/drivers-net-at91-make-mdio-protection-rt-safe.patch][3.2]]
    [[file:3.4/drivers-net-at91-make-mdio-protection-rt-safe.patch][3.4]]
  m [[file:3.6/drivers-net-at91-make-mdio-protection-rt-safe.patch][3.6]]
  - 3.8
* [   3.0 -    3.6] drivers: net: ehea: Make rx irq handler non-threaded (IRQF_NO_THREAD){C::bug::hang::irq::irq::make irq no thread}
  + [[file:3.0/drivers-net-ehea-mark-rx-irq-no-thread.patch][3.0]]
    [[file:3.2/drivers-net-ehea-mark-rx-irq-no-thread.patch][3.2]]
    [[file:3.4/drivers-net-ehea-mark-rx-irq-no-thread.patch][3.4]]
    [[file:3.6/drivers-net-ehea-mark-rx-irq-no-thread.patch][3.6]]
  - 3.8
* [   3.0 -    3.6] RCU: Force PREEMPT_RCU for PREEMPT-RT{C::feature::rtsupport::rm rt config from tiny rcu to avoid interactive dependency}
  + [[file:3.0/rcu-force-preempt-rcu-for-rt.patch][3.0]]
  M [[file:3.2/rcu-force-preempt-rcu-for-rt.patch][3.2]]
    [[file:3.4/rcu-force-preempt-rcu-for-rt.patch][3.4]]
    [[file:3.6/rcu-force-preempt-rcu-for-rt.patch][3.6]]
  - 3.8
* [   3.0 -    3.6] x86: highmem: Replace BUG_ON by WARN_ON{C::feature::debuginfo::change buginfo to warning to get more info}
  + [[file:3.0/x86-highmem-warn.patch][3.0]]
  m [[file:3.2/x86-highmem-warn.patch][3.2]]
    [[file:3.4/x86-highmem-warn.patch][3.4]]
    [[file:3.6/x86-highmem-warn.patch][3.6]]
  - 3.8
* [   3.0 -    3.6] tty: Do not disable interrupts in put_ldisc on -rt{C::bug::crash::irq::irq::add nort to irq_save}
  + [[file:3.0/tty-use-local-irq-nort.patch][3.0]]
    [[file:3.2/tty-use-local-irq-nort.patch][3.2]]
    [[file:3.4/tty-use-local-irq-nort.patch][3.4]]
  m [[file:3.6/tty-use-local-irq-nort.patch][3.6]]
  - 3.8
* [   3.0 -    3.6] of-convert-devtree-lock.patch{C::feature::rtsupport::replace rdlock with raw_spinlock}
  + [[file:3.0/of-convert-devtree-lock.patch][3.0]]
  m [[file:3.2/of-convert-devtree-lock.patch][3.2]]
    [[file:3.4/of-convert-devtree-lock.patch][3.4]]
  m [[file:3.6/of-convert-devtree-lock.patch][3.6]]
  - 3.8
* [   3.0 -    3.8] arm: Mark pmu interupt IRQF_NO_THREAD{C::feature::rtsupport::no thread irq in pmu irq}
  + [[file:3.0/arm-mark-pmu-interupt-no-thread.patch][3.0]]
  M [[file:3.2/arm-mark-pmu-interupt-no-thread.patch][3.2]]
    [[file:3.4/arm-mark-pmu-interupt-no-thread.patch][3.4]]
    [[file:3.6/arm-mark-pmu-interupt-no-thread.patch][3.6]]
  M [[file:3.8/arm-mark-pmu-interupt-no-thread.patch][3.8]]
  - 3.10
* [   3.0 -    3.8] acpi: Do not disable interrupts on PREEMPT_RT{C::feature::rtsupport::replace with _nort, enable interrupt in rt}
  + [[file:3.0/acpi-use-local-irq-nort.patch][3.0]]
    [[file:3.2/acpi-use-local-irq-nort.patch][3.2]]
    [[file:3.4/acpi-use-local-irq-nort.patch][3.4]]
    [[file:3.6/acpi-use-local-irq-nort.patch][3.6]]
    [[file:3.8/acpi-use-local-irq-nort.patch][3.8]]
  - 3.10
* [   3.0 -    3.8] seqlock: Remove unused functions{C::maintain::refactor::rm unused fun}
  + [[file:3.0/seqlock-remove-unused-functions.patch][3.0]]
    [[file:3.2/seqlock-remove-unused-functions.patch][3.2]]
    [[file:3.4/seqlock-remove-unused-functions.patch][3.4]]
    [[file:3.6/seqlock-remove-unused-functions.patch][3.6]]
    [[file:3.8/seqlock-remove-unused-functions.patch][3.8]]
  - 3.10
* [   3.0 -    3.8] OF: Fixup resursive locking code paths{C::maintain::refactor::add more layers to organize code}
  + [[file:3.0/of-fixup-recursive-locking.patch][3.0]]
  M [[file:3.2/of-fixup-recursive-locking.patch][3.2]]
  m [[file:3.4/of-fixup-recursive-locking.patch][3.4]]
  m [[file:3.6/of-fixup-recursive-locking.patch][3.6]]
  M [[file:3.8/of-fixup-resursive-locking-code-paths.patch][3.8]]
  - 3.10
* [   3.0 -    3.8] locking-various-init-fixes.patch{C::bug::data_err::typo_var::semantics::replace with ref}
  + [[file:3.0/locking-various-init-fixes.patch][3.0]]
  M [[file:3.2/locking-various-init-fixes.patch][3.2]]
  m [[file:3.4/locking-various-init-fixes.patch][3.4]]
    [[file:3.6/locking-various-init-fixes.patch][3.6]]
  M [[file:3.8/locking-various-init-fixes.patch][3.8]]
  - 3.10
* [   3.0 -    3.8] stomp-machine-mark-stomper-thread.patch{C::??::add flag, and init p with it}
  + [[file:3.0/stomp-machine-mark-stomper-thread.patch][3.0]]
    [[file:3.2/stomp-machine-mark-stomper-thread.patch][3.2]]
    [[file:3.4/stomp-machine-mark-stomper-thread.patch][3.4]]
    [[file:3.6/stomp-machine-mark-stomper-thread.patch][3.6]]
    [[file:3.8/stomp-machine-mark-stomper-thread.patch][3.8]]
  - 3.10
* [   3.0 -    3.8] seqlock: Use seqcount{C::maintain::refactor::replace unsigned with a struct}
  + [[file:3.0/seqlock-use-seqcount.patch][3.0]]
    [[file:3.2/seqlock-use-seqcount.patch][3.2]]
  M [[file:3.4/seqlock-use-seqcount.patch][3.4]]
    [[file:3.6/seqlock-use-seqcount.patch][3.6]]
    [[file:3.8/seqlock-use-seqcount.patch][3.8]]
  - 3.10
* [   3.0 -    3.8] arm: Allow forced irq threading{C::maintain::refactor::add config}
  + [[file:3.0/arm-allow-irq-threading.patch][3.0]]
  m [[file:3.2/arm-allow-irq-threading.patch][3.2]]
  m [[file:3.4/arm-allow-irq-threading.patch][3.4]]
  m [[file:3.6/arm-allow-irq-threading.patch][3.6]]
  m [[file:3.8/arm-allow-irq-threading.patch][3.8]]
  - 3.10
* [   3.0 -   3.10] mm: Allow only slab on RT{C::feature::capability::add config to allow slob and slub depend on rt}
  + [[file:3.0/mm-allow-slab-rt.patch][3.0]]
    [[file:3.2/mm-allow-slab-rt.patch][3.2]]
    [[file:3.4/mm-allow-slab-rt.patch][3.4]]
    [[file:3.6/mm-allow-slab-rt.patch][3.6]]
    [[file:3.8/mm-allow-slab-rt.patch][3.8]]
    [[file:3.10/mm-allow-slab-rt.patch][3.10]]
  - 3.12
* [   3.0 -   3.10] mm: More lock breaks in slab.c{C::feature::mm::add fun and delay flag, replace part fun with it; add spinlocks to some sections}
  + [[file:3.0/mm-slab-more-lock-breaks.patch][3.0]]
  m [[file:3.2/mm-slab-more-lock-breaks.patch][3.2]]
    [[file:3.4/mm-slab-more-lock-breaks.patch][3.4]]
  M [[file:3.6/mm-slab-more-lock-breaks.patch][3.6]]
  M [[file:3.8/mm-slab-more-lock-breaks.patch][3.8]]
  M [[file:3.10/mm-slab-more-lock-breaks.patch][3.10]]
  - 3.12
* [   3.0 -   3.10] mm-slab-move-debug-out.patch{C::performance::mutex::move debug check out of irq_save}
  + [[file:3.0/mm-slab-move-debug-out.patch][3.0]]
    [[file:3.2/mm-slab-move-debug-out.patch][3.2]]
    [[file:3.4/mm-slab-move-debug-out.patch][3.4]]
  m [[file:3.6/mm-slab-move-debug-out.patch][3.6]]
  m [[file:3.8/mm-slab-move-debug-out.patch][3.8]]
    [[file:3.10/mm-slab-move-debug-out.patch][3.10]]
  - 3.12
* [   3.0 -   3.10] mm-slab-wrap-functions.patch{C::feature::rtsupport::wrap fun, replace spin with local_spinlk to disable preemption}
  + [[file:3.0/mm-slab-wrap-functions.patch][3.0]]
  m [[file:3.2/mm-slab-wrap-functions.patch][3.2]]
    [[file:3.4/mm-slab-wrap-functions.patch][3.4]]
  M [[file:3.6/mm-slab-wrap-functions.patch][3.6]]
  M [[file:3.8/mm-slab-wrap-functions.patch][3.8]]
  M [[file:3.10/mm-slab-wrap-functions.patch][3.10]]
  - 3.12
* [   3.0 -   3.12] list-add-list-last-entry.patch{C::feature::list::add macro to get list end}
  + [[file:3.0/list-add-list-last-entry.patch][3.0]]
    [[file:3.2/list-add-list-last-entry.patch][3.2]]
    [[file:3.4/list-add-list-last-entry.patch][3.4]]
    [[file:3.6/list-add-list-last-entry.patch][3.6]]
    [[file:3.8/list-add-list-last-entry.patch][3.8]]
  m [[file:3.10/list-add-list-last-entry.patch][3.10]]
    [[file:3.12/list-add-list-last-entry.patch][3.12]]
  - 3.14
* [   3.0 -   3.12] mm: shrink the page frame to !-rt size{C::feature::rtsupport&&mm::rt spinlock dynamic allocator when all pte_page}
  + [[file:3.0/mm-shrink-the-page-frame-to-rt-size.patch][3.0]]
  M [[file:3.2/mm-shrink-the-page-frame-to-rt-size.patch][3.2]]
    [[file:3.4/mm-shrink-the-page-frame-to-rt-size.patch][3.4]]
    [[file:3.6/mm-shrink-the-page-frame-to-rt-size.patch][3.6]]
  M [[file:3.8/mm-shrink-the-page-frame-to-rt-size.patch][3.8]]
    [[file:3.10/mm-shrink-the-page-frame-to-rt-size.patch][3.10]]
    [[file:3.12/mm-shrink-the-page-frame-to-rt-size.patch][3.12]]
  - 3.14
* [   3.0 -   3.14] x86: Disable IST stacks for debug/int 3/stack fault for PREEMPT_RT{C::feature::stack::disable ist stacks ... in rt}
  + [[file:3.0/x86-disable-debug-stack.patch][3.0]]
    [[file:3.2/x86-disable-debug-stack.patch][3.2]]
    [[file:3.4/x86-disable-debug-stack.patch][3.4]]
    [[file:3.6/x86-disable-debug-stack.patch][3.6]]
    [[file:3.8/x86-disable-debug-stack.patch][3.8]]
    [[file:3.10/x86-disable-debug-stack.patch][3.10]]
    [[file:3.12/x86-disable-debug-stack.patch][3.12]]
    [[file:3.14/x86-disable-debug-stack.patch][3.14]]
  - 3.18
* [   3.0 -   3.14] serial: 8250: Clean up the locking for -rt{C::maintain::refactor::merge spinlk and irqsave}
  + [[file:3.0/drivers-serial-cleanup-locking-for-rt.patch][3.0]]
    [[file:3.2/drivers-serial-cleanup-locking-for-rt.patch][3.2]]
  M [[file:3.4/drivers-serial-cleanup-locking-for-rt.patch][3.4]]
    [[file:3.6/drivers-serial-cleanup-locking-for-rt.patch][3.6]]
    [[file:3.8/drivers-serial-cleanup-locking-for-rt.patch][3.8]]
    [[file:3.10/drivers-serial-cleanup-locking-for-rt.patch][3.10]]
    [[file:3.12/drivers-serial-cleanup-locking-for-rt.patch][3.12]]
    [[file:3.14/drivers-serial-cleanup-locking-for-rt.patch][3.14]]
  - 3.18
* [   3.0 -   3.14] USB: Fix the mouse problem when copying large amounts of data{C::bug::hwerr::hardware::semantics::modify ints var when plug usb}
  + [[file:3.0/usb-fix-mouse-problem-copying-large-data.patch][3.0]]
    [[file:3.2/usb-fix-mouse-problem-copying-large-data.patch][3.2]]
    [[file:3.4/usb-fix-mouse-problem-copying-large-data.patch][3.4]]
    [[file:3.6/usb-fix-mouse-problem-copying-large-data.patch][3.6]]
    [[file:3.8/usb-fix-mouse-problem-copying-large-data.patch][3.8]]
    [[file:3.10/usb-fix-mouse-problem-copying-large-data.patch][3.10]]
    [[file:3.12/usb-fix-mouse-problem-copying-large-data.patch][3.12]]
    [[file:3.14/usb-fix-mouse-problem-copying-large-data.patch][3.14]]
  - 3.18
* [   3.0 -   3.14] mm: Replace cgroup_page bit spinlock{C::feature::mm::add spinlock to control pcg&pcm lock}
  + [[file:3.0/mm-cgroup-page-bit-spinlock.patch][3.0]]
    [[file:3.2/mm-cgroup-page-bit-spinlock.patch][3.2]]
  M [[file:3.4/mm-cgroup-page-bit-spinlock.patch][3.4]]
  m [[file:3.6/mm-cgroup-page-bit-spinlock.patch][3.6]]
    [[file:3.8/mm-cgroup-page-bit-spinlock.patch][3.8]]
    [[file:3.10/mm-cgroup-page-bit-spinlock.patch][3.10]]
    [[file:3.12/mm-cgroup-page-bit-spinlock.patch][3.12]]
    [[file:3.14/mm-cgroup-page-bit-spinlock.patch][3.14]]
  - 3.18
* [   3.0 -   3.14] filemap-fix-up.patch{C::bug::??::??::irq::replace in_atomic in bug on with pagefault_disabled} 
  + [[file:3.0/filemap-fix-up.patch][3.0]]
  M [[file:3.2/filemap-fix-up.patch][3.2]]
  m [[file:3.4/filemap-fix-up.patch][3.4]]
    [[file:3.6/filemap-fix-up.patch][3.6]]
    [[file:3.8/filemap-fix-up.patch][3.8]]
    [[file:3.10/filemap-fix-up.patch][3.10]]
    [[file:3.12/filemap-fix-up.patch][3.12]]
    [[file:3.14/filemap-fix-up.patch][3.14]]
  - 3.18
* [   3.0 -   3.14] serial: 8250: Call flush_to_ldisc when the irq is threaded{C::feature::rtsupport::call ... when irq threaded}
  + [[file:3.0/drivers-serial-call-flush_to_ldisc-when-the-irq-is-t.patch][3.0]]
    [[file:3.2/drivers-serial-call-flush_to_ldisc-when-the-irq-is-t.patch][3.2]]
    [[file:3.4/drivers-serial-call-flush_to_ldisc-when-the-irq-is-t.patch][3.4]]
    [[file:3.6/drivers-serial-call-flush_to_ldisc-when-the-irq-is-t.patch][3.6]]
  M [[file:3.8/drivers-serial-call-flush_to_ldisc-when-the-irq-is-t.patch][3.8]]
  m [[file:3.10/drivers-serial-call-flush_to_ldisc-when-the-irq-is-t.patch][3.10]]
  M [[file:3.12/drivers-serial-call-flush_to_ldisc-when-the-irq-is-t.patch][3.12]]
    [[file:3.14/drivers-serial-call-flush_to_ldisc-when-the-irq-is-t.patch][3.14]]
  - 3.18
* [   3.0 -   3.14] drivers: net: gianfar: Make RT aware{C::feature::rtsupport::replace with nort}
  + [[file:3.0/drivers-net-gianfar-make-rt-aware.patch][3.0]]
    [[file:3.2/drivers-net-gianfar-make-rt-aware.patch][3.2]]
    [[file:3.4/drivers-net-gianfar-make-rt-aware.patch][3.4]]
    [[file:3.6/drivers-net-gianfar-make-rt-aware.patch][3.6]]
    [[file:3.8/drivers-net-gianfar-make-rt-aware.patch][3.8]]
    [[file:3.10/drivers-net-gianfar-make-rt-aware.patch][3.10]]
    [[file:3.12/drivers-net-gianfar-make-rt-aware.patch][3.12]]
    [[file:3.14/drivers-net-gianfar-make-rt-aware.patch][3.14]]
  - 3.18
* [   3.0 -   3.18] sched-cond-resched.patch{C::feature::sched::while loop when need to resch}
  + [[file:3.0/sched-cond-resched.patch][3.0]]
    [[file:3.2/sched-cond-resched.patch][3.2]]
    [[file:3.4/sched-cond-resched.patch][3.4]]
    [[file:3.6/sched-cond-resched.patch][3.6]]
    [[file:3.8/sched-cond-resched.patch][3.8]]
    [[file:3.10/sched-cond-resched.patch][3.10]]
    [[file:3.12/sched-cond-resched.patch][3.12]]
  M [[file:3.14/sched-cond-resched.patch][3.14]]
    [[file:3.18/sched-cond-resched.patch][3.18]]
  - 4.0
* [   3.0 -   3.18] mm: Prepare decoupling the page fault disabling logic{C::feature::mm::add a var to record pagefault_disabled}
  + [[file:3.0/mm-prepare-pf-disable-discoupling.patch][3.0]]
    [[file:3.2/mm-prepare-pf-disable-discoupling.patch][3.2]]
    [[file:3.4/mm-prepare-pf-disable-discoupling.patch][3.4]]
    [[file:3.6/mm-prepare-pf-disable-discoupling.patch][3.6]]
  M [[file:3.8/mm-prepare-pf-disable-discoupling.patch][3.8]]
    [[file:3.10/mm-prepare-pf-disable-discoupling.patch][3.10]]
    [[file:3.12/mm-prepare-pf-disable-discoupling.patch][3.12]]
  M [[file:3.14/mm-prepare-pf-disable-discoupling.patch][3.14]]
  m [[file:3.18/mm-prepare-pf-disable-discoupling.patch][3.18]]
  - 4.0
* [   3.0 -   3.18] core: Do not disable interrupts on RT in res_counter.c{C::bug::crash::irq::irq::replace with nort}
  + [[file:3.0/resource-counters-use-localirq-nort.patch][3.0]]
    [[file:3.2/resource-counters-use-localirq-nort.patch][3.2]]
    [[file:3.4/resource-counters-use-localirq-nort.patch][3.4]]
  m [[file:3.6/resource-counters-use-localirq-nort.patch][3.6]]
  M [[file:3.8/resource-counters-use-localirq-nort.patch][3.8]]
    [[file:3.10/resource-counters-use-localirq-nort.patch][3.10]]
    [[file:3.12/resource-counters-use-localirq-nort.patch][3.12]]
    [[file:3.14/resource-counters-use-localirq-nort.patch][3.14]]
    [[file:3.18/resource-counters-use-localirq-nort.patch][3.18]]
  - 4.0
* [   3.0 -   3.18] mm: Fixup all fault handlers to check current->pagefault_disable{C::feature::mm::add check pagefault_disable}
  + [[file:3.0/arch-use-pagefault-disabled.patch][3.0]]
  M [[file:3.2/arch-use-pagefault-disabled.patch][3.2]]
  M [[file:3.4/arch-use-pagefault-disabled.patch][3.4]]
  M [[file:3.6/arch-use-pagefault-disabled.patch][3.6]]
  M [[file:3.8/arch-use-pagefault-disabled.patch][3.8]]
  m [[file:3.10/arch-use-pagefault-disabled.patch][3.10]]
  M [[file:3.12/arch-use-pagefault-disabled.patch][3.12]]
  M [[file:3.14/arch-use-pagefault-disabled.patch][3.14]]
  M [[file:3.18/arch-use-pagefault-disabled.patch][3.18]]
  - 4.0
* [   3.0 -    4.0] migrate-disable-rt-variant.patch{C::maintain::refactor::add dummy fun and macros to control migrate in rt}
  + [[file:3.0/migrate-disable-rt-variant.patch][3.0]]
    [[file:3.2/migrate-disable-rt-variant.patch][3.2]]
    [[file:3.4/migrate-disable-rt-variant.patch][3.4]]
    [[file:3.6/migrate-disable-rt-variant.patch][3.6]]
    [[file:3.8/migrate-disable-rt-variant.patch][3.8]]
  M [[file:3.10/migrate-disable-rt-variant.patch][3.10]]
    [[file:3.12/migrate-disable-rt-variant.patch][3.12]]
    [[file:3.14/migrate-disable-rt-variant.patch][3.14]]
    [[file:3.18/migrate-disable-rt-variant.patch][3.18]]
    [[file:4.0/migrate-disable-rt-variant.patch][4.0]]
  - 4.1
* [   3.0 -    4.0] net-netif_rx_ni-migrate-disable.patch{C::feature::rtsupport::add nort preempt and migrate disable}
  + [[file:3.0/net-netif_rx_ni-migrate-disable.patch][3.0]]
  M [[file:3.2/net-netif_rx_ni-migrate-disable.patch][3.2]]
    [[file:3.4/net-netif_rx_ni-migrate-disable.patch][3.4]]
    [[file:3.6/net-netif_rx_ni-migrate-disable.patch][3.6]]
    [[file:3.8/net-netif_rx_ni-migrate-disable.patch][3.8]]
    [[file:3.10/net-netif_rx_ni-migrate-disable.patch][3.10]]
    [[file:3.12/net-netif_rx_ni-migrate-disable.patch][3.12]]
  m [[file:3.14/net-netif_rx_ni-migrate-disable.patch][3.14]]
    [[file:3.18/net-netif_rx_ni-migrate-disable.patch][3.18]]
    [[file:4.0/net-netif_rx_ni-migrate-disable.patch][4.0]]
  - 4.1
* [   3.0 -    4.0] softirq-thread-do-softirq.patch{C::maintain::refactor::fun wrap}
  + [[file:3.0/softirq-thread-do-softirq.patch][3.0]]
    [[file:3.2/softirq-thread-do-softirq.patch][3.2]]
  m [[file:3.4/softirq-thread-do-softirq.patch][3.4]]
    [[file:3.6/softirq-thread-do-softirq.patch][3.6]]
    [[file:3.8/softirq-thread-do-softirq.patch][3.8]]
    [[file:3.10/softirq-thread-do-softirq.patch][3.10]]
    [[file:3.12/softirq-thread-do-softirq.patch][3.12]]
  m [[file:3.14/softirq-thread-do-softirq.patch][3.14]]
    [[file:3.18/softirq-thread-do-softirq.patch][3.18]]
    [[file:4.0/softirq-thread-do-softirq.patch][4.0]]
  - 4.1
* [   3.0 -    4.0] mm: Remove preempt count from pagefault disable/enable{C::feature::mm::rm preempt count}
  + [[file:3.0/mm-remove-preempt-count-from-pf.patch][3.0]]
  m [[file:3.2/mm-remove-preempt-count-from-pf.patch][3.2]]
    [[file:3.4/mm-remove-preempt-count-from-pf.patch][3.4]]
    [[file:3.6/mm-remove-preempt-count-from-pf.patch][3.6]]
  m [[file:3.8/mm-remove-preempt-count-from-pf.patch][3.8]]
    [[file:3.10/mm-remove-preempt-count-from-pf.patch][3.10]]
    [[file:3.12/mm-remove-preempt-count-from-pf.patch][3.12]]
  M [[file:3.14/mm-remove-preempt-count-from-pf.patch][3.14]]
    [[file:3.18/mm-remove-preempt-count-from-pf.patch][3.18]]
    [[file:4.0/mm-remove-preempt-count-from-pf.patch][4.0]]
  - 4.1
* [   3.0 -    4.0] local-var.patch{C::maintain::refactor::wrap but same name}
  + [[file:3.0/local-var.patch][3.0]]
    [[file:3.2/local-var.patch][3.2]]
    [[file:3.4/local-var.patch][3.4]]
    [[file:3.6/local-var.patch][3.6]]
    [[file:3.8/local-var.patch][3.8]]
    [[file:3.10/local-var.patch][3.10]]
    [[file:3.12/local-var.patch][3.12]]
    [[file:3.14/local-var.patch][3.14]]
  m [[file:3.18/local-var.patch][3.18]]
    [[file:4.0/local-var.patch][4.0]]
  - 4.1
* [   3.0 -    4.0] softirq-split-out-code.patch{C::maintain::refactor::split code out to a new fun}
  + [[file:3.0/softirq-split-out-code.patch][3.0]]
    [[file:3.2/softirq-split-out-code.patch][3.2]]
  m [[file:3.4/softirq-split-out-code.patch][3.4]]
  m [[file:3.6/softirq-split-out-code.patch][3.6]]
  M [[file:3.8/softirq-split-out-code.patch][3.8]]
  m [[file:3.10/softirq-split-out-code.patch][3.10]]
  M [[file:3.12/softirq-split-out-code.patch][3.12]]
  M [[file:3.14/softirq-split-out-code.patch][3.14]]
  M [[file:3.18/softirq-split-out-code.patch][3.18]]
    [[file:4.0/softirq-split-out-code.patch][4.0]]
  - 4.1
* [   3.0 -    4.0] genirq: Disable DEBUG_SHIRQ for rt{C::feature::capability::disable config for rt}
  + [[file:3.0/genirq-nodebug-shirq.patch][3.0]]
    [[file:3.2/genirq-nodebug-shirq.patch][3.2]]
    [[file:3.4/genirq-nodebug-shirq.patch][3.4]]
    [[file:3.6/genirq-nodebug-shirq.patch][3.6]]
    [[file:3.8/genirq-nodebug-shirq.patch][3.8]]
    [[file:3.10/genirq-nodebug-shirq.patch][3.10]]
  M [[file:3.12/genirq-nodebug-shirq.patch][3.12]]
    [[file:3.14/genirq-nodebug-shirq.patch][3.14]]
    [[file:3.18/genirq-nodebug-shirq.patch][3.18]]
    [[file:4.0/genirq-nodebug-shirq.patch][4.0]]
  - 4.1
* [   3.0 -    4.0] mm-page-alloc-use-list-last-entry.patch{C::maintain::refactor::replace with a new fun}
  + [[file:3.0/mm-page-alloc-use-list-last-entry.patch][3.0]]
    [[file:3.2/mm-page-alloc-use-list-last-entry.patch][3.2]]
    [[file:3.4/mm-page-alloc-use-list-last-entry.patch][3.4]]
    [[file:3.6/mm-page-alloc-use-list-last-entry.patch][3.6]]
  m [[file:3.8/mm-page-alloc-use-list-last-entry.patch][3.8]]
    [[file:3.10/mm-page-alloc-use-list-last-entry.patch][3.10]]
    [[file:3.12/mm-page-alloc-use-list-last-entry.patch][3.12]]
    [[file:3.14/mm-page-alloc-use-list-last-entry.patch][3.14]]
    [[file:3.18/mm-page-alloc-use-list-last-entry.patch][3.18]]
    [[file:4.0/mm-page-alloc-use-list-last-entry.patch][4.0]]
  - 4.1
* [   3.0 -    4.0] local-vars-migrate-disable.patch{C::feature::localvar::implement non-rt _cpu_var funs}
  + [[file:3.0/local-vars-migrate-disable.patch][3.0]]
    [[file:3.2/local-vars-migrate-disable.patch][3.2]]
    [[file:3.4/local-vars-migrate-disable.patch][3.4]]
    [[file:3.6/local-vars-migrate-disable.patch][3.6]]
    [[file:3.8/local-vars-migrate-disable.patch][3.8]]
    [[file:3.10/local-vars-migrate-disable.patch][3.10]]
    [[file:3.12/local-vars-migrate-disable.patch][3.12]]
    [[file:3.14/local-vars-migrate-disable.patch][3.14]]
  M [[file:3.18/local-vars-migrate-disable.patch][3.18]]
  M [[file:4.0/local-vars-migrate-disable.patch][4.0]]
  - 4.1
* [   3.0 -    4.0] timer-handle-idle-trylock-in-get-next-timer-irq.patch{C::feature::rtsupport::implement spin_trylock to disable migrate directly}
  + [[file:3.0/timer-handle-idle-trylock-in-get-next-timer-irq.patch][3.0]]
    [[file:3.2/timer-handle-idle-trylock-in-get-next-timer-irq.patch][3.2]]
    [[file:3.4/timer-handle-idle-trylock-in-get-next-timer-irq.patch][3.4]]
  M [[file:3.6/timer-handle-idle-trylock-in-get-next-timer-irq.patch][3.6]]
  M [[file:3.8/timer-handle-idle-trylock-in-get-next-timer-irq.patch][3.8]]
    [[file:3.10/timer-handle-idle-trylock-in-get-next-timer-irq.patch][3.10]]
    [[file:3.12/timer-handle-idle-trylock-in-get-next-timer-irq.patch][3.12]]
    [[file:3.14/timer-handle-idle-trylock-in-get-next-timer-irq.patch][3.14]]
    [[file:3.18/timer-handle-idle-trylock-in-get-next-timer-irq.patch][3.18]]
    [[file:4.0/timer-handle-idle-trylock-in-get-next-timer-irq.patch][4.0]]
  - 4.1
* [   3.0 -    4.0] x86-no-perf-irq-work-rt.patch{C::feature::capability::add rt config and var to record}
  + [[file:3.0/perf-move-irq-work-to-softirq-in-rt.patch][3.0]]
  M [[file:3.2/perf-move-irq-work-to-softirq-in-rt.patch][3.2]]
    [[file:3.4/perf-move-irq-work-to-softirq-in-rt.patch][3.4]]
    [[file:3.6/perf-move-irq-work-to-softirq-in-rt.patch][3.6]]
    [[file:3.8/perf-move-irq-work-to-softirq-in-rt.patch][3.8]]
  M [[file:3.10/perf-move-irq-work-to-softirq-in-rt.patch][3.10]]
  m [[file:3.12/perf-move-irq-work-to-softirq-in-rt.patch][3.12]]
  m [[file:3.14/perf-move-irq-work-to-softirq-in-rt.patch][3.14]]
  M [[file:3.18/perf-move-irq-work-to-softirq-in-rt.patch][3.18]]
  m [[file:4.0/perf-move-irq-work-to-softirq-in-rt.patch][4.0]]
  - 4.1
* [   3.0 -    4.0] mips-enable-interrupts-in-signal.patch{C::feature::signal::enable irq in signal}
  + [[file:3.0/mips-enable-interrupts-in-signal.patch][3.0]]
    [[file:3.2/mips-enable-interrupts-in-signal.patch][3.2]]
    [[file:3.4/mips-enable-interrupts-in-signal.patch][3.4]]
  M [[file:3.6/mips-enable-interrupts-in-signal.patch][3.6]]
    [[file:3.8/mips-enable-interrupts-in-signal.patch][3.8]]
    [[file:3.10/mips-enable-interrupts-in-signal.patch][3.10]]
  m [[file:3.12/mips-enable-interrupts-in-signal.patch][3.12]]
    [[file:3.14/mips-enable-interrupts-in-signal.patch][3.14]]
    [[file:3.18/mips-enable-interrupts-in-signal.patch][3.18]]
    [[file:4.0/mips-enable-interrupts-in-signal.patch][4.0]]
  - 4.1
* [   3.0 -    4.0] softirq-make-fifo.patch{C::feature::sched::add fun to manage sched para}
  + [[file:3.0/softirq-make-fifo.patch][3.0]]
    [[file:3.2/softirq-make-fifo.patch][3.2]]
    [[file:3.4/softirq-make-fifo.patch][3.4]]
    [[file:3.6/softirq-make-fifo.patch][3.6]]
  M [[file:3.8/softirq-make-fifo.patch][3.8]]
    [[file:3.10/softirq-make-fifo.patch][3.10]]
    [[file:3.12/softirq-make-fifo.patch][3.12]]
    [[file:3.14/softirq-make-fifo.patch][3.14]]
    [[file:3.18/softirq-make-fifo.patch][3.18]]
    [[file:4.0/softirq-make-fifo.patch][4.0]]
  - 4.1
* [   3.0 -    4.0] softirq: Sanitize softirq pending for NOHZ/RT{C::feature::rtsupport::check warnpending in softirq}
  + [[file:3.0/softirq-sanitize-softirq-pending.patch][3.0]]
  M [[file:3.2/softirq-sanitize-softirq-pending.patch][3.2]]
  m [[file:3.4/softirq-sanitize-softirq-pending.patch][3.4]]
  m [[file:3.6/softirq-sanitize-softirq-pending.patch][3.6]]
  M [[file:3.8/softirq-sanitize-softirq-pending.patch][3.8]]
  M [[file:3.10/softirq-sanitize-softirq-pending.patch][3.10]]
  M [[file:3.12/softirq-sanitize-softirq-pending.patch][3.12]]
  m [[file:3.14/softirq-sanitize-softirq-pending.patch][3.14]]
    [[file:3.18/softirq-sanitize-softirq-pending.patch][3.18]]
  M [[file:4.0/softirq-sanitize-softirq-pending.patch][4.0]]
  - 4.1
* [   3.0 -    4.0] rt-add-rt-to-mutex-headers.patch{C::feature::rtsupport::add rt mutex macros}
  + [[file:3.0/rt-add-rt-to-mutex-headers.patch][3.0]]
  M [[file:3.2/rt-add-rt-to-mutex-headers.patch][3.2]]
    [[file:3.4/rt-add-rt-to-mutex-headers.patch][3.4]]
    [[file:3.6/rt-add-rt-to-mutex-headers.patch][3.6]]
    [[file:3.8/rt-add-rt-to-mutex-headers.patch][3.8]]
    [[file:3.10/rt-add-rt-to-mutex-headers.patch][3.10]]
  m [[file:3.12/rt-add-rt-to-mutex-headers.patch][3.12]]
    [[file:3.14/rt-add-rt-to-mutex-headers.patch][3.14]]
  M [[file:3.18/rt-add-rt-to-mutex-headers.patch][3.18]]
    [[file:4.0/rt-add-rt-to-mutex-headers.patch][4.0]]
  - 4.1
* [   3.0 -    4.0] rwsem-add-rt-variant.patch{C::feature::rtsupport::implement rt rd sem}
  + [[file:3.0/rwsem-add-rt-variant.patch][3.0]]
  M [[file:3.2/rwsem-add-rt-variant.patch][3.2]]
  m [[file:3.4/rwsem-add-rt-variant.patch][3.4]]
    [[file:3.6/rwsem-add-rt-variant.patch][3.6]]
  m [[file:3.8/rwsem-add-rt-variant.patch][3.8]]
  m [[file:3.10/rwsem-add-rt-variant.patch][3.10]]
    [[file:3.12/rwsem-add-rt-variant.patch][3.12]]
  m [[file:3.14/rwsem-add-rt-variant.patch][3.14]]
  m [[file:3.18/rwsem-add-rt-variant.patch][3.18]]
    [[file:4.0/rwsem-add-rt-variant.patch][4.0]]
  - 4.1
* [   3.0 -    4.0] rt-mutex-add-sleeping-spinlocks-support.patch{C::feature::rtsupport::implement rt spinlock, rt fast/slow lock}
  + [[file:3.0/rt-mutex-add-sleeping-spinlocks-support.patch][3.0]]
  M [[file:3.2/rt-mutex-add-sleeping-spinlocks-support.patch][3.2]]
  M [[file:3.4/rt-mutex-add-sleeping-spinlocks-support.patch][3.4]]
    [[file:3.6/rt-mutex-add-sleeping-spinlocks-support.patch][3.6]]
    [[file:3.8/rt-mutex-add-sleeping-spinlocks-support.patch][3.8]]
    [[file:3.10/rt-mutex-add-sleeping-spinlocks-support.patch][3.10]]
  M [[file:3.12/rt-mutex-add-sleeping-spinlocks-support.patch][3.12]]
  M [[file:3.14/rt-mutex-add-sleeping-spinlocks-support.patch][3.14]]
  M [[file:3.18/rt-mutex-add-sleeping-spinlocks-support.patch][3.18]]
  M [[file:4.0/rt-mutex-add-sleeping-spinlocks-support.patch][4.0]]
  - 4.1
* [   3.0 -    4.0] sched-migrate-disable.patch{C::feature::sched&rtsupport::implement migrate disable}
  + [[file:3.0/sched-migrate-disable.patch][3.0]]
  m [[file:3.2/sched-migrate-disable.patch][3.2]]
  M [[file:3.4/sched-migrate-disable.patch][3.4]]
  M [[file:3.6/sched-migrate-disable.patch][3.6]]
  m [[file:3.8/sched-migrate-disable.patch][3.8]]
  M [[file:3.10/sched-migrate-disable.patch][3.10]]
    [[file:3.12/sched-migrate-disable.patch][3.12]]
  m [[file:3.14/sched-migrate-disable.patch][3.14]]
  M [[file:3.18/sched-migrate-disable.patch][3.18]]
  M [[file:4.0/sched-migrate-disable.patch][4.0]]
  - 4.1
* [   3.0 -    4.0] rt-add-rt-spinlocks.patch{C::feature::rtsupport::add rt spinlock macros, rt rwlock}
  + [[file:3.0/rt-add-rt-spinlock-to-headers.patch][3.0]]
    [[file:3.2/rt-add-rt-spinlock-to-headers.patch][3.2]]
    [[file:3.4/rt-add-rt-spinlock-to-headers.patch][3.4]]
    [[file:3.6/rt-add-rt-spinlock-to-headers.patch][3.6]]
    [[file:3.8/rt-add-rt-spinlock-to-headers.patch][3.8]]
    [[file:3.10/rt-add-rt-spinlock-to-headers.patch][3.10]]
    [[file:3.12/rt-add-rt-spinlock-to-headers.patch][3.12]]
    [[file:3.14/rt-add-rt-spinlock-to-headers.patch][3.14]]
    [[file:3.18/rt-add-rt-spinlock-to-headers.patch][3.18]]
    [[file:4.0/rt-add-rt-spinlock-to-headers.patch][4.0]]
  - 4.1
* [   3.0 -    4.0] rwsem-inlcude-fix.patch{C::maintain::refactor::add header file}
  + [[file:3.0/pid-h-include-atomic-h.patch][3.0]]
    [[file:3.2/pid-h-include-atomic-h.patch][3.2]]
    [[file:3.4/pid-h-include-atomic-h.patch][3.4]]
    [[file:3.6/pid-h-include-atomic-h.patch][3.6]]
    [[file:3.8/pid-h-include-atomic-h.patch][3.8]]
    [[file:3.10/pid-h-include-atomic-h.patch][3.10]]
    [[file:3.12/pid-h-include-atomic-h.patch][3.12]]
    [[file:3.14/pid-h-include-atomic-h.patch][3.14]]
    [[file:3.18/pid-h-include-atomic-h.patch][3.18]]
    [[file:4.0/pid-h-include-atomic-h.patch][4.0]]
  - 4.1
* [   3.0 -    4.0] mm-page-alloc-fix.patch{C::feature::rtsupport::replace with _light}
  + [[file:3.0/mm-page-alloc-fix.patch][3.0]]
    [[file:3.2/mm-page-alloc-fix.patch][3.2]]
    [[file:3.4/mm-page-alloc-fix.patch][3.4]]
    [[file:3.6/mm-page-alloc-fix.patch][3.6]]
  m [[file:3.8/mm-page-alloc-fix.patch][3.8]]
    [[file:3.10/mm-page-alloc-fix.patch][3.10]]
    [[file:3.12/mm-page-alloc-fix.patch][3.12]]
    [[file:3.14/mm-page-alloc-fix.patch][3.14]]
  M [[file:3.18/mm-page-alloc-fix.patch][3.18]]
    [[file:4.0/mm-page-alloc-fix.patch][4.0]]
  - 4.1
* [   3.0 -    4.0] cpu-rt-variants.patch{C::feature::rtsupport::_light fun to disable migrate in rt}
  + [[file:3.0/cpu-rt-variants.patch][3.0]]
    [[file:3.2/cpu-rt-variants.patch][3.2]]
    [[file:3.4/cpu-rt-variants.patch][3.4]]
    [[file:3.6/cpu-rt-variants.patch][3.6]]
    [[file:3.8/cpu-rt-variants.patch][3.8]]
    [[file:3.10/cpu-rt-variants.patch][3.10]]
    [[file:3.12/cpu-rt-variants.patch][3.12]]
    [[file:3.14/cpu-rt-variants.patch][3.14]]
    [[file:3.18/cpu-rt-variants.patch][3.18]]
    [[file:4.0/cpu-rt-variants.patch][4.0]]
  - 4.1
* [   3.0 -    4.0] softirq-local-lock.patch{C::feature::rtsupport::add softirq in rt, softirq cnt, local_bh with rt-softirq
  + [[file:3.0/softirq-local-lock.patch][3.0]]
  M [[file:3.2/softirq-local-lock.patch][3.2]]
  M [[file:3.4/softirq-local-lock.patch][3.4]]
    [[file:3.6/softirq-local-lock.patch][3.6]]
  m [[file:3.8/softirq-local-lock.patch][3.8]]
  M [[file:3.10/softirq-local-lock.patch][3.10]]
  M [[file:3.12/softirq-local-lock.patch][3.12]]
  M [[file:3.14/softirq-local-lock.patch][3.14]]
  m [[file:3.18/softirq-local-lock.patch][3.18]]
  M [[file:4.0/softirq-local-lock.patch][4.0]]
  - 4.1
* [   3.0 -    4.0] arm-disable-highmem-on-rt.patch{C::feature::capability::disable preempt_rt in highmem}
  + [[file:3.0/arm-disable-highmem-on-rt.patch][3.0]]
    [[file:3.2/arm-disable-highmem-on-rt.patch][3.2]]
    [[file:3.4/arm-disable-highmem-on-rt.patch][3.4]]
    [[file:3.6/arm-disable-highmem-on-rt.patch][3.6]]
    [[file:3.8/arm-disable-highmem-on-rt.patch][3.8]]
    [[file:3.10/arm-disable-highmem-on-rt.patch][3.10]]
    [[file:3.12/arm-disable-highmem-on-rt.patch][3.12]]
    [[file:3.14/arm-disable-highmem-on-rt.patch][3.14]]
    [[file:3.18/arm-disable-highmem-on-rt.patch][3.18]]
    [[file:4.0/arm-disable-highmem-on-rt.patch][4.0]]
  - 4.1
* [   3.0 -    4.1] ipc: Make the ipc code -rt aware{C::feature::rtsupport::disable preempt in some codes}
  + [[file:3.0/ipc-make-rt-aware.patch][3.0]]
    [[file:3.2/ipc-make-rt-aware.patch][3.2]]
    [[file:3.4/ipc-make-rt-aware.patch][3.4]]
    [[file:3.6/ipc-make-rt-aware.patch][3.6]]
    [[file:3.8/ipc-make-rt-aware.patch][3.8]]
  m [[file:3.10/ipc-make-rt-aware.patch][3.10]]
    [[file:3.12/ipc-make-rt-aware.patch][3.12]]
  M [[file:3.14/ipc-make-rt-aware.patch][3.14]]
    [[file:3.18/ipc-make-rt-aware.patch][3.18]]
    [[file:4.0/ipc-make-rt-aware.patch][4.0]]
  M [[file:4.1/ipc-make-rt-aware.patch][4.1]]
  - 4.4
* [   3.0 -    4.6] timers: Avoid the switch timers base set to NULL trick on RT{C::bug::hang?::irq::semantics::try new lock first to avoid return NULL}
  + [[file:3.0/timers-avoid-the-base-null-otptimization-on-rt.patch][3.0]]
    [[file:3.2/timers-avoid-the-base-null-otptimization-on-rt.patch][3.2]]
    [[file:3.4/timers-avoid-the-base-null-otptimization-on-rt.patch][3.4]]
    [[file:3.6/timers-avoid-the-base-null-otptimization-on-rt.patch][3.6]]
    [[file:3.8/timers-avoid-the-base-null-otptimization-on-rt.patch][3.8]]
    [[file:3.10/timers-avoid-the-base-null-otptimization-on-rt.patch][3.10]]
    [[file:3.12/timers-avoid-the-base-null-otptimization-on-rt.patch][3.12]]
    [[file:3.14/timers-avoid-the-base-null-otptimization-on-rt.patch][3.14]]
    [[file:3.18/timers-avoid-the-base-null-otptimization-on-rt.patch][3.18]]
    [[file:4.0/timers-avoid-the-base-null-otptimization-on-rt.patch][4.0]]
    [[file:4.1/timers-avoid-the-base-null-otptimization-on-rt.patch][4.1]]
  M [[file:4.4/timers-avoid-the-base-null-otptimization-on-rt.patch][4.4]]
    [[file:4.6/timers-avoid-the-base-null-otptimization-on-rt.patch][4.6]]
  - 4.8
* [   3.0 -    4.6] timers: Preempt-rt support{C::feature::rtsupport::check trylock, if unsucceed, return expires in 1 ticks}
  + [[file:3.0/timers-preempt-rt-support.patch][3.0]]
    [[file:3.2/timers-preempt-rt-support.patch][3.2]]
    [[file:3.4/timers-preempt-rt-support.patch][3.4]]
  M [[file:3.6/timers-preempt-rt-support.patch][3.6]]
    [[file:3.8/timers-preempt-rt-support.patch][3.8]]
    [[file:3.10/timers-preempt-rt-support.patch][3.10]]
    [[file:3.12/timers-preempt-rt-support.patch][3.12]]
    [[file:3.14/timers-preempt-rt-support.patch][3.14]]
    [[file:3.18/timers-preempt-rt-support.patch][3.18]]
    [[file:4.0/timers-preempt-rt-support.patch][4.0]]
  M [[file:4.1/timers-preempt-rt-support.patch][4.1]]
  M [[file:4.4/timers-preempt-rt-support.patch][4.4]]
  M [[file:4.6/timers-preempt-rt-support.patch][4.6]]
  - 4.8
* [   3.0 -    4.6] drivers/net: fix livelock issues{C::bug::livelock::livelock::semantics::rm NETDEV_TX_LOCKED macro optimization}
  + [[file:3.0/drivers-net-fix-livelock-issues.patch][3.0]]
  M [[file:3.2/drivers-net-fix-livelock-issues.patch][3.2]]
  m [[file:3.4/drivers-net-fix-livelock-issues.patch][3.4]]
  m [[file:3.6/drivers-net-fix-livelock-issues.patch][3.6]]
  m [[file:3.8/drivers-net-fix-livelock-issues.patch][3.8]]
    [[file:3.10/drivers-net-fix-livelock-issues.patch][3.10]]
    [[file:3.12/drivers-net-fix-livelock-issues.patch][3.12]]
    [[file:3.14/drivers-net-fix-livelock-issues.patch][3.14]]
    [[file:3.18/drivers-net-fix-livelock-issues.patch][3.18]]
    [[file:4.0/drivers-net-fix-livelock-issues.patch][4.0]]
    [[file:4.1/drivers-net-fix-livelock-issues.patch][4.1]]
    [[file:4.4/drivers-net-fix-livelock-issues.patch][4.4]]
    [[file:4.6/drivers-net-fix-livelock-issues.patch][4.6]]
  - 4.8
* [   3.0 -    4.8] hwlatdetect.patch{C::feature::hwlat detector}
  + [[file:3.0/hwlatdetect.patch][3.0]]
  m [[file:3.2/hwlatdetect.patch][3.2]]
  m [[file:3.4/hwlatdetect.patch][3.4]]
  M [[file:3.6/hwlatdetect.patch][3.6]]
    [[file:3.8/hwlatdetect.patch][3.8]]
  m [[file:3.10/hwlatdetect.patch][3.10]]
    [[file:3.12/hwlatdetect.patch][3.12]]
  m [[file:3.14/hwlatdetect.patch][3.14]]
    [[file:3.18/hwlatdetect.patch][3.18]]
    [[file:4.0/hwlatdetect.patch][4.0]]
    [[file:4.1/hwlatdetect.patch][4.1]]
    [[file:4.4/hwlatdetect.patch][4.4]]
    [[file:4.6/hwlatdetect.patch][4.6]]
    [[file:4.8/hwlatdetect.patch][4.8]]
  - 4.9
* [   3.0 -    4.8] lglocks: Provide a RT safe variant{C::feature::rtsupport::implement lglock(name##_lock?)}
  + [[file:3.0/lglocks-rt.patch][3.0]]
  m [[file:3.2/lglocks-rt.patch][3.2]]
    [[file:3.4/lglocks-rt.patch][3.4]]
  M [[file:3.6/lglocks-rt.patch][3.6]]
  M [[file:3.8/lglocks-rt.patch][3.8]]
    [[file:3.10/lglocks-rt.patch][3.10]]
  m [[file:3.12/lglocks-rt.patch][3.12]]
  M [[file:3.14/lglocks-rt.patch][3.14]]
    [[file:3.18/lglocks-rt.patch][3.18]]
    [[file:4.0/lglocks-rt.patch][4.0]]
    [[file:4.1/lglocks-rt.patch][4.1]]
  M [[file:4.4/lglocks-rt.patch][4.4]]
    [[file:4.6/lglocks-rt.patch][4.6]]
  M [[file:4.8/lglocks-rt.patch][4.8]]
  - 4.9
* [   3.0 -   4.11] net-flip-lock-dep-thingy.patch{{C::bug::deadlock::deadlock::mutex::replace with _bh}
  + [[file:3.0/net-flip-lock-dep-thingy.patch][3.0]]
    [[file:3.2/net-flip-lock-dep-thingy.patch][3.2]]
    [[file:3.4/net-flip-lock-dep-thingy.patch][3.4]]
    [[file:3.6/net-flip-lock-dep-thingy.patch][3.6]]
    [[file:3.8/net-flip-lock-dep-thingy.patch][3.8]]
    [[file:3.10/net-flip-lock-dep-thingy.patch][3.10]]
    [[file:3.12/net-flip-lock-dep-thingy.patch][3.12]]
    [[file:3.14/net-flip-lock-dep-thingy.patch][3.14]]
    [[file:3.18/net-flip-lock-dep-thingy.patch][3.18]]
    [[file:4.0/net-flip-lock-dep-thingy.patch][4.0]]
    [[file:4.1/net-prevent-abba-deadlock.patch][4.1]]
    [[file:4.4/net-prevent-abba-deadlock.patch][4.4]]
    [[file:4.6/net-prevent-abba-deadlock.patch][4.6]]
    [[file:4.8/net-prevent-abba-deadlock.patch][4.8]]
    [[file:4.9/net-prevent-abba-deadlock.patch][4.9]]
    [[file:4.11/net-prevent-abba-deadlock.patch][4.11]]
* [   3.0 -   4.11] stop_machine: Use raw spinlocks{C::feature::rtsupport::implement fun, replace with raw, enclose with irq_disable}
  + [[file:3.0/stomp-machine-raw-lock.patch][3.0]]
  M [[file:3.2/stomp-machine-raw-lock.patch][3.2]]
    [[file:3.4/stomp-machine-raw-lock.patch][3.4]]
    [[file:3.6/stomp-machine-raw-lock.patch][3.6]]
    [[file:3.8/stomp-machine-raw-lock.patch][3.8]]
  M [[file:3.10/stomp-machine-raw-lock.patch][3.10]]
    [[file:3.12/stomp-machine-raw-lock.patch][3.12]]
  M [[file:3.14/stomp-machine-raw-lock.patch][3.14]]
  M [[file:3.18/stomp-machine-raw-lock.patch][3.18]]
    [[file:4.0/stomp-machine-raw-lock.patch][4.0]]
    [[file:4.1/stop-machine-raw-lock.patch][4.1]]
  M [[file:4.4/stop-machine-raw-lock.patch][4.4]]
  M [[file:4.6/stop-machine-raw-lock.patch][4.6]]
    [[file:4.8/stop-machine-raw-lock.patch][4.8]]
  M [[file:4.9/stop-machine-raw-lock.patch][4.9]]
    [[file:4.11/stop-machine-raw-lock.patch][4.11]]
* [   3.0 -   4.11] sched: Move mmdrop to RCU on RT{C::feature::sched::implement mmdrop_delay in rt}
  + [[file:3.0/sched-mmdrop-delayed.patch][3.0]]
    [[file:3.2/sched-mmdrop-delayed.patch][3.2]]
  m [[file:3.4/sched-mmdrop-delayed.patch][3.4]]
  m [[file:3.6/sched-mmdrop-delayed.patch][3.6]]
  M [[file:3.8/sched-mmdrop-delayed.patch][3.8]]
  m [[file:3.10/sched-mmdrop-delayed.patch][3.10]]
    [[file:3.12/sched-mmdrop-delayed.patch][3.12]]
  m [[file:3.14/sched-mmdrop-delayed.patch][3.14]]
  m [[file:3.18/sched-mmdrop-delayed.patch][3.18]]
  m [[file:4.0/sched-mmdrop-delayed.patch][4.0]]
    [[file:4.1/sched-mmdrop-delayed.patch][4.1]]
  m [[file:4.4/sched-mmdrop-delayed.patch][4.4]]
    [[file:4.6/sched-mmdrop-delayed.patch][4.6]]
  M [[file:4.8/sched-mmdrop-delayed.patch][4.8]]
  M [[file:4.9/sched-mmdrop-delayed.patch][4.9]]
  m [[file:4.11/sched-mmdrop-delayed.patch][4.11]]
* [   3.0 -   4.11] mm/vmalloc: Another preempt disable region which sucks{C::feature::rtsupport::replace with _light}
  + [[file:3.0/mm-vmalloc-use-get-cpu-light.patch][3.0]]
    [[file:3.2/mm-vmalloc-use-get-cpu-light.patch][3.2]]
    [[file:3.4/mm-vmalloc-use-get-cpu-light.patch][3.4]]
    [[file:3.6/mm-vmalloc-use-get-cpu-light.patch][3.6]]
    [[file:3.8/mm-vmalloc-use-get-cpu-light.patch][3.8]]
    [[file:3.10/mm-vmalloc-use-get-cpu-light.patch][3.10]]
  M [[file:3.12/mm-vmalloc-use-get-cpu-light.patch][3.12]]
    [[file:3.14/mm-vmalloc-use-get-cpu-light.patch][3.14]]
    [[file:3.18/mm-vmalloc-use-get-cpu-light.patch][3.18]]
  M [[file:4.0/mm-vmalloc-use-get-cpu-light.patch][4.0]]
  M [[file:4.1/mm-vmalloc-use-get-cpu-light.patch][4.1]]
  m [[file:4.4/mm-vmalloc-use-get-cpu-light.patch][4.4]]
    [[file:4.6/mm-vmalloc-use-get-cpu-light.patch][4.6]]
    [[file:4.8/mm-vmalloc-use-get-cpu-light.patch][4.8]]
    [[file:4.9/mm-vmalloc-use-get-cpu-light.patch][4.9]]
    [[file:4.11/mm-vmalloc-use-get-cpu-light.patch][4.11]]
* [   3.0 -   4.11] printk: Add a printk kill switch{C::feature::console::printk kill switch}
  + [[file:3.0/printk-kill.patch][3.0]]
  M [[file:3.2/printk-kill.patch][3.2]]
  M [[file:3.4/printk-kill.patch][3.4]]
  m [[file:3.6/printk-kill.patch][3.6]]
  m [[file:3.8/printk-kill.patch][3.8]]
  M [[file:3.10/printk-kill.patch][3.10]]
    [[file:3.12/printk-kill.patch][3.12]]
    [[file:3.14/printk-kill.patch][3.14]]
  M [[file:3.18/printk-kill.patch][3.18]]
  M [[file:4.0/printk-kill.patch][4.0]]
    [[file:4.1/printk-kill.patch][4.1]]
  M [[file:4.4/printk-kill.patch][4.4]]
  M [[file:4.6/printk-kill.patch][4.6]]
  m [[file:4.8/printk-kill.patch][4.8]]
    [[file:4.9/printk-kill.patch][4.9]]
  m [[file:4.11/printk-kill.patch][4.11]]
* [   3.0 -   4.11] net: sysrq via icmp{C::feature::sysrq::enable sysrq to rcmp}
  + [[file:3.0/ping-sysrq.patch][3.0]]
    [[file:3.2/ping-sysrq.patch][3.2]]
    [[file:3.4/ping-sysrq.patch][3.4]]
  M [[file:3.6/ping-sysrq.patch][3.6]]
    [[file:3.8/ping-sysrq.patch][3.8]]
    [[file:3.10/ping-sysrq.patch][3.10]]
    [[file:3.12/ping-sysrq.patch][3.12]]
    [[file:3.14/ping-sysrq.patch][3.14]]
    [[file:3.18/ping-sysrq.patch][3.18]]
  m [[file:4.0/ping-sysrq.patch][4.0]]
    [[file:4.1/ping-sysrq.patch][4.1]]
    [[file:4.4/ping-sysrq.patch][4.4]]
    [[file:4.6/ping-sysrq.patch][4.6]]
    [[file:4.8/ping-sysrq.patch][4.8]]
    [[file:4.9/ping-sysrq.patch][4.9]]
  M [[file:4.11/ping-sysrq.patch][4.11]]
* [   3.0 -   4.11] preempt: Provide preempt_*_(no)rt variants{C::feature::rtsupport::disable preempt impl in rt}
  + [[file:3.0/preempt-nort-rt-variants.patch][3.0]]
  M [[file:3.2/preempt-nort-rt-variants.patch][3.2]]
  M [[file:3.4/preempt-nort-rt-variants.patch][3.4]]
    [[file:3.6/preempt-nort-rt-variants.patch][3.6]]
    [[file:3.8/preempt-nort-rt-variants.patch][3.8]]
  M [[file:3.10/preempt-nort-rt-variants.patch][3.10]]
    [[file:3.12/preempt-nort-rt-variants.patch][3.12]]
  M [[file:3.14/preempt-nort-rt-variants.patch][3.14]]
    [[file:3.18/preempt-nort-rt-variants.patch][3.18]]
    [[file:4.0/preempt-nort-rt-variants.patch][4.0]]
    [[file:4.1/preempt-nort-rt-variants.patch][4.1]]
  m [[file:4.4/preempt-nort-rt-variants.patch][4.4]]
    [[file:4.6/preempt-nort-rt-variants.patch][4.6]]
    [[file:4.8/preempt-nort-rt-variants.patch][4.8]]
    [[file:4.9/preempt-nort-rt-variants.patch][4.9]]
    [[file:4.11/preempt-nort-rt-variants.patch][4.11]]
* [   3.0 -   4.11] hotplug: Use migrate disable on unplug{C::performance::preempt::replace preempt disable with migrate disable}
  + [[file:3.0/hotplug-use-migrate-disable.patch][3.0]]
    [[file:3.2/hotplug-use-migrate-disable.patch][3.2]]
    [[file:3.4/hotplug-use-migrate-disable.patch][3.4]]
    [[file:3.6/hotplug-use-migrate-disable.patch][3.6]]
    [[file:3.8/hotplug-use-migrate-disable.patch][3.8]]
    [[file:3.10/hotplug-use-migrate-disable.patch][3.10]]
    [[file:3.12/hotplug-use-migrate-disable.patch][3.12]]
  m [[file:3.14/hotplug-use-migrate-disable.patch][3.14]]
    [[file:3.18/hotplug-use-migrate-disable.patch][3.18]]
    [[file:4.0/hotplug-use-migrate-disable.patch][4.0]]
    [[file:4.1/hotplug-use-migrate-disable.patch][4.1]]
    [[file:4.4/hotplug-use-migrate-disable.patch][4.4]]
  m [[file:4.6/hotplug-use-migrate-disable.patch][4.6]]
    [[file:4.8/hotplug-use-migrate-disable.patch][4.8]]
    [[file:4.9/hotplug-use-migrate-disable.patch][4.9]]
  m [[file:4.11/hotplug-use-migrate-disable.patch][4.11]]
* [   3.0 -   4.11] fs: jbd/jbd2: Make state lock and journal head lock rt safe{C::feature::rtsupport::use bit_ spinlk in preempt_rt_base}
  + [[file:3.0/fs-jbd-replace-bh_state-lock.patch][3.0]]
    [[file:3.2/fs-jbd-replace-bh_state-lock.patch][3.2]]
    [[file:3.4/fs-jbd-replace-bh_state-lock.patch][3.4]]
    [[file:3.6/fs-jbd-replace-bh_state-lock.patch][3.6]]
    [[file:3.8/fs-jbd-replace-bh_state-lock.patch][3.8]]
    [[file:3.10/fs-jbd-replace-bh_state-lock.patch][3.10]]
    [[file:3.12/fs-jbd-replace-bh_state-lock.patch][3.12]]
  M [[file:3.14/fs-jbd-replace-bh_state-lock.patch][3.14]]
    [[file:3.18/fs-jbd-replace-bh_state-lock.patch][3.18]]
    [[file:4.0/fs-jbd-replace-bh_state-lock.patch][4.0]]
    [[file:4.1/fs-jbd-replace-bh_state-lock.patch][4.1]]
  M [[file:4.4/fs-jbd-replace-bh_state-lock.patch][4.4]]
    [[file:4.6/fs-jbd-replace-bh_state-lock.patch][4.6]]
    [[file:4.8/fs-jbd-replace-bh_state-lock.patch][4.8]]
    [[file:4.9/fs-jbd-replace-bh_state-lock.patch][4.9]]
    [[file:4.11/fs-jbd-replace-bh_state-lock.patch][4.11]]
* [   3.0 -   4.11] rt: local_irq_* variants depending on RT/!RT{C::feature::rtsupport::add nort variant to disable irq explicitly}
  + [[file:3.0/local-irq-rt-depending-variants.patch][3.0]]
    [[file:3.2/local-irq-rt-depending-variants.patch][3.2]]
    [[file:3.4/local-irq-rt-depending-variants.patch][3.4]]
    [[file:3.6/local-irq-rt-depending-variants.patch][3.6]]
    [[file:3.8/local-irq-rt-depending-variants.patch][3.8]]
    [[file:3.10/local-irq-rt-depending-variants.patch][3.10]]
    [[file:3.12/local-irq-rt-depending-variants.patch][3.12]]
  M [[file:3.14/local-irq-rt-depending-variants.patch][3.14]]
    [[file:3.18/local-irq-rt-depending-variants.patch][3.18]]
    [[file:4.0/local-irq-rt-depending-variants.patch][4.0]]
  m [[file:4.1/local-irq-rt-depending-variants.patch][4.1]]
    [[file:4.4/local-irq-rt-depending-variants.patch][4.4]]
    [[file:4.6/local-irq-rt-depending-variants.patch][4.6]]
    [[file:4.8/local-irq-rt-depending-variants.patch][4.8]]
    [[file:4.9/local-irq-rt-depending-variants.patch][4.9]]
    [[file:4.11/local-irq-rt-depending-variants.patch][4.11]]
* [   3.0 -   4.11] genirq: Disable irqpoll on -rt{C::performance::irq::disable irqpoll in rt, instead, printk warning and return}
  + [[file:3.0/genirq-disable-irqpoll-on-rt.patch][3.0]]
    [[file:3.2/genirq-disable-irqpoll-on-rt.patch][3.2]]
    [[file:3.4/genirq-disable-irqpoll-on-rt.patch][3.4]]
    [[file:3.6/genirq-disable-irqpoll-on-rt.patch][3.6]]
  M [[file:3.8/genirq-disable-irqpoll-on-rt.patch][3.8]]
    [[file:3.10/genirq-disable-irqpoll-on-rt.patch][3.10]]
    [[file:3.12/genirq-disable-irqpoll-on-rt.patch][3.12]]
  M [[file:3.14/genirq-disable-irqpoll-on-rt.patch][3.14]]
    [[file:3.18/genirq-disable-irqpoll-on-rt.patch][3.18]]
    [[file:4.0/genirq-disable-irqpoll-on-rt.patch][4.0]]
    [[file:4.1/genirq-disable-irqpoll-on-rt.patch][4.1]]
    [[file:4.4/genirq-disable-irqpoll-on-rt.patch][4.4]]
    [[file:4.6/genirq-disable-irqpoll-on-rt.patch][4.6]]
    [[file:4.8/genirq-disable-irqpoll-on-rt.patch][4.8]]
    [[file:4.9/genirq-disable-irqpoll-on-rt.patch][4.9]]
    [[file:4.11/genirq-disable-irqpoll-on-rt.patch][4.11]]
* [   3.0 -   4.11] sched: Limit the number of task migrations per batch{C::performance::irq::limit the number of thread to interate in a single balance run, decrease irq disable}
  + [[file:3.0/sched-limit-nr-migrate.patch][3.0]]
    [[file:3.2/sched-limit-nr-migrate.patch][3.2]]
    [[file:3.4/sched-limit-nr-migrate.patch][3.4]]
    [[file:3.6/sched-limit-nr-migrate.patch][3.6]]
    [[file:3.8/sched-limit-nr-migrate.patch][3.8]]
    [[file:3.10/sched-limit-nr-migrate.patch][3.10]]
    [[file:3.12/sched-limit-nr-migrate.patch][3.12]]
    [[file:3.14/sched-limit-nr-migrate.patch][3.14]]
    [[file:3.18/sched-limit-nr-migrate.patch][3.18]]
    [[file:4.0/sched-limit-nr-migrate.patch][4.0]]
    [[file:4.1/sched-limit-nr-migrate.patch][4.1]]
    [[file:4.4/sched-limit-nr-migrate.patch][4.4]]
    [[file:4.6/sched-limit-nr-migrate.patch][4.6]]
    [[file:4.8/sched-limit-nr-migrate.patch][4.8]]
    [[file:4.9/sched-limit-nr-migrate.patch][4.9]]
    [[file:4.11/sched-limit-nr-migrate.patch][4.11]]
* [   3.0 -   4.11] suspend: Prevent might sleep splats{C::bug::crash::irq::semantics::not a fixup, but a way to block mightsleep warning}
  + [[file:3.0/suspend-prevernt-might-sleep-splats.patch][3.0]]
  m [[file:3.2/suspend-prevernt-might-sleep-splats.patch][3.2]]
    [[file:3.4/suspend-prevernt-might-sleep-splats.patch][3.4]]
  M [[file:3.6/suspend-prevernt-might-sleep-splats.patch][3.6]]
    [[file:3.8/suspend-prevernt-might-sleep-splats.patch][3.8]]
    [[file:3.10/suspend-prevernt-might-sleep-splats.patch][3.10]]
    [[file:3.12/suspend-prevernt-might-sleep-splats.patch][3.12]]
    [[file:3.14/suspend-prevernt-might-sleep-splats.patch][3.14]]
    [[file:3.18/suspend-prevernt-might-sleep-splats.patch][3.18]]
    [[file:4.0/suspend-prevernt-might-sleep-splats.patch][4.0]]
    [[file:4.1/suspend-prevernt-might-sleep-splats.patch][4.1]]
  m [[file:4.4/suspend-prevernt-might-sleep-splats.patch][4.4]]
    [[file:4.6/suspend-prevernt-might-sleep-splats.patch][4.6]]
    [[file:4.8/suspend-prevernt-might-sleep-splats.patch][4.8]]
    [[file:4.9/suspend-prevernt-might-sleep-splats.patch][4.9]]
  m [[file:4.11/suspend-prevernt-might-sleep-splats.patch][4.11]]
* [   3.0 -   4.11] bug: BUG_ON/WARN_ON variants dependend on RT/!RT{C::feature::rtsupport::rt dependent bug/warn_on}
  + [[file:3.0/bug-rt-dependend-variants.patch][3.0]]
    [[file:3.2/bug-rt-dependend-variants.patch][3.2]]
    [[file:3.4/bug-rt-dependend-variants.patch][3.4]]
  M [[file:3.6/bug-rt-dependend-variants.patch][3.6]]
    [[file:3.8/bug-rt-dependend-variants.patch][3.8]]
    [[file:3.10/bug-rt-dependend-variants.patch][3.10]]
    [[file:3.12/bug-rt-dependend-variants.patch][3.12]]
    [[file:3.14/bug-rt-dependend-variants.patch][3.14]]
    [[file:3.18/bug-rt-dependend-variants.patch][3.18]]
    [[file:4.0/bug-rt-dependend-variants.patch][4.0]]
    [[file:4.1/bug-rt-dependend-variants.patch][4.1]]
    [[file:4.4/bug-rt-dependend-variants.patch][4.4]]
    [[file:4.6/bug-rt-dependend-variants.patch][4.6]]
    [[file:4.8/bug-rt-dependend-variants.patch][4.8]]
    [[file:4.9/bug-rt-dependend-variants.patch][4.9]]
    [[file:4.11/bug-rt-dependend-variants.patch][4.11]]
* [   3.0 -   4.11] buffer_head: Replace bh_uptodate_lock for -rt{C::maintain::refactor::merge fun together}
  + [[file:3.0/fs-replace-bh_uptodate_lock-for-rt.patch][3.0]]
    [[file:3.2/fs-replace-bh_uptodate_lock-for-rt.patch][3.2]]
    [[file:3.4/fs-replace-bh_uptodate_lock-for-rt.patch][3.4]]
    [[file:3.6/fs-replace-bh_uptodate_lock-for-rt.patch][3.6]]
    [[file:3.8/fs-replace-bh_uptodate_lock-for-rt.patch][3.8]]
    [[file:3.10/fs-replace-bh_uptodate_lock-for-rt.patch][3.10]]
    [[file:3.12/fs-replace-bh_uptodate_lock-for-rt.patch][3.12]]
    [[file:3.14/fs-replace-bh_uptodate_lock-for-rt.patch][3.14]]
    [[file:3.18/fs-replace-bh_uptodate_lock-for-rt.patch][3.18]]
    [[file:4.0/fs-replace-bh_uptodate_lock-for-rt.patch][4.0]]
    [[file:4.1/fs-replace-bh_uptodate_lock-for-rt.patch][4.1]]
    [[file:4.4/fs-replace-bh_uptodate_lock-for-rt.patch][4.4]]
    [[file:4.6/fs-replace-bh_uptodate_lock-for-rt.patch][4.6]]
    [[file:4.8/fs-replace-bh_uptodate_lock-for-rt.patch][4.8]]
    [[file:4.9/fs-replace-bh_uptodate_lock-for-rt.patch][4.9]]
    [[file:4.11/fs-replace-bh_uptodate_lock-for-rt.patch][4.11]]
* [   3.0 -   4.11] md: raid5: Make raid5_percpu handling RT aware{C::bug::crash::preempt::preempt::add locks, and replace with _light to keep serialized}
  + [[file:3.0/md-raid5-percpu-handling-rt-aware.patch][3.0]]
  m [[file:3.2/md-raid5-percpu-handling-rt-aware.patch][3.2]]
    [[file:3.4/md-raid5-percpu-handling-rt-aware.patch][3.4]]
    [[file:3.6/md-raid5-percpu-handling-rt-aware.patch][3.6]]
    [[file:3.8/md-raid5-percpu-handling-rt-aware.patch][3.8]]
  M [[file:3.10/md-raid5-percpu-handling-rt-aware.patch][3.10]]
  M [[file:3.12/md-raid5-percpu-handling-rt-aware.patch][3.12]]
  m [[file:3.14/md-raid5-percpu-handling-rt-aware.patch][3.14]]
    [[file:3.18/md-raid5-percpu-handling-rt-aware.patch][3.18]]
    [[file:4.0/md-raid5-percpu-handling-rt-aware.patch][4.0]]
  M [[file:4.1/md-raid5-percpu-handling-rt-aware.patch][4.1]]
    [[file:4.4/md-raid5-percpu-handling-rt-aware.patch][4.4]]
    [[file:4.6/md-raid5-percpu-handling-rt-aware.patch][4.6]]
  m [[file:4.8/md-raid5-percpu-handling-rt-aware.patch][4.8]]
  M [[file:4.9/md-raid5-percpu-handling-rt-aware.patch][4.9]]
  m [[file:4.11/md-raid5-percpu-handling-rt-aware.patch][4.11]]
* [   3.0 -   4.11] x86: Convert mce timer to hrtimer{C::bug::crash::??::timer::convert mce to hrtimer}
  + [[file:3.0/x86-mce-timer-hrtimer.patch][3.0]]
  M [[file:3.2/x86-mce-timer-hrtimer.patch][3.2]]
    [[file:3.4/x86-mce-timer-hrtimer.patch][3.4]]
  M [[file:3.6/x86-mce-timer-hrtimer.patch][3.6]]
  M [[file:3.8/x86-mce-timer-hrtimer.patch][3.8]]
    [[file:3.10/x86-mce-timer-hrtimer.patch][3.10]]
    [[file:3.12/x86-mce-timer-hrtimer.patch][3.12]]
  M [[file:3.14/x86-mce-timer-hrtimer.patch][3.14]]
  M [[file:3.18/x86-mce-timer-hrtimer.patch][3.18]]
  m [[file:4.0/x86-mce-timer-hrtimer.patch][4.0]]
  M [[file:4.1/x86-mce-timer-hrtimer.patch][4.1]]
  m [[file:4.4/x86-mce-timer-hrtimer.patch][4.4]]
    [[file:4.6/x86-mce-timer-hrtimer.patch][4.6]]
  M [[file:4.8/x86-mce-timer-hrtimer.patch][4.8]]
  m [[file:4.9/x86-mce-timer-hrtimer.patch][4.9]]
  M [[file:4.11/x86-mce-timer-hrtimer.patch][4.11]]
* [   3.0 -   4.11] mm/vmstat: Protect per cpu variables with preempt disable on RT{C::feature::rtsupport::enclose with preempt_disable_rt}
  + [[file:3.0/mm-make-vmstat-rt-aware.patch][3.0]]
    [[file:3.2/mm-make-vmstat-rt-aware.patch][3.2]]
    [[file:3.4/mm-make-vmstat-rt-aware.patch][3.4]]
    [[file:3.6/mm-make-vmstat-rt-aware.patch][3.6]]
    [[file:3.8/mm-make-vmstat-rt-aware.patch][3.8]]
    [[file:3.10/mm-make-vmstat-rt-aware.patch][3.10]]
    [[file:3.12/mm-make-vmstat-rt-aware.patch][3.12]]
    [[file:3.14/mm-make-vmstat-rt-aware.patch][3.14]]
  m [[file:3.18/mm-make-vmstat-rt-aware.patch][3.18]]
    [[file:4.0/mm-make-vmstat-rt-aware.patch][4.0]]
    [[file:4.1/mm-make-vmstat-rt-aware.patch][4.1]]
    [[file:4.4/mm-make-vmstat-rt-aware.patch][4.4]]
    [[file:4.6/mm-make-vmstat-rt-aware.patch][4.6]]
  M [[file:4.8/mm-make-vmstat-rt-aware.patch][4.8]]
    [[file:4.9/mm-make-vmstat-rt-aware.patch][4.9]]
    [[file:4.11/mm-make-vmstat-rt-aware.patch][4.11]]
* [   3.0 -   4.11] lockdep: Make it RT aware{C::feature::rtsupport::rm lockdep_softirq in preempt-rt-full}
  + [[file:3.0/lockdep-no-softirq-accounting-on-rt.patch][3.0]]
  m [[file:3.2/lockdep-no-softirq-accounting-on-rt.patch][3.2]]
    [[file:3.4/lockdep-no-softirq-accounting-on-rt.patch][3.4]]
    [[file:3.6/lockdep-no-softirq-accounting-on-rt.patch][3.6]]
    [[file:3.8/lockdep-no-softirq-accounting-on-rt.patch][3.8]]
    [[file:3.10/lockdep-no-softirq-accounting-on-rt.patch][3.10]]
    [[file:3.12/lockdep-no-softirq-accounting-on-rt.patch][3.12]]
    [[file:3.14/lockdep-no-softirq-accounting-on-rt.patch][3.14]]
    [[file:3.18/lockdep-no-softirq-accounting-on-rt.patch][3.18]]
    [[file:4.0/lockdep-no-softirq-accounting-on-rt.patch][4.0]]
    [[file:4.1/lockdep-no-softirq-accounting-on-rt.patch][4.1]]
    [[file:4.4/lockdep-no-softirq-accounting-on-rt.patch][4.4]]
    [[file:4.6/lockdep-no-softirq-accounting-on-rt.patch][4.6]]
    [[file:4.8/lockdep-no-softirq-accounting-on-rt.patch][4.8]]
    [[file:4.9/lockdep-no-softirq-accounting-on-rt.patch][4.9]]
    [[file:4.11/lockdep-no-softirq-accounting-on-rt.patch][4.11]]
* [   3.0 -   4.11] genirq: Force interrupt thread on RT{C::feature::rtsupport::for irq thread in rt}
  + [[file:3.0/genirq-force-threading.patch][3.0]]
    [[file:3.2/genirq-force-threading.patch][3.2]]
    [[file:3.4/genirq-force-threading.patch][3.4]]
    [[file:3.6/genirq-force-threading.patch][3.6]]
    [[file:3.8/genirq-force-threading.patch][3.8]]
    [[file:3.10/genirq-force-threading.patch][3.10]]
    [[file:3.12/genirq-force-threading.patch][3.12]]
  M [[file:3.14/genirq-force-threading.patch][3.14]]
  m [[file:3.18/genirq-force-threading.patch][3.18]]
    [[file:4.0/genirq-force-threading.patch][4.0]]
  m [[file:4.1/genirq-force-threading.patch][4.1]]
    [[file:4.4/genirq-force-threading.patch][4.4]]
    [[file:4.6/genirq-force-threading.patch][4.6]]
    [[file:4.8/genirq-force-threading.patch][4.8]]
    [[file:4.9/genirq-force-threading.patch][4.9]]
    [[file:4.11/genirq-force-threading.patch][4.11]]
* [   3.0 -   4.11] net: Use skbufhead with raw lock{C::feature::rtsupport::replace with raw, add a queue to record sk_buff to free}
  + [[file:3.0/skbufhead-raw-lock.patch][3.0]]
    [[file:3.2/skbufhead-raw-lock.patch][3.2]]
    [[file:3.4/skbufhead-raw-lock.patch][3.4]]
  m [[file:3.6/skbufhead-raw-lock.patch][3.6]]
    [[file:3.8/skbufhead-raw-lock.patch][3.8]]
    [[file:3.10/skbufhead-raw-lock.patch][3.10]]
  m [[file:3.12/skbufhead-raw-lock.patch][3.12]]
  m [[file:3.14/skbufhead-raw-lock.patch][3.14]]
  m [[file:3.18/skbufhead-raw-lock.patch][3.18]]
  M [[file:4.0/skbufhead-raw-lock.patch][4.0]]
    [[file:4.1/skbufhead-raw-lock.patch][4.1]]
    [[file:4.4/skbufhead-raw-lock.patch][4.4]]
    [[file:4.6/skbufhead-raw-lock.patch][4.6]]
    [[file:4.8/skbufhead-raw-lock.patch][4.8]]
  M [[file:4.9/skbufhead-raw-lock.patch][4.9]]
  m [[file:4.11/skbufhead-raw-lock.patch][4.11]]
* [   3.0 -   4.11] x86: Use generic rwsem_spinlocks on -rt{C::feature::rtsupport::modify config to use gen rwsem in rt}
  + [[file:3.0/x86-use-gen-rwsem-spinlocks-rt.patch][3.0]]
    [[file:3.2/x86-use-gen-rwsem-spinlocks-rt.patch][3.2]]
    [[file:3.4/x86-use-gen-rwsem-spinlocks-rt.patch][3.4]]
  m [[file:3.6/x86-use-gen-rwsem-spinlocks-rt.patch][3.6]]
  M [[file:3.8/x86-use-gen-rwsem-spinlocks-rt.patch][3.8]]
  M [[file:3.10/x86-use-gen-rwsem-spinlocks-rt.patch][3.10]]
    [[file:3.12/x86-use-gen-rwsem-spinlocks-rt.patch][3.12]]
  M [[file:3.14/x86-use-gen-rwsem-spinlocks-rt.patch][3.14]]
    [[file:3.18/x86-use-gen-rwsem-spinlocks-rt.patch][3.18]]
    [[file:4.0/x86-use-gen-rwsem-spinlocks-rt.patch][4.0]]
    [[file:4.1/x86-use-gen-rwsem-spinlocks-rt.patch][4.1]]
    [[file:4.4/x86-use-gen-rwsem-spinlocks-rt.patch][4.4]]
    [[file:4.6/x86-use-gen-rwsem-spinlocks-rt.patch][4.6]]
    [[file:4.8/x86-use-gen-rwsem-spinlocks-rt.patch][4.8]]
    [[file:4.9/x86-use-gen-rwsem-spinlocks-rt.patch][4.9]]
    [[file:4.11/x86-use-gen-rwsem-spinlocks-rt.patch][4.11]]
* [   3.0 -   4.11] block: Turn off warning which is bogus on RT{C::feature?::rtsupport::no rt warn, replace fun to use _light}}
  + [[file:3.0/fs-block-rt-support.patch][3.0]]
    [[file:3.2/fs-block-rt-support.patch][3.2]]
    [[file:3.4/fs-block-rt-support.patch][3.4]]
    [[file:3.6/fs-block-rt-support.patch][3.6]]
    [[file:3.8/fs-block-rt-support.patch][3.8]]
  M [[file:3.10/fs-block-rt-support.patch][3.10]]
    [[file:3.12/fs-block-rt-support.patch][3.12]]
    [[file:3.14/fs-block-rt-support.patch][3.14]]
    [[file:3.18/fs-block-rt-support.patch][3.18]]
    [[file:4.0/fs-block-rt-support.patch][4.0]]
    [[file:4.1/fs-block-rt-support.patch][4.1]]
    [[file:4.4/fs-block-rt-support.patch][4.4]]
    [[file:4.6/fs-block-rt-support.patch][4.6]]
    [[file:4.8/fs-block-rt-support.patch][4.8]]
    [[file:4.9/fs-block-rt-support.patch][4.9]]
    [[file:4.11/fs-block-rt-support.patch][4.11]]
* [   3.0 -   4.11] stop_machine: convert stop_machine_run() to PREEMPT_RT{C::feature::rtsupport::replace preempt_disalbe with explicit serialization}
  + [[file:3.0/stop_machine-convert-stop_machine_run-to-PREEMPT_RT.patch][3.0]]
  m [[file:3.2/stop_machine-convert-stop_machine_run-to-PREEMPT_RT.patch][3.2]]
    [[file:3.4/stop_machine-convert-stop_machine_run-to-PREEMPT_RT.patch][3.4]]
    [[file:3.6/stop_machine-convert-stop_machine_run-to-PREEMPT_RT.patch][3.6]]
    [[file:3.8/stop_machine-convert-stop_machine_run-to-PREEMPT_RT.patch][3.8]]
  m [[file:3.10/stop_machine-convert-stop_machine_run-to-PREEMPT_RT.patch][3.10]]
    [[file:3.12/stop_machine-convert-stop_machine_run-to-PREEMPT_RT.patch][3.12]]
  M [[file:3.14/stop_machine-convert-stop_machine_run-to-PREEMPT_RT.patch][3.14]]
    [[file:3.18/stop_machine-convert-stop_machine_run-to-PREEMPT_RT.patch][3.18]]
    [[file:4.0/stop_machine-convert-stop_machine_run-to-PREEMPT_RT.patch][4.0]]
    [[file:4.1/stop_machine-convert-stop_machine_run-to-PREEMPT_RT.patch][4.1]]
    [[file:4.4/stop_machine-convert-stop_machine_run-to-PREEMPT_RT.patch][4.4]]
  m [[file:4.6/stop_machine-convert-stop_machine_run-to-PREEMPT_RT.patch][4.6]]
    [[file:4.8/stop_machine-convert-stop_machine_run-to-PREEMPT_RT.patch][4.8]]
    [[file:4.9/stop_machine-convert-stop_machine_run-to-PREEMPT_RT.patch][4.9]]
    [[file:4.11/stop_machine-convert-stop_machine_run-to-PREEMPT_RT.patch][4.11]]
* [   3.0 -   4.11] sched: Move task_struct cleanup to RCU{C::feature::sched::wrap fun put task }
  + [[file:3.0/sched-delay-put-task.patch][3.0]]
    [[file:3.2/sched-delay-put-task.patch][3.2]]
    [[file:3.4/sched-delay-put-task.patch][3.4]]
  m [[file:3.6/sched-delay-put-task.patch][3.6]]
  M [[file:3.8/sched-delay-put-task.patch][3.8]]
  m [[file:3.10/sched-delay-put-task.patch][3.10]]
    [[file:3.12/sched-delay-put-task.patch][3.12]]
    [[file:3.14/sched-delay-put-task.patch][3.14]]
    [[file:3.18/sched-delay-put-task.patch][3.18]]
  m [[file:4.0/sched-delay-put-task.patch][4.0]]
    [[file:4.1/sched-delay-put-task.patch][4.1]]
    [[file:4.4/sched-delay-put-task.patch][4.4]]
    [[file:4.6/sched-delay-put-task.patch][4.6]]
  m [[file:4.8/sched-delay-put-task.patch][4.8]]
    [[file:4.9/sched-delay-put-task.patch][4.9]]
  M [[file:4.11/sched-delay-put-task.patch][4.11]]
* [   3.0 -   4.11] rt: Add local irq locks{C::feature::rtsupport::add local_lock}
  + [[file:3.0/rt-local-irq-lock.patch][3.0]]
    [[file:3.2/rt-local-irq-lock.patch][3.2]]
    [[file:3.4/rt-local-irq-lock.patch][3.4]]
    [[file:3.6/rt-local-irq-lock.patch][3.6]]
    [[file:3.8/rt-local-irq-lock.patch][3.8]]
    [[file:3.10/rt-local-irq-lock.patch][3.10]]
    [[file:3.12/rt-local-irq-lock.patch][3.12]]
    [[file:3.14/rt-local-irq-lock.patch][3.14]]
    [[file:3.18/rt-local-irq-lock.patch][3.18]]
    [[file:4.0/rt-local-irq-lock.patch][4.0]]
  M [[file:4.1/rt-local-irq-lock.patch][4.1]]
    [[file:4.4/rt-local-irq-lock.patch][4.4]]
  M [[file:4.6/rt-local-irq-lock.patch][4.6]]
    [[file:4.8/rt-local-irq-lock.patch][4.8]]
    [[file:4.9/rt-local-irq-lock.patch][4.9]]
    [[file:4.11/rt-local-irq-lock.patch][4.11]]
* [   3.0 -   4.11] kconfig: Add PREEMPT_RT_FULL{C::feature::rtsupport::add kconfig PREEMPT_RT_FULL}
  + [[file:3.0/kconfig-preempt-rt-full.patch][3.0]]
  m [[file:3.2/kconfig-preempt-rt-full.patch][3.2]]
    [[file:3.4/kconfig-preempt-rt-full.patch][3.4]]
    [[file:3.6/kconfig-preempt-rt-full.patch][3.6]]
  M [[file:3.8/kconfig-preempt-rt-full.patch][3.8]]
    [[file:3.10/kconfig-preempt-rt-full.patch][3.10]]
  m [[file:3.12/kconfig-preempt-rt-full.patch][3.12]]
    [[file:3.14/kconfig-preempt-rt-full.patch][3.14]]
    [[file:3.18/kconfig-preempt-rt-full.patch][3.18]]
    [[file:4.0/kconfig-preempt-rt-full.patch][4.0]]
    [[file:4.1/kconfig-preempt-rt-full.patch][4.1]]
    [[file:4.4/kconfig-preempt-rt-full.patch][4.4]]
    [[file:4.6/kconfig-preempt-rt-full.patch][4.6]]
    [[file:4.8/kconfig-preempt-rt-full.patch][4.8]]
    [[file:4.9/kconfig-preempt-rt-full.patch][4.9]]
    [[file:4.11/kconfig-preempt-rt-full.patch][4.11]]
* [   3.0 -   4.11] rtmutex: Handle the various new futex race conditions{C::feature::rtsupport::handle race conditions in futex}
  + [[file:3.0/rtmutex-futex-prepare-rt.patch][3.0]]
    [[file:3.2/rtmutex-futex-prepare-rt.patch][3.2]]
    [[file:3.4/rtmutex-futex-prepare-rt.patch][3.4]]
    [[file:3.6/rtmutex-futex-prepare-rt.patch][3.6]]
    [[file:3.8/rtmutex-futex-prepare-rt.patch][3.8]]
    [[file:3.10/rtmutex-futex-prepare-rt.patch][3.10]]
    [[file:3.12/rtmutex-futex-prepare-rt.patch][3.12]]
  M [[file:3.14/rtmutex-futex-prepare-rt.patch][3.14]]
  M [[file:3.18/rtmutex-futex-prepare-rt.patch][3.18]]
    [[file:4.0/rtmutex-futex-prepare-rt.patch][4.0]]
  M [[file:4.1/rtmutex-futex-prepare-rt.patch][4.1]]
  m [[file:4.4/rtmutex-futex-prepare-rt.patch][4.4]]
  M [[file:4.6/rtmutex-futex-prepare-rt.patch][4.6]]
    [[file:4.8/rtmutex-futex-prepare-rt.patch][4.8]]
  m [[file:4.9/rtmutex-futex-prepare-rt.patch][4.9]]
  M [[file:4.11/rtmutex-futex-prepare-rt.patch][4.11]]
* [   3.0 -   4.11] signals: Allow rt tasks to cache one sigqueue struct{C::feature::rtsupport::record sigque to cache rt tasks}
  + [[file:3.0/signals-allow-rt-tasks-to-cache-one-sigqueue-struct.patch][3.0]]
    [[file:3.2/signals-allow-rt-tasks-to-cache-one-sigqueue-struct.patch][3.2]]
  m [[file:3.4/signals-allow-rt-tasks-to-cache-one-sigqueue-struct.patch][3.4]]
    [[file:3.6/signals-allow-rt-tasks-to-cache-one-sigqueue-struct.patch][3.6]]
    [[file:3.8/signals-allow-rt-tasks-to-cache-one-sigqueue-struct.patch][3.8]]
  M [[file:3.10/signals-allow-rt-tasks-to-cache-one-sigqueue-struct.patch][3.10]]
  M [[file:3.12/signals-allow-rt-tasks-to-cache-one-sigqueue-struct.patch][3.12]]
    [[file:3.14/signals-allow-rt-tasks-to-cache-one-sigqueue-struct.patch][3.14]]
    [[file:3.18/signals-allow-rt-tasks-to-cache-one-sigqueue-struct.patch][3.18]]
    [[file:4.0/signals-allow-rt-tasks-to-cache-one-sigqueue-struct.patch][4.0]]
    [[file:4.1/signals-allow-rt-tasks-to-cache-one-sigqueue-struct.patch][4.1]]
  M [[file:4.4/signals-allow-rt-tasks-to-cache-one-sigqueue-struct.patch][4.4]]
    [[file:4.6/signals-allow-rt-tasks-to-cache-one-sigqueue-struct.patch][4.6]]
    [[file:4.8/signals-allow-rt-tasks-to-cache-one-sigqueue-struct.patch][4.8]]
    [[file:4.9/signals-allow-rt-tasks-to-cache-one-sigqueue-struct.patch][4.9]]
  M [[file:4.11/signals-allow-rt-tasks-to-cache-one-sigqueue-struct.patch][4.11]]
* [   3.0 -   4.11] fs: ntfs: disable interrupt only on !RT{C::bug::crash::irq::irq::replace with nort}
  + [[file:3.0/fs-ntfs-disable-interrupt-non-rt.patch][3.0]]
    [[file:3.2/fs-ntfs-disable-interrupt-non-rt.patch][3.2]]
  m [[file:3.4/fs-ntfs-disable-interrupt-non-rt.patch][3.4]]
    [[file:3.6/fs-ntfs-disable-interrupt-non-rt.patch][3.6]]
    [[file:3.8/fs-ntfs-disable-interrupt-non-rt.patch][3.8]]
    [[file:3.10/fs-ntfs-disable-interrupt-non-rt.patch][3.10]]
    [[file:3.12/fs-ntfs-disable-interrupt-non-rt.patch][3.12]]
    [[file:3.14/fs-ntfs-disable-interrupt-non-rt.patch][3.14]]
    [[file:3.18/fs-ntfs-disable-interrupt-non-rt.patch][3.18]]
    [[file:4.0/fs-ntfs-disable-interrupt-non-rt.patch][4.0]]
    [[file:4.1/fs-ntfs-disable-interrupt-non-rt.patch][4.1]]
    [[file:4.4/fs-ntfs-disable-interrupt-non-rt.patch][4.4]]
  M [[file:4.6/fs-ntfs-disable-interrupt-non-rt.patch][4.6]]
    [[file:4.8/fs-ntfs-disable-interrupt-non-rt.patch][4.8]]
    [[file:4.9/fs-ntfs-disable-interrupt-non-rt.patch][4.9]]
    [[file:4.11/fs-ntfs-disable-interrupt-non-rt.patch][4.11]]
* [   3.0 -   4.11] sched: Add saved_state for tasks blocked on sleeping locks{C::feature::sched::add save state flag to process, when try wake up}
  + [[file:3.0/sched-rt-mutex-wakeup.patch][3.0]]
    [[file:3.2/sched-rt-mutex-wakeup.patch][3.2]]
    [[file:3.4/sched-rt-mutex-wakeup.patch][3.4]]
    [[file:3.6/sched-rt-mutex-wakeup.patch][3.6]]
    [[file:3.8/sched-rt-mutex-wakeup.patch][3.8]]
  M [[file:3.10/sched-rt-mutex-wakeup.patch][3.10]]
  M [[file:3.12/sched-rt-mutex-wakeup.patch][3.12]]
    [[file:3.14/sched-rt-mutex-wakeup.patch][3.14]]
    [[file:3.18/sched-rt-mutex-wakeup.patch][3.18]]
    [[file:4.0/sched-rt-mutex-wakeup.patch][4.0]]
    [[file:4.1/sched-rt-mutex-wakeup.patch][4.1]]
  m [[file:4.4/sched-rt-mutex-wakeup.patch][4.4]]
    [[file:4.6/sched-rt-mutex-wakeup.patch][4.6]]
    [[file:4.8/sched-rt-mutex-wakeup.patch][4.8]]
  M [[file:4.9/sched-rt-mutex-wakeup.patch][4.9]]
  M [[file:4.11/sched-rt-mutex-wakeup.patch][4.11]]
* [   3.0 -   4.11] mm/scatterlist: Do not disable irqs on RT{C::feature::rtsupport::replace with _nort}
  + [[file:3.0/mm-scatterlist-dont-disable-irqs-on-RT.patch][3.0]]
    [[file:3.2/mm-scatterlist-dont-disable-irqs-on-RT.patch][3.2]]
  m [[file:3.4/mm-scatterlist-dont-disable-irqs-on-RT.patch][3.4]]
    [[file:3.6/mm-scatterlist-dont-disable-irqs-on-RT.patch][3.6]]
  M [[file:3.8/mm-scatterlist-dont-disable-irqs-on-RT.patch][3.8]]
    [[file:3.10/mm-scatterlist-dont-disable-irqs-on-RT.patch][3.10]]
  m [[file:3.12/mm-scatterlist-dont-disable-irqs-on-RT.patch][3.12]]
    [[file:3.14/mm-scatterlist-dont-disable-irqs-on-RT.patch][3.14]]
    [[file:3.18/mm-scatterlist-dont-disable-irqs-on-RT.patch][3.18]]
    [[file:4.0/mm-scatterlist-dont-disable-irqs-on-RT.patch][4.0]]
    [[file:4.1/mm-scatterlist-dont-disable-irqs-on-RT.patch][4.1]]
  m [[file:4.4/mm-scatterlist-dont-disable-irqs-on-RT.patch][4.4]]
    [[file:4.6/mm-scatterlist-dont-disable-irqs-on-RT.patch][4.6]]
    [[file:4.8/mm-scatterlist-dont-disable-irqs-on-RT.patch][4.8]]
    [[file:4.9/mm-scatterlist-dont-disable-irqs-on-RT.patch][4.9]]
  M [[file:4.11/mm-scatterlist-dont-disable-irqs-on-RT.patch][4.11]]
* [   3.0 -   4.11] softirq: Disable softirq stacks for RT{C::feature::rtsupport::disable softirq stack rt}
  + [[file:3.0/softirq-disable-softirq-stacks-for-rt.patch][3.0]]
    [[file:3.2/softirq-disable-softirq-stacks-for-rt.patch][3.2]]
  m [[file:3.4/softirq-disable-softirq-stacks-for-rt.patch][3.4]]
    [[file:3.6/softirq-disable-softirq-stacks-for-rt.patch][3.6]]
  m [[file:3.8/softirq-disable-softirq-stacks-for-rt.patch][3.8]]
    [[file:3.10/softirq-disable-softirq-stacks-for-rt.patch][3.10]]
  m [[file:3.12/softirq-disable-softirq-stacks-for-rt.patch][3.12]]
  M [[file:3.14/softirq-disable-softirq-stacks-for-rt.patch][3.14]]
  m [[file:3.18/softirq-disable-softirq-stacks-for-rt.patch][3.18]]
    [[file:4.0/softirq-disable-softirq-stacks-for-rt.patch][4.0]]
  M [[file:4.1/softirq-disable-softirq-stacks-for-rt.patch][4.1]]
  m [[file:4.4/softirq-disable-softirq-stacks-for-rt.patch][4.4]]
    [[file:4.6/softirq-disable-softirq-stacks-for-rt.patch][4.6]]
  m [[file:4.8/softirq-disable-softirq-stacks-for-rt.patch][4.8]]
    [[file:4.9/softirq-disable-softirq-stacks-for-rt.patch][4.9]]
    [[file:4.11/softirq-disable-softirq-stacks-for-rt.patch][4.11]]
* [   3.0 -   4.11] mm: Protect activate_mm() by preempt_[disable&enable]_rt(){C::feature::rtsupport::enclose with local_irq_disable_rt}
  + [[file:3.0/mm-protect-activate-switch-mm.patch][3.0]]
  M [[file:3.2/mm-protect-activate-switch-mm.patch][3.2]]
    [[file:3.4/mm-protect-activate-switch-mm.patch][3.4]]
    [[file:3.6/mm-protect-activate-switch-mm.patch][3.6]]
  M [[file:3.8/mm-protect-activate-switch-mm.patch][3.8]]
    [[file:3.10/mm-protect-activate-switch-mm.patch][3.10]]
    [[file:3.12/mm-protect-activate-switch-mm.patch][3.12]]
  m [[file:3.14/mm-protect-activate-switch-mm.patch][3.14]]
  m [[file:3.18/mm-protect-activate-switch-mm.patch][3.18]]
    [[file:4.0/mm-protect-activate-switch-mm.patch][4.0]]
    [[file:4.1/mm-protect-activate-switch-mm.patch][4.1]]
    [[file:4.4/mm-protect-activate-switch-mm.patch][4.4]]
    [[file:4.6/mm-protect-activate-switch-mm.patch][4.6]]
    [[file:4.8/mm-protect-activate-switch-mm.patch][4.8]]
    [[file:4.9/mm-protect-activate-switch-mm.patch][4.9]]
  m [[file:4.11/mm-protect-activate-switch-mm.patch][4.11]]
* [   3.0 -   4.11] rt: Add the preempt-rt lock replacement APIs{C::feature::rtsupport::add rt lock APIs}
  + [[file:3.0/rt-add-rt-locks.patch][3.0]]
  M [[file:3.2/rt-add-rt-locks.patch][3.2]]
  m [[file:3.4/rt-add-rt-locks.patch][3.4]]
  m [[file:3.6/rt-add-rt-locks.patch][3.6]]
  m [[file:3.8/rt-add-rt-locks.patch][3.8]]
  M [[file:3.10/rt-add-rt-locks.patch][3.10]]
  m [[file:3.12/rt-add-rt-locks.patch][3.12]]
  M [[file:3.14/rt-add-rt-locks.patch][3.14]]
  M [[file:3.18/rt-add-rt-locks.patch][3.18]]
  M [[file:4.0/rt-add-rt-locks.patch][4.0]]
  M [[file:4.1/rt-add-rt-locks.patch][4.1]]
  M [[file:4.4/rt-add-rt-locks.patch][4.4]]
  M [[file:4.6/rt-add-rt-locks.patch][4.6]]
  M [[file:4.8/rt-add-rt-locks.patch][4.8]]
    [[file:4.9/rt-add-rt-locks.patch][4.9]]
  M [[file:4.11/rt-add-rt-locks.patch][4.11]]
* [   3.0 -   4.11] block: Shorten interrupt disabled regions{C::performance::smallsize::add comment, move irq_disable out}
  + [[file:3.0/block-shorten-interrupt-disabled-regions.patch][3.0]]
    [[file:3.2/block-shorten-interrupt-disabled-regions.patch][3.2]]
  m [[file:3.4/block-shorten-interrupt-disabled-regions.patch][3.4]]
    [[file:3.6/block-shorten-interrupt-disabled-regions.patch][3.6]]
  M [[file:3.8/block-shorten-interrupt-disabled-regions.patch][3.8]]
    [[file:3.10/block-shorten-interrupt-disabled-regions.patch][3.10]]
    [[file:3.12/block-shorten-interrupt-disabled-regions.patch][3.12]]
    [[file:3.14/block-shorten-interrupt-disabled-regions.patch][3.14]]
    [[file:3.18/block-shorten-interrupt-disabled-regions.patch][3.18]]
    [[file:4.0/block-shorten-interrupt-disabled-regions.patch][4.0]]
    [[file:4.1/block-shorten-interrupt-disabled-regions.patch][4.1]]
    [[file:4.4/block-shorten-interrupt-disabled-regions.patch][4.4]]
    [[file:4.6/block-shorten-interrupt-disabled-regions.patch][4.6]]
    [[file:4.8/block-shorten-interrupt-disabled-regions.patch][4.8]]
    [[file:4.9/block-shorten-interrupt-disabled-regions.patch][4.9]]
    [[file:4.11/block-shorten-interrupt-disabled-regions.patch][4.11]]
* [   3.0 -    4.9] radix-tree: Make RT aware{C::feature::rtsupport::make radix-tree rt aware}
  + [[file:3.0/radix-tree-rt-aware.patch][3.0]]
    [[file:3.2/radix-tree-rt-aware.patch][3.2]]
  m [[file:3.4/radix-tree-rt-aware.patch][3.4]]
    [[file:3.6/radix-tree-rt-aware.patch][3.6]]
    [[file:3.8/radix-tree-rt-aware.patch][3.8]]
    [[file:3.10/radix-tree-rt-aware.patch][3.10]]
  M [[file:3.12/radix-tree-rt-aware.patch][3.12]]
    [[file:3.14/radix-tree-rt-aware.patch][3.14]]
  M [[file:3.18/radix-tree-rt-aware.patch][3.18]]
    [[file:4.0/radix-tree-rt-aware.patch][4.0]]
    [[file:4.1/radix-tree-rt-aware.patch][4.1]]
  m [[file:4.4/radix-tree-rt-aware.patch][4.4]]
    [[file:4.6/radix-tree-rt-aware.patch][4.6]]
  M [[file:4.8/radix-tree-rt-aware.patch][4.8]]
    [[file:4.9/radix-tree-rt-aware.patch][4.9]]
  - 4.11
* [   3.0 -   4.11] rtmutex: Avoid include hell{C::bug::compile::compiling_err::syntax::correct header file}
  + [[file:3.0/rtmutex-avoid-include-hell.patch][3.0]]
    [[file:3.2/rtmutex-avoid-include-hell.patch][3.2]]
    [[file:3.4/rtmutex-avoid-include-hell.patch][3.4]]
    [[file:3.6/rtmutex-avoid-include-hell.patch][3.6]]
    [[file:3.8/rtmutex-avoid-include-hell.patch][3.8]]
    [[file:3.10/rtmutex-avoid-include-hell.patch][3.10]]
    [[file:3.12/rtmutex-avoid-include-hell.patch][3.12]]
  m [[file:3.14/rtmutex-avoid-include-hell.patch][3.14]]
    [[file:3.18/rtmutex-avoid-include-hell.patch][3.18]]
    [[file:4.0/rtmutex-avoid-include-hell.patch][4.0]]
    [[file:4.1/rtmutex-avoid-include-hell.patch][4.1]]
    [[file:4.4/rtmutex-avoid-include-hell.patch][4.4]]
    [[file:4.6/rtmutex-avoid-include-hell.patch][4.6]]
    [[file:4.8/rtmutex-avoid-include-hell.patch][4.8]]
    [[file:4.9/rtmutex-avoid-include-hell.patch][4.9]]
    [[file:4.11/rtmutex-avoid-include-hell.patch][4.11]]
* [   3.0 -   4.11] posix-timers: Thread posix-cpu-timers on -rt{C::feature::posix-cpu-time::impl thread posix cpu timers}
  + [[file:3.0/posix-timers-thread-posix-cpu-timers-on-rt.patch][3.0]]
  M [[file:3.2/posix-timers-thread-posix-cpu-timers-on-rt.patch][3.2]]
  M [[file:3.4/posix-timers-thread-posix-cpu-timers-on-rt.patch][3.4]]
  m [[file:3.6/posix-timers-thread-posix-cpu-timers-on-rt.patch][3.6]]
  M [[file:3.8/posix-timers-thread-posix-cpu-timers-on-rt.patch][3.8]]
  M [[file:3.10/posix-timers-thread-posix-cpu-timers-on-rt.patch][3.10]]
  m [[file:3.12/posix-timers-thread-posix-cpu-timers-on-rt.patch][3.12]]
  M [[file:3.14/posix-timers-thread-posix-cpu-timers-on-rt.patch][3.14]]
  M [[file:3.18/posix-timers-thread-posix-cpu-timers-on-rt.patch][3.18]]
    [[file:4.0/posix-timers-thread-posix-cpu-timers-on-rt.patch][4.0]]
  M [[file:4.1/posix-timers-thread-posix-cpu-timers-on-rt.patch][4.1]]
  M [[file:4.4/posix-timers-thread-posix-cpu-timers-on-rt.patch][4.4]]
  m [[file:4.6/posix-timers-thread-posix-cpu-timers-on-rt.patch][4.6]]
    [[file:4.8/posix-timers-thread-posix-cpu-timers-on-rt.patch][4.8]]
    [[file:4.9/posix-timers-thread-posix-cpu-timers-on-rt.patch][4.9]]
  M [[file:4.11/posix-timers-thread-posix-cpu-timers-on-rt.patch][4.11]]
* [   3.0 -   4.11] x86: stackprotector: Avoid random pool on rt{C::feature::rtsupport::uninitialize canary, and use it randomness}
  + [[file:3.0/x86-stackprot-no-random-on-rt.patch][3.0]]
    [[file:3.2/x86-stackprot-no-random-on-rt.patch][3.2]]
    [[file:3.4/x86-stackprot-no-random-on-rt.patch][3.4]]
    [[file:3.6/x86-stackprot-no-random-on-rt.patch][3.6]]
    [[file:3.8/x86-stackprot-no-random-on-rt.patch][3.8]]
    [[file:3.10/x86-stackprot-no-random-on-rt.patch][3.10]]
    [[file:3.12/x86-stackprot-no-random-on-rt.patch][3.12]]
    [[file:3.14/x86-stackprot-no-random-on-rt.patch][3.14]]
    [[file:3.18/x86-stackprot-no-random-on-rt.patch][3.18]]
    [[file:4.0/x86-stackprot-no-random-on-rt.patch][4.0]]
    [[file:4.1/x86-stackprot-no-random-on-rt.patch][4.1]]
  M [[file:4.4/x86-stackprot-no-random-on-rt.patch][4.4]]
    [[file:4.6/x86-stackprot-no-random-on-rt.patch][4.6]]
    [[file:4.8/x86-stackprot-no-random-on-rt.patch][4.8]]
    [[file:4.9/x86-stackprot-no-random-on-rt.patch][4.9]]
    [[file:4.11/x86-stackprot-no-random-on-rt.patch][4.11]]
* [   3.0 -   4.11] rtmutex: Add rtmutex_lock_killable(){C::feature::rtsupport::add fun}
  + [[file:3.0/rtmutex-lock-killable.patch][3.0]]
    [[file:3.2/rtmutex-lock-killable.patch][3.2]]
    [[file:3.4/rtmutex-lock-killable.patch][3.4]]
    [[file:3.6/rtmutex-lock-killable.patch][3.6]]
    [[file:3.8/rtmutex-lock-killable.patch][3.8]]
    [[file:3.10/rtmutex-lock-killable.patch][3.10]]
    [[file:3.12/rtmutex-lock-killable.patch][3.12]]
    [[file:3.14/rtmutex-lock-killable.patch][3.14]]
  M [[file:3.18/rtmutex-lock-killable.patch][3.18]]
    [[file:4.0/rtmutex-lock-killable.patch][4.0]]
    [[file:4.1/rtmutex-lock-killable.patch][4.1]]
    [[file:4.4/rtmutex-lock-killable.patch][4.4]]
    [[file:4.6/rtmutex-lock-killable.patch][4.6]]
    [[file:4.8/rtmutex-lock-killable.patch][4.8]]
    [[file:4.9/rtmutex-lock-killable.patch][4.9]]
    [[file:4.11/rtmutex-lock-killable.patch][4.11]]
* [   3.0 -   4.11] sched: Disable CONFIG_RT_GROUP_SCHED on RT{C::bug::deadlock::deadlock::rm RT::disable CONFIG_RT_GROUP_SCHED}
  + [[file:3.0/sched-disable-rt-group-sched-on-rt.patch][3.0]]
    [[file:3.2/sched-disable-rt-group-sched-on-rt.patch][3.2]]
    [[file:3.4/sched-disable-rt-group-sched-on-rt.patch][3.4]]
    [[file:3.6/sched-disable-rt-group-sched-on-rt.patch][3.6]]
    [[file:3.8/sched-disable-rt-group-sched-on-rt.patch][3.8]]
  m [[file:3.10/sched-disable-rt-group-sched-on-rt.patch][3.10]]
    [[file:3.12/sched-disable-rt-group-sched-on-rt.patch][3.12]]
    [[file:3.14/sched-disable-rt-group-sched-on-rt.patch][3.14]]
    [[file:3.18/sched-disable-rt-group-sched-on-rt.patch][3.18]]
    [[file:4.0/sched-disable-rt-group-sched-on-rt.patch][4.0]]
    [[file:4.1/sched-disable-rt-group-sched-on-rt.patch][4.1]]
    [[file:4.4/sched-disable-rt-group-sched-on-rt.patch][4.4]]
    [[file:4.6/sched-disable-rt-group-sched-on-rt.patch][4.6]]
    [[file:4.8/sched-disable-rt-group-sched-on-rt.patch][4.8]]
    [[file:4.9/sched-disable-rt-group-sched-on-rt.patch][4.9]]
    [[file:4.11/sched-disable-rt-group-sched-on-rt.patch][4.11]]
* [   3.0 -   4.11] mm: page_alloc: Reduce lock sections further{C::performance::mutex::split page to be freed to separate list}
  + [[file:3.0/mm-page_alloc-reduce-lock-sections-further.patch][3.0]]
    [[file:3.2/mm-page_alloc-reduce-lock-sections-further.patch][3.2]]
    [[file:3.4/mm-page_alloc-reduce-lock-sections-further.patch][3.4]]
  M [[file:3.6/mm-page_alloc-reduce-lock-sections-further.patch][3.6]]
  M [[file:3.8/mm-page_alloc-reduce-lock-sections-further.patch][3.8]]
  M [[file:3.10/mm-page_alloc-reduce-lock-sections-further.patch][3.10]]
  M [[file:3.12/mm-page_alloc-reduce-lock-sections-further.patch][3.12]]
  m [[file:3.14/mm-page_alloc-reduce-lock-sections-further.patch][3.14]]
  M [[file:3.18/mm-page_alloc-reduce-lock-sections-further.patch][3.18]]
  M [[file:4.0/mm-page_alloc-reduce-lock-sections-further.patch][4.0]]
  M [[file:4.1/mm-page_alloc-reduce-lock-sections-further.patch][4.1]]
  M [[file:4.4/mm-page_alloc-reduce-lock-sections-further.patch][4.4]]
  M [[file:4.6/mm-page_alloc-reduce-lock-sections-further.patch][4.6]]
  M [[file:4.8/mm-page_alloc-reduce-lock-sections-further.patch][4.8]]
    [[file:4.9/mm-page_alloc-reduce-lock-sections-further.patch][4.9]]
    [[file:4.11/mm-page_alloc-reduce-lock-sections-further.patch][4.11]]
* [   3.0 -   4.11] ARM: AT91: PIT: Remove irq handler when clock event is unused{C::feature::irq::setup rm irq handler in clk evnt mode selection}
  + [[file:3.0/arm-at91-pit-remove-irq-handler-when-clock-is-unused.patch][3.0]]
    [[file:3.2/arm-at91-pit-remove-irq-handler-when-clock-is-unused.patch][3.2]]
  M [[file:3.4/arm-at91-pit-remove-irq-handler-when-clock-is-unused.patch][3.4]]
    [[file:3.6/arm-at91-pit-remove-irq-handler-when-clock-is-unused.patch][3.6]]
    [[file:3.8/arm-at91-pit-remove-irq-handler-when-clock-is-unused.patch][3.8]]
    [[file:3.10/arm-at91-pit-remove-irq-handler-when-clock-is-unused.patch][3.10]]
    [[file:3.12/arm-at91-pit-remove-irq-handler-when-clock-is-unused.patch][3.12]]
  M [[file:3.14/arm-at91-pit-remove-irq-handler-when-clock-is-unused.patch][3.14]]
  m [[file:3.18/arm-at91-pit-remove-irq-handler-when-clock-is-unused.patch][3.18]]
    [[file:4.0/arm-at91-pit-remove-irq-handler-when-clock-is-unused.patch][4.0]]
  M [[file:4.1/arm-at91-pit-remove-irq-handler-when-clock-is-unused.patch][4.1]]
  M [[file:4.4/arm-at91-pit-remove-irq-handler-when-clock-is-unused.patch][4.4]]
  M [[file:4.6/arm-at91-pit-remove-irq-handler-when-clock-is-unused.patch][4.6]]
  M [[file:4.8/arm-at91-pit-remove-irq-handler-when-clock-is-unused.patch][4.8]]
    [[file:4.9/arm-at91-pit-remove-irq-handler-when-clock-is-unused.patch][4.9]]
    [[file:4.11/arm-at91-pit-remove-irq-handler-when-clock-is-unused.patch][4.11]]
* [   3.0 -   4.11] timer: delay waking softirqs from the jiffy tick{C::bug::unbalanced sched::irq::semantics::reorder fun}
  + [[file:3.0/timer-delay-waking-softirqs-from-the-jiffy-tick.patch][3.0]]
    [[file:3.2/timer-delay-waking-softirqs-from-the-jiffy-tick.patch][3.2]]
    [[file:3.4/timer-delay-waking-softirqs-from-the-jiffy-tick.patch][3.4]]
    [[file:3.6/timer-delay-waking-softirqs-from-the-jiffy-tick.patch][3.6]]
    [[file:3.8/timer-delay-waking-softirqs-from-the-jiffy-tick.patch][3.8]]
    [[file:3.10/timer-delay-waking-softirqs-from-the-jiffy-tick.patch][3.10]]
    [[file:3.12/timer-delay-waking-softirqs-from-the-jiffy-tick.patch][3.12]]
    [[file:3.14/timer-delay-waking-softirqs-from-the-jiffy-tick.patch][3.14]]
  m [[file:3.18/timer-delay-waking-softirqs-from-the-jiffy-tick.patch][3.18]]
  m [[file:4.0/timer-delay-waking-softirqs-from-the-jiffy-tick.patch][4.0]]
    [[file:4.1/timer-delay-waking-softirqs-from-the-jiffy-tick.patch][4.1]]
    [[file:4.4/timer-delay-waking-softirqs-from-the-jiffy-tick.patch][4.4]]
    [[file:4.6/timer-delay-waking-softirqs-from-the-jiffy-tick.patch][4.6]]
    [[file:4.8/timer-delay-waking-softirqs-from-the-jiffy-tick.patch][4.8]]
    [[file:4.9/timer-delay-waking-softirqs-from-the-jiffy-tick.patch][4.9]]
  m [[file:4.11/timer-delay-waking-softirqs-from-the-jiffy-tick.patch][4.11]]
* [   3.0 -   4.11] drivers: random: Reduce preempt disabled region{C::performance::preempt::smaller the preempt_disable section}
  + [[file:3.0/drivers-random-reduce-preempt-disabled-region.patch][3.0]]
    [[file:3.2/drivers-random-reduce-preempt-disabled-region.patch][3.2]]
  m [[file:3.4/drivers-random-reduce-preempt-disabled-region.patch][3.4]]
  m [[file:3.6/drivers-random-reduce-preempt-disabled-region.patch][3.6]]
    [[file:3.8/drivers-random-reduce-preempt-disabled-region.patch][3.8]]
    [[file:3.10/drivers-random-reduce-preempt-disabled-region.patch][3.10]]
  m [[file:3.12/drivers-random-reduce-preempt-disabled-region.patch][3.12]]
  M [[file:3.14/drivers-random-reduce-preempt-disabled-region.patch][3.14]]
    [[file:3.18/drivers-random-reduce-preempt-disabled-region.patch][3.18]]
    [[file:4.0/drivers-random-reduce-preempt-disabled-region.patch][4.0]]
    [[file:4.1/drivers-random-reduce-preempt-disabled-region.patch][4.1]]
    [[file:4.4/drivers-random-reduce-preempt-disabled-region.patch][4.4]]
    [[file:4.6/drivers-random-reduce-preempt-disabled-region.patch][4.6]]
    [[file:4.8/drivers-random-reduce-preempt-disabled-region.patch][4.8]]
    [[file:4.9/drivers-random-reduce-preempt-disabled-region.patch][4.9]]
    [[file:4.11/drivers-random-reduce-preempt-disabled-region.patch][4.11]]
* [   3.0 -   4.11] powerpc: Use generic rwsem on RT{C::feature::rtsupport::config gen_rwsem in rt}
  + [[file:3.0/power-use-generic-rwsem-on-rt.patch][3.0]]
    [[file:3.2/power-use-generic-rwsem-on-rt.patch][3.2]]
    [[file:3.4/power-use-generic-rwsem-on-rt.patch][3.4]]
    [[file:3.6/power-use-generic-rwsem-on-rt.patch][3.6]]
    [[file:3.8/power-use-generic-rwsem-on-rt.patch][3.8]]
    [[file:3.10/power-use-generic-rwsem-on-rt.patch][3.10]]
    [[file:3.12/power-use-generic-rwsem-on-rt.patch][3.12]]
    [[file:3.14/power-use-generic-rwsem-on-rt.patch][3.14]]
    [[file:3.18/power-use-generic-rwsem-on-rt.patch][3.18]]
    [[file:4.0/power-use-generic-rwsem-on-rt.patch][4.0]]
    [[file:4.1/power-use-generic-rwsem-on-rt.patch][4.1]]
    [[file:4.4/power-use-generic-rwsem-on-rt.patch][4.4]]
    [[file:4.6/power-use-generic-rwsem-on-rt.patch][4.6]]
    [[file:4.8/power-use-generic-rwsem-on-rt.patch][4.8]]
    [[file:4.9/power-use-generic-rwsem-on-rt.patch][4.9]]
    [[file:4.11/power-use-generic-rwsem-on-rt.patch][4.11]]
* [   3.0 -   4.11] spinlock: Split the lock types header{C::maintain::refactor::split funs to separate file}
  + [[file:3.0/spinlock-types-separate-raw.patch][3.0]]
    [[file:3.2/spinlock-types-separate-raw.patch][3.2]]
    [[file:3.4/spinlock-types-separate-raw.patch][3.4]]
    [[file:3.6/spinlock-types-separate-raw.patch][3.6]]
    [[file:3.8/spinlock-types-separate-raw.patch][3.8]]
    [[file:3.10/spinlock-types-separate-raw.patch][3.10]]
    [[file:3.12/spinlock-types-separate-raw.patch][3.12]]
    [[file:3.14/spinlock-types-separate-raw.patch][3.14]]
    [[file:3.18/spinlock-types-separate-raw.patch][3.18]]
    [[file:4.0/spinlock-types-separate-raw.patch][4.0]]
    [[file:4.1/spinlock-types-separate-raw.patch][4.1]]
    [[file:4.4/spinlock-types-separate-raw.patch][4.4]]
    [[file:4.6/spinlock-types-separate-raw.patch][4.6]]
    [[file:4.8/spinlock-types-separate-raw.patch][4.8]]
    [[file:4.9/spinlock-types-separate-raw.patch][4.9]]
    [[file:4.11/spinlock-types-separate-raw.patch][4.11]]
* [   3.0 -   4.11] sched: Do not account rcu_preempt_depth on RT in might_sleep(){C::feature::rtsupport::stop account rcu_preempt_depth on rt}
  + [[file:3.0/sched-might-sleep-do-not-account-rcu-depth.patch][3.0]]
  m [[file:3.2/sched-might-sleep-do-not-account-rcu-depth.patch][3.2]]
    [[file:3.4/sched-might-sleep-do-not-account-rcu-depth.patch][3.4]]
    [[file:3.6/sched-might-sleep-do-not-account-rcu-depth.patch][3.6]]
    [[file:3.8/sched-might-sleep-do-not-account-rcu-depth.patch][3.8]]
    [[file:3.10/sched-might-sleep-do-not-account-rcu-depth.patch][3.10]]
    [[file:3.12/sched-might-sleep-do-not-account-rcu-depth.patch][3.12]]
    [[file:3.14/sched-might-sleep-do-not-account-rcu-depth.patch][3.14]]
    [[file:3.18/sched-might-sleep-do-not-account-rcu-depth.patch][3.18]]
    [[file:4.0/sched-might-sleep-do-not-account-rcu-depth.patch][4.0]]
    [[file:4.1/sched-might-sleep-do-not-account-rcu-depth.patch][4.1]]
  M [[file:4.4/sched-might-sleep-do-not-account-rcu-depth.patch][4.4]]
    [[file:4.6/sched-might-sleep-do-not-account-rcu-depth.patch][4.6]]
    [[file:4.8/sched-might-sleep-do-not-account-rcu-depth.patch][4.8]]
    [[file:4.9/sched-might-sleep-do-not-account-rcu-depth.patch][4.9]]
    [[file:4.11/sched-might-sleep-do-not-account-rcu-depth.patch][4.11]]
* [   3.0 -   4.11] drivers/net: vortex fix locking issues{C::bug::??::irq::irq::replace with _nort}
  + [[file:3.0/drivers-net-vortex-fix-locking-issues.patch][3.0]]
    [[file:3.2/drivers-net-vortex-fix-locking-issues.patch][3.2]]
    [[file:3.4/drivers-net-vortex-fix-locking-issues.patch][3.4]]
    [[file:3.6/drivers-net-vortex-fix-locking-issues.patch][3.6]]
    [[file:3.8/drivers-net-vortex-fix-locking-issues.patch][3.8]]
    [[file:3.10/drivers-net-vortex-fix-locking-issues.patch][3.10]]
    [[file:3.12/drivers-net-vortex-fix-locking-issues.patch][3.12]]
    [[file:3.14/drivers-net-vortex-fix-locking-issues.patch][3.14]]
    [[file:3.18/drivers-net-vortex-fix-locking-issues.patch][3.18]]
    [[file:4.0/drivers-net-vortex-fix-locking-issues.patch][4.0]]
    [[file:4.1/drivers-net-vortex-fix-locking-issues.patch][4.1]]
    [[file:4.4/drivers-net-vortex-fix-locking-issues.patch][4.4]]
    [[file:4.6/drivers-net-vortex-fix-locking-issues.patch][4.6]]
    [[file:4.8/drivers-net-vortex-fix-locking-issues.patch][4.8]]
    [[file:4.9/drivers-net-vortex-fix-locking-issues.patch][4.9]]
    [[file:4.11/drivers-net-vortex-fix-locking-issues.patch][4.11]]
* [   3.0 -   4.11] sched: Use the proper LOCK_OFFSET for cond_resched(){C::feature::rtsupport::modify precompile condition}
  + [[file:3.0/cond-resched-lock-rt-tweak.patch][3.0]]
  M [[file:3.2/cond-resched-lock-rt-tweak.patch][3.2]]
    [[file:3.4/cond-resched-lock-rt-tweak.patch][3.4]]
    [[file:3.6/cond-resched-lock-rt-tweak.patch][3.6]]
    [[file:3.8/cond-resched-lock-rt-tweak.patch][3.8]]
    [[file:3.10/cond-resched-lock-rt-tweak.patch][3.10]]
    [[file:3.12/cond-resched-lock-rt-tweak.patch][3.12]]
    [[file:3.14/cond-resched-lock-rt-tweak.patch][3.14]]
    [[file:3.18/cond-resched-lock-rt-tweak.patch][3.18]]
    [[file:4.0/cond-resched-lock-rt-tweak.patch][4.0]]
    [[file:4.1/cond-resched-lock-rt-tweak.patch][4.1]]
  M [[file:4.4/cond-resched-lock-rt-tweak.patch][4.4]]
    [[file:4.6/cond-resched-lock-rt-tweak.patch][4.6]]
    [[file:4.8/cond-resched-lock-rt-tweak.patch][4.8]]
    [[file:4.9/cond-resched-lock-rt-tweak.patch][4.9]]
    [[file:4.11/cond-resched-lock-rt-tweak.patch][4.11]]
* [   3.0 -   4.11] mips: Disable highmem on RT{C::feature::rtsupport::disable highmem on rt}
  + [[file:3.0/mips-disable-highmem-on-rt.patch][3.0]]
    [[file:3.2/mips-disable-highmem-on-rt.patch][3.2]]
    [[file:3.4/mips-disable-highmem-on-rt.patch][3.4]]
    [[file:3.6/mips-disable-highmem-on-rt.patch][3.6]]
    [[file:3.8/mips-disable-highmem-on-rt.patch][3.8]]
    [[file:3.10/mips-disable-highmem-on-rt.patch][3.10]]
    [[file:3.12/mips-disable-highmem-on-rt.patch][3.12]]
    [[file:3.14/mips-disable-highmem-on-rt.patch][3.14]]
  M [[file:3.18/mips-disable-highmem-on-rt.patch][3.18]]
    [[file:4.0/mips-disable-highmem-on-rt.patch][4.0]]
    [[file:4.1/mips-disable-highmem-on-rt.patch][4.1]]
    [[file:4.4/mips-disable-highmem-on-rt.patch][4.4]]
    [[file:4.6/mips-disable-highmem-on-rt.patch][4.6]]
    [[file:4.8/mips-disable-highmem-on-rt.patch][4.8]]
    [[file:4.9/mips-disable-highmem-on-rt.patch][4.9]]
    [[file:4.11/mips-disable-highmem-on-rt.patch][4.11]]
* [   3.0 -   4.11] timers: Prepare for full preemption{C::feature::rtsupport::add a waitqueue for running timer}
  + [[file:3.0/timers-prepare-for-full-preemption.patch][3.0]]
    [[file:3.2/timers-prepare-for-full-preemption.patch][3.2]]
    [[file:3.4/timers-prepare-for-full-preemption.patch][3.4]]
  m [[file:3.6/timers-prepare-for-full-preemption.patch][3.6]]
  M [[file:3.8/timers-prepare-for-full-preemption.patch][3.8]]
  m [[file:3.10/timers-prepare-for-full-preemption.patch][3.10]]
    [[file:3.12/timers-prepare-for-full-preemption.patch][3.12]]
    [[file:3.14/timers-prepare-for-full-preemption.patch][3.14]]
  M [[file:3.18/timers-prepare-for-full-preemption.patch][3.18]]
    [[file:4.0/timers-prepare-for-full-preemption.patch][4.0]]
  M [[file:4.1/timers-prepare-for-full-preemption.patch][4.1]]
  M [[file:4.4/timers-prepare-for-full-preemption.patch][4.4]]
  M [[file:4.6/timers-prepare-for-full-preemption.patch][4.6]]
  M [[file:4.8/timers-prepare-for-full-preemption.patch][4.8]]
    [[file:4.9/timers-prepare-for-full-preemption.patch][4.9]]
  M [[file:4.11/timers-prepare-for-full-preemption.patch][4.11]]
* [   3.0 -   4.11] powerpc: Disable highmem on RT{C::feature::rtsupport::disable highmem on rt}
  + [[file:3.0/power-disable-highmem-on-rt.patch][3.0]]
    [[file:3.2/power-disable-highmem-on-rt.patch][3.2]]
    [[file:3.4/power-disable-highmem-on-rt.patch][3.4]]
  m [[file:3.6/power-disable-highmem-on-rt.patch][3.6]]
    [[file:3.8/power-disable-highmem-on-rt.patch][3.8]]
    [[file:3.10/power-disable-highmem-on-rt.patch][3.10]]
    [[file:3.12/power-disable-highmem-on-rt.patch][3.12]]
    [[file:3.14/power-disable-highmem-on-rt.patch][3.14]]
    [[file:3.18/power-disable-highmem-on-rt.patch][3.18]]
    [[file:4.0/power-disable-highmem-on-rt.patch][4.0]]
    [[file:4.1/power-disable-highmem-on-rt.patch][4.1]]
    [[file:4.4/power-disable-highmem-on-rt.patch][4.4]]
    [[file:4.6/power-disable-highmem-on-rt.patch][4.6]]
    [[file:4.8/power-disable-highmem-on-rt.patch][4.8]]
    [[file:4.9/power-disable-highmem-on-rt.patch][4.9]]
    [[file:4.11/power-disable-highmem-on-rt.patch][4.11]]
* [   3.0 -   4.11] signal: Make __lock_task_sighand() RT aware{C::feature::rtsupport::replace with _nort}
  + [[file:3.0/signal-fix-up-rcu-wreckage.patch][3.0]]
    [[file:3.2/signal-fix-up-rcu-wreckage.patch][3.2]]
    [[file:3.4/signal-fix-up-rcu-wreckage.patch][3.4]]
    [[file:3.6/signal-fix-up-rcu-wreckage.patch][3.6]]
    [[file:3.8/signal-fix-up-rcu-wreckage.patch][3.8]]
    [[file:3.10/signal-fix-up-rcu-wreckage.patch][3.10]]
    [[file:3.12/signal-fix-up-rcu-wreckage.patch][3.12]]
    [[file:3.14/signal-fix-up-rcu-wreckage.patch][3.14]]
  m [[file:3.18/signal-fix-up-rcu-wreckage.patch][3.18]]
  m [[file:4.0/signal-fix-up-rcu-wreckage.patch][4.0]]
    [[file:4.1/signal-fix-up-rcu-wreckage.patch][4.1]]
    [[file:4.4/signal-fix-up-rcu-wreckage.patch][4.4]]
    [[file:4.6/signal-fix-up-rcu-wreckage.patch][4.6]]
    [[file:4.8/signal-fix-up-rcu-wreckage.patch][4.8]]
    [[file:4.9/signal-fix-up-rcu-wreckage.patch][4.9]]
    [[file:4.11/signal-fix-up-rcu-wreckage.patch][4.11]]
* [   3.0 -   4.11] sched: Take RT softirq semantics into account in cond_resched(){C::feature::rtsupport::make fun rt-lize}
  + [[file:3.0/cond-resched-softirq-rt.patch][3.0]]
    [[file:3.2/cond-resched-softirq-rt.patch][3.2]]
    [[file:3.4/cond-resched-softirq-rt.patch][3.4]]
    [[file:3.6/cond-resched-softirq-rt.patch][3.6]]
    [[file:3.8/cond-resched-softirq-rt.patch][3.8]]
    [[file:3.10/cond-resched-softirq-rt.patch][3.10]]
  m [[file:3.12/cond-resched-softirq-rt.patch][3.12]]
    [[file:3.14/cond-resched-softirq-rt.patch][3.14]]
    [[file:3.18/cond-resched-softirq-rt.patch][3.18]]
  m [[file:4.0/cond-resched-softirq-rt.patch][4.0]]
    [[file:4.1/cond-resched-softirq-rt.patch][4.1]]
    [[file:4.4/cond-resched-softirq-rt.patch][4.4]]
    [[file:4.6/cond-resched-softirq-rt.patch][4.6]]
    [[file:4.8/cond-resched-softirq-rt.patch][4.8]]
    [[file:4.9/cond-resched-softirq-rt.patch][4.9]]
    [[file:4.11/cond-resched-softirq-rt.patch][4.11]]
* [   3.0 -   4.11] mm/swap: Convert to percpu locked{C::feature::rtsupport::add lock}
  + [[file:3.0/mm-convert-swap-to-percpu-locked.patch][3.0]]
    [[file:3.2/mm-convert-swap-to-percpu-locked.patch][3.2]]
  M [[file:3.4/mm-convert-swap-to-percpu-locked.patch][3.4]]
    [[file:3.6/mm-convert-swap-to-percpu-locked.patch][3.6]]
  M [[file:3.8/mm-convert-swap-to-percpu-locked.patch][3.8]]
  M [[file:3.10/mm-convert-swap-to-percpu-locked.patch][3.10]]
  M [[file:3.12/mm-convert-swap-to-percpu-locked.patch][3.12]]
  m [[file:3.14/mm-convert-swap-to-percpu-locked.patch][3.14]]
  m [[file:3.18/mm-convert-swap-to-percpu-locked.patch][3.18]]
    [[file:4.0/mm-convert-swap-to-percpu-locked.patch][4.0]]
  M [[file:4.1/mm-convert-swap-to-percpu-locked.patch][4.1]]
  m [[file:4.4/mm-convert-swap-to-percpu-locked.patch][4.4]]
  M [[file:4.6/mm-convert-swap-to-percpu-locked.patch][4.6]]
  m [[file:4.8/mm-convert-swap-to-percpu-locked.patch][4.8]]
    [[file:4.9/mm-convert-swap-to-percpu-locked.patch][4.9]]
  M [[file:4.11/mm-convert-swap-to-percpu-locked.patch][4.11]]
* [   3.0 -   4.11] mm: page_alloc: rt-friendly per-cpu pages{C::feature::rtsupport::add lock}
  + [[file:3.0/mm-page_alloc-rt-friendly-per-cpu-pages.patch][3.0]]
    [[file:3.2/mm-page_alloc-rt-friendly-per-cpu-pages.patch][3.2]]
  M [[file:3.4/mm-page_alloc-rt-friendly-per-cpu-pages.patch][3.4]]
  M [[file:3.6/mm-page_alloc-rt-friendly-per-cpu-pages.patch][3.6]]
  M [[file:3.8/mm-page_alloc-rt-friendly-per-cpu-pages.patch][3.8]]
  M [[file:3.10/mm-page_alloc-rt-friendly-per-cpu-pages.patch][3.10]]
  M [[file:3.12/mm-page_alloc-rt-friendly-per-cpu-pages.patch][3.12]]
  M [[file:3.14/mm-page_alloc-rt-friendly-per-cpu-pages.patch][3.14]]
  M [[file:3.18/mm-page_alloc-rt-friendly-per-cpu-pages.patch][3.18]]
  M [[file:4.0/mm-page_alloc-rt-friendly-per-cpu-pages.patch][4.0]]
  m [[file:4.1/mm-page_alloc-rt-friendly-per-cpu-pages.patch][4.1]]
  M [[file:4.4/mm-page_alloc-rt-friendly-per-cpu-pages.patch][4.4]]
  m [[file:4.6/mm-page_alloc-rt-friendly-per-cpu-pages.patch][4.6]]
  M [[file:4.8/mm-page_alloc-rt-friendly-per-cpu-pages.patch][4.8]]
    [[file:4.9/mm-page_alloc-rt-friendly-per-cpu-pages.patch][4.9]]
  M [[file:4.11/mm-page_alloc-rt-friendly-per-cpu-pages.patch][4.11]]
* [   3.0 -   4.11] Add localversion for -RT release{C::maintain::donothing}
  + [[file:3.0/localversion.patch][3.0]]
    [[file:3.2/localversion.patch][3.2]]
    [[file:3.4/localversion.patch][3.4]]
    [[file:3.6/localversion.patch][3.6]]
    [[file:3.8/localversion.patch][3.8]]
    [[file:3.10/localversion.patch][3.10]]
    [[file:3.12/localversion.patch][3.12]]
    [[file:3.14/localversion.patch][3.14]]
    [[file:3.18/localversion.patch][3.18]]
    [[file:4.0/localversion.patch][4.0]]
    [[file:4.1/localversion.patch][4.1]]
    [[file:4.4/localversion.patch][4.4]]
    [[file:4.6/localversion.patch][4.6]]
    [[file:4.8/localversion.patch][4.8]]
    [[file:4.9/localversion.patch][4.9]]
    [[file:4.11/localversion.patch][4.11]]
* [   3.0 -   4.11] panic: skip get_random_bytes for RT_FULL in init_oops_id{C::feature::rtsupport::disable random on rt}}
  + [[file:3.0/panic-disable-random-on-rt.patch][3.0]]
    [[file:3.2/panic-disable-random-on-rt.patch][3.2]]
    [[file:3.4/panic-disable-random-on-rt.patch][3.4]]
    [[file:3.6/panic-disable-random-on-rt.patch][3.6]]
    [[file:3.8/panic-disable-random-on-rt.patch][3.8]]
    [[file:3.10/panic-disable-random-on-rt.patch][3.10]]
    [[file:3.12/panic-disable-random-on-rt.patch][3.12]]
    [[file:3.14/panic-disable-random-on-rt.patch][3.14]]
    [[file:3.18/panic-disable-random-on-rt.patch][3.18]]
    [[file:4.0/panic-disable-random-on-rt.patch][4.0]]
    [[file:4.1/panic-disable-random-on-rt.patch][4.1]]
    [[file:4.4/panic-disable-random-on-rt.patch][4.4]]
    [[file:4.6/panic-disable-random-on-rt.patch][4.6]]
    [[file:4.8/panic-disable-random-on-rt.patch][4.8]]
    [[file:4.9/panic-disable-random-on-rt.patch][4.9]]
    [[file:4.11/panic-disable-random-on-rt.patch][4.11]]
* [   3.0 -   4.11] rt: Provide PREEMPT_RT_BASE config switch{C::feature::rtsupport::add PREEMPT_RT_BASE entry}
  + [[file:3.0/rt-preempt-base-config.patch][3.0]]
  M [[file:3.2/rt-preempt-base-config.patch][3.2]]
  m [[file:3.4/rt-preempt-base-config.patch][3.4]]
    [[file:3.6/rt-preempt-base-config.patch][3.6]]
    [[file:3.8/rt-preempt-base-config.patch][3.8]]
    [[file:3.10/rt-preempt-base-config.patch][3.10]]
  M [[file:3.12/rt-preempt-base-config.patch][3.12]]
    [[file:3.14/rt-preempt-base-config.patch][3.14]]
    [[file:3.18/rt-preempt-base-config.patch][3.18]]
    [[file:4.0/rt-preempt-base-config.patch][4.0]]
    [[file:4.1/rt-preempt-base-config.patch][4.1]]
    [[file:4.4/rt-preempt-base-config.patch][4.4]]
    [[file:4.6/rt-preempt-base-config.patch][4.6]]
    [[file:4.8/rt-preempt-base-config.patch][4.8]]
    [[file:4.9/rt-preempt-base-config.patch][4.9]]
    [[file:4.11/rt-preempt-base-config.patch][4.11]]
* [   3.0 -   4.11] hrtimers: Prepare full preemption{C::feature::hrtimer::add fun}
  + [[file:3.0/hrtimers-prepare-full-preemption.patch][3.0]]
    [[file:3.2/hrtimers-prepare-full-preemption.patch][3.2]]
    [[file:3.4/hrtimers-prepare-full-preemption.patch][3.4]]
    [[file:3.6/hrtimers-prepare-full-preemption.patch][3.6]]
    [[file:3.8/hrtimers-prepare-full-preemption.patch][3.8]]
    [[file:3.10/hrtimers-prepare-full-preemption.patch][3.10]]
    [[file:3.12/hrtimers-prepare-full-preemption.patch][3.12]]
    [[file:3.14/hrtimers-prepare-full-preemption.patch][3.14]]
  m [[file:3.18/hrtimers-prepare-full-preemption.patch][3.18]]
    [[file:4.0/hrtimers-prepare-full-preemption.patch][4.0]]
  M [[file:4.1/hrtimers-prepare-full-preemption.patch][4.1]]
  M [[file:4.4/hrtimers-prepare-full-preemption.patch][4.4]]
  m [[file:4.6/hrtimers-prepare-full-preemption.patch][4.6]]
  m [[file:4.8/hrtimers-prepare-full-preemption.patch][4.8]]
    [[file:4.9/hrtimers-prepare-full-preemption.patch][4.9]]
  M [[file:4.11/hrtimers-prepare-full-preemption.patch][4.11]]
* [   3.0 -   4.11] tracing: Add latency histograms{C::feature::trace::add latency histograms}
  + [[file:3.0/latency-hist.patch][3.0]]
  M [[file:3.2/latency-hist.patch][3.2]]
    [[file:3.4/latency-hist.patch][3.4]]
  M [[file:3.6/latency-hist.patch][3.6]]
    [[file:3.8/latency-hist.patch][3.8]]
    [[file:3.10/latency-hist.patch][3.10]]
    [[file:3.12/latency-hist.patch][3.12]]
    [[file:3.14/latency-hist.patch][3.14]]
  m [[file:3.18/latency-hist.patch][3.18]]
  m [[file:4.0/latency-hist.patch][4.0]]
  m [[file:4.1/latency-hist.patch][4.1]]
  M [[file:4.4/latency-hist.patch][4.4]]
  M [[file:4.6/latency-hist.patch][4.6]]
    [[file:4.8/latency-hist.patch][4.8]]
  m [[file:4.9/latency-hist.patch][4.9]]
  m [[file:4.11/latency-hist.patch][4.11]]
* [   3.0 -   4.11] fs: namespace preemption fix{C::feature::rtsupport::enclose with preempt_enable}
  + [[file:3.0/fs-namespace-preemption-fix.patch][3.0]]
    [[file:3.2/fs-namespace-preemption-fix.patch][3.2]]
  M [[file:3.4/fs-namespace-preemption-fix.patch][3.4]]
    [[file:3.6/fs-namespace-preemption-fix.patch][3.6]]
  M [[file:3.8/fs-namespace-preemption-fix.patch][3.8]]
    [[file:3.10/fs-namespace-preemption-fix.patch][3.10]]
    [[file:3.12/fs-namespace-preemption-fix.patch][3.12]]
    [[file:3.14/fs-namespace-preemption-fix.patch][3.14]]
    [[file:3.18/fs-namespace-preemption-fix.patch][3.18]]
    [[file:4.0/fs-namespace-preemption-fix.patch][4.0]]
    [[file:4.1/fs-namespace-preemption-fix.patch][4.1]]
    [[file:4.4/fs-namespace-preemption-fix.patch][4.4]]
    [[file:4.6/fs-namespace-preemption-fix.patch][4.6]]
    [[file:4.8/fs-namespace-preemption-fix.patch][4.8]]
    [[file:4.9/fs-namespace-preemption-fix.patch][4.9]]
    [[file:4.11/fs-namespace-preemption-fix.patch][4.11]]
* [   3.0 -   4.11] debugobjects: Make RT aware{C::feature::rtsupport::add check preempt cnt&irq disable, reorder printk debuginfo}
  + [[file:3.0/debugobjects-rt.patch][3.0]]
    [[file:3.2/debugobjects-rt.patch][3.2]]
    [[file:3.4/debugobjects-rt.patch][3.4]]
  M [[file:3.6/debugobjects-rt.patch][3.6]]
    [[file:3.8/debugobjects-rt.patch][3.8]]
    [[file:3.10/debugobjects-rt.patch][3.10]]
    [[file:3.12/debugobjects-rt.patch][3.12]]
    [[file:3.14/debugobjects-rt.patch][3.14]]
    [[file:3.18/debugobjects-rt.patch][3.18]]
    [[file:4.0/debugobjects-rt.patch][4.0]]
    [[file:4.1/debugobjects-rt.patch][4.1]]
    [[file:4.4/debugobjects-rt.patch][4.4]]
    [[file:4.6/debugobjects-rt.patch][4.6]]
    [[file:4.8/debugobjects-rt.patch][4.8]]
    [[file:4.9/debugobjects-rt.patch][4.9]]
    [[file:4.11/debugobjects-rt.patch][4.11]]
* [   3.0 -   4.11] input: gameport: Do not disable interrupts on PREEMPT_RT{C::feature::rtsupport::replace with _nort}
  + [[file:3.0/inpt-gameport-use-local-irq-nort.patch][3.0]]
    [[file:3.2/inpt-gameport-use-local-irq-nort.patch][3.2]]
    [[file:3.4/inpt-gameport-use-local-irq-nort.patch][3.4]]
    [[file:3.6/inpt-gameport-use-local-irq-nort.patch][3.6]]
    [[file:3.8/inpt-gameport-use-local-irq-nort.patch][3.8]]
    [[file:3.10/inpt-gameport-use-local-irq-nort.patch][3.10]]
    [[file:3.12/inpt-gameport-use-local-irq-nort.patch][3.12]]
    [[file:3.14/inpt-gameport-use-local-irq-nort.patch][3.14]]
    [[file:3.18/inpt-gameport-use-local-irq-nort.patch][3.18]]
    [[file:4.0/inpt-gameport-use-local-irq-nort.patch][4.0]]
    [[file:4.1/inpt-gameport-use-local-irq-nort.patch][4.1]]
  M [[file:4.4/inpt-gameport-use-local-irq-nort.patch][4.4]]
    [[file:4.6/inpt-gameport-use-local-irq-nort.patch][4.6]]
    [[file:4.8/inpt-gameport-use-local-irq-nort.patch][4.8]]
    [[file:4.9/inpt-gameport-use-local-irq-nort.patch][4.9]]
    [[file:4.11/inpt-gameport-use-local-irq-nort.patch][4.11]]
* [   3.0 -   4.11] clocksource: TCLIB: Allow higher clock rates for clock events{C::feature::clk::add check to allow higher clk rate}
  + [[file:3.0/clocksource-tclib-allow-higher-clockrates.patch][3.0]]
    [[file:3.2/clocksource-tclib-allow-higher-clockrates.patch][3.2]]
  m [[file:3.4/clocksource-tclib-allow-higher-clockrates.patch][3.4]]
    [[file:3.6/clocksource-tclib-allow-higher-clockrates.patch][3.6]]
  m [[file:3.8/clocksource-tclib-allow-higher-clockrates.patch][3.8]]
  M [[file:3.10/clocksource-tclib-allow-higher-clockrates.patch][3.10]]
    [[file:3.12/clocksource-tclib-allow-higher-clockrates.patch][3.12]]
  M [[file:3.14/clocksource-tclib-allow-higher-clockrates.patch][3.14]]
  M [[file:3.18/clocksource-tclib-allow-higher-clockrates.patch][3.18]]
    [[file:4.0/clocksource-tclib-allow-higher-clockrates.patch][4.0]]
    [[file:4.1/clocksource-tclib-allow-higher-clockrates.patch][4.1]]
  M [[file:4.4/clocksource-tclib-allow-higher-clockrates.patch][4.4]]
  m [[file:4.6/clocksource-tclib-allow-higher-clockrates.patch][4.6]]
    [[file:4.8/clocksource-tclib-allow-higher-clockrates.patch][4.8]]
    [[file:4.9/clocksource-tclib-allow-higher-clockrates.patch][4.9]]
    [[file:4.11/clocksource-tclib-allow-higher-clockrates.patch][4.11]]
* [   3.0 -   4.11] hotplug: Lightweight get online cpus{C::feature::cpu::add fun to get online cpu}
  + [[file:3.0/hotplug-light-get-online-cpus.patch][3.0]]
    [[file:3.2/hotplug-light-get-online-cpus.patch][3.2]]
    [[file:3.4/hotplug-light-get-online-cpus.patch][3.4]]
    [[file:3.6/hotplug-light-get-online-cpus.patch][3.6]]
  m [[file:3.8/hotplug-light-get-online-cpus.patch][3.8]]
  M [[file:3.10/hotplug-light-get-online-cpus.patch][3.10]]
  M [[file:3.12/hotplug-light-get-online-cpus.patch][3.12]]
  M [[file:3.14/hotplug-light-get-online-cpus.patch][3.14]]
  M [[file:3.18/hotplug-light-get-online-cpus.patch][3.18]]
  M [[file:4.0/hotplug-light-get-online-cpus.patch][4.0]]
  M [[file:4.1/hotplug-light-get-online-cpus.patch][4.1]]
  m [[file:4.4/hotplug-light-get-online-cpus.patch][4.4]]
  M [[file:4.6/hotplug-light-get-online-cpus.patch][4.6]]
    [[file:4.8/hotplug-light-get-online-cpus.patch][4.8]]
    [[file:4.9/hotplug-light-get-online-cpus.patch][4.9]]
  M [[file:4.11/hotplug-light-get-online-cpus.patch][4.11]]
* [   3.0 -   4.11] ARM: at91: tclib: Default to tclib timer for RT{C::feature::rtsupport::use ATMEL_TCLIB when rt_full}
  + [[file:3.0/arm-at91-tclib-default-to-tclib-timer-for-rt.patch][3.0]]
    [[file:3.2/arm-at91-tclib-default-to-tclib-timer-for-rt.patch][3.2]]
    [[file:3.4/arm-at91-tclib-default-to-tclib-timer-for-rt.patch][3.4]]
    [[file:3.6/arm-at91-tclib-default-to-tclib-timer-for-rt.patch][3.6]]
    [[file:3.8/arm-at91-tclib-default-to-tclib-timer-for-rt.patch][3.8]]
    [[file:3.10/arm-at91-tclib-default-to-tclib-timer-for-rt.patch][3.10]]
    [[file:3.12/arm-at91-tclib-default-to-tclib-timer-for-rt.patch][3.12]]
    [[file:3.14/arm-at91-tclib-default-to-tclib-timer-for-rt.patch][3.14]]
    [[file:3.18/arm-at91-tclib-default-to-tclib-timer-for-rt.patch][3.18]]
    [[file:4.0/arm-at91-tclib-default-to-tclib-timer-for-rt.patch][4.0]]
    [[file:4.1/arm-at91-tclib-default-to-tclib-timer-for-rt.patch][4.1]]
    [[file:4.4/arm-at91-tclib-default-to-tclib-timer-for-rt.patch][4.4]]
    [[file:4.6/arm-at91-tclib-default-to-tclib-timer-for-rt.patch][4.6]]
    [[file:4.8/arm-at91-tclib-default-to-tclib-timer-for-rt.patch][4.8]]
    [[file:4.9/arm-at91-tclib-default-to-tclib-timer-for-rt.patch][4.9]]
    [[file:4.11/arm-at91-tclib-default-to-tclib-timer-for-rt.patch][4.11]]
* [   3.0 -   4.11] fs/epoll: Do not disable preemption on RT{C::feature::rtsupport::replace with _light}
  + [[file:3.0/epoll-use-get-cpu-light.patch][3.0]]
    [[file:3.2/epoll-use-get-cpu-light.patch][3.2]]
  m [[file:3.4/epoll-use-get-cpu-light.patch][3.4]]
    [[file:3.6/epoll-use-get-cpu-light.patch][3.6]]
    [[file:3.8/epoll-use-get-cpu-light.patch][3.8]]
    [[file:3.10/epoll-use-get-cpu-light.patch][3.10]]
    [[file:3.12/epoll-use-get-cpu-light.patch][3.12]]
    [[file:3.14/epoll-use-get-cpu-light.patch][3.14]]
    [[file:3.18/epoll-use-get-cpu-light.patch][3.18]]
    [[file:4.0/epoll-use-get-cpu-light.patch][4.0]]
    [[file:4.1/epoll-use-get-cpu-light.patch][4.1]]
    [[file:4.4/epoll-use-get-cpu-light.patch][4.4]]
    [[file:4.6/epoll-use-get-cpu-light.patch][4.6]]
    [[file:4.8/epoll-use-get-cpu-light.patch][4.8]]
    [[file:4.9/epoll-use-get-cpu-light.patch][4.9]]
    [[file:4.11/epoll-use-get-cpu-light.patch][4.11]]
* [   3.0 -   4.11] net/wireless: Use WARN_ON_NORT(){C::feature::debuginfo::warn only nort}
  + [[file:3.0/net-wireless-warn-nort.patch][3.0]]
    [[file:3.2/net-wireless-warn-nort.patch][3.2]]
    [[file:3.4/net-wireless-warn-nort.patch][3.4]]
    [[file:3.6/net-wireless-warn-nort.patch][3.6]]
  m [[file:3.8/net-wireless-warn-nort.patch][3.8]]
    [[file:3.10/net-wireless-warn-nort.patch][3.10]]
    [[file:3.12/net-wireless-warn-nort.patch][3.12]]
    [[file:3.14/net-wireless-warn-nort.patch][3.14]]
    [[file:3.18/net-wireless-warn-nort.patch][3.18]]
    [[file:4.0/net-wireless-warn-nort.patch][4.0]]
    [[file:4.1/net-wireless-warn-nort.patch][4.1]]
    [[file:4.4/net-wireless-warn-nort.patch][4.4]]
    [[file:4.6/net-wireless-warn-nort.patch][4.6]]
  m [[file:4.8/net-wireless-warn-nort.patch][4.8]]
    [[file:4.9/net-wireless-warn-nort.patch][4.9]]
    [[file:4.11/net-wireless-warn-nort.patch][4.11]]
* [   3.0 -   4.11] trace: Add migrate-disabled counter to tracing output{C::feature::trace::add migrate_disable trace in rt}
  + [[file:3.0/ftrace-migrate-disable-tracing.patch][3.0]]
    [[file:3.2/ftrace-migrate-disable-tracing.patch][3.2]]
  m [[file:3.4/ftrace-migrate-disable-tracing.patch][3.4]]
    [[file:3.6/ftrace-migrate-disable-tracing.patch][3.6]]
    [[file:3.8/ftrace-migrate-disable-tracing.patch][3.8]]
  M [[file:3.10/ftrace-migrate-disable-tracing.patch][3.10]]
    [[file:3.12/ftrace-migrate-disable-tracing.patch][3.12]]
  M [[file:3.14/ftrace-migrate-disable-tracing.patch][3.14]]
  M [[file:3.18/ftrace-migrate-disable-tracing.patch][3.18]]
  M [[file:4.0/ftrace-migrate-disable-tracing.patch][4.0]]
  M [[file:4.1/ftrace-migrate-disable-tracing.patch][4.1]]
  m [[file:4.4/ftrace-migrate-disable-tracing.patch][4.4]]
    [[file:4.6/ftrace-migrate-disable-tracing.patch][4.6]]
    [[file:4.8/ftrace-migrate-disable-tracing.patch][4.8]]
    [[file:4.9/ftrace-migrate-disable-tracing.patch][4.9]]
  m [[file:4.11/ftrace-migrate-disable-tracing.patch][4.11]]
* [   3.0 -   4.11] locking: Disable spin on owner for RT{C::feature::rtsupport::no spin mutex on rt}
  + [[file:3.0/mutex-no-spin-on-rt.patch][3.0]]
    [[file:3.2/mutex-no-spin-on-rt.patch][3.2]]
    [[file:3.4/mutex-no-spin-on-rt.patch][3.4]]
    [[file:3.6/mutex-no-spin-on-rt.patch][3.6]]
  M [[file:3.8/mutex-no-spin-on-rt.patch][3.8]]
    [[file:3.10/mutex-no-spin-on-rt.patch][3.10]]
    [[file:3.12/mutex-no-spin-on-rt.patch][3.12]]
    [[file:3.14/mutex-no-spin-on-rt.patch][3.14]]
  M [[file:3.18/mutex-no-spin-on-rt.patch][3.18]]
  m [[file:4.0/mutex-no-spin-on-rt.patch][4.0]]
    [[file:4.1/mutex-no-spin-on-rt.patch][4.1]]
    [[file:4.4/mutex-no-spin-on-rt.patch][4.4]]
    [[file:4.6/mutex-no-spin-on-rt.patch][4.6]]
    [[file:4.8/mutex-no-spin-on-rt.patch][4.8]]
    [[file:4.9/mutex-no-spin-on-rt.patch][4.9]]
  M [[file:4.11/mutex-no-spin-on-rt.patch][4.11]]
* [   3.0 -   4.11] jump-label: disable if stop_machine() is used{C::feature::rtsupport::disable jump label in rt}
  + [[file:3.0/jump-label-rt.patch][3.0]]
    [[file:3.2/jump-label-rt.patch][3.2]]
  M [[file:3.4/jump-label-rt.patch][3.4]]
    [[file:3.6/jump-label-rt.patch][3.6]]
    [[file:3.8/jump-label-rt.patch][3.8]]
    [[file:3.10/jump-label-rt.patch][3.10]]
  m [[file:3.12/jump-label-rt.patch][3.12]]
  m [[file:3.14/jump-label-rt.patch][3.14]]
    [[file:3.18/jump-label-rt.patch][3.18]]
    [[file:4.0/jump-label-rt.patch][4.0]]
  M [[file:4.1/jump-label-rt.patch][4.1]]
  M [[file:4.4/jump-label-rt.patch][4.4]]
  M [[file:4.6/jump-label-rt.patch][4.6]]
  m [[file:4.8/jump-label-rt.patch][4.8]]
    [[file:4.9/jump-label-rt.patch][4.9]]
    [[file:4.11/jump-label-rt.patch][4.11]]
* [   3.0 -   4.11] x86/ioapic: Do not unmask io_apic when interrupt is in progress{C::feature::rtsupport::Do not unmask io_apic when interrupt is in progress}
  + [[file:3.0/x86-io-apic-migra-no-unmask.patch][3.0]]
    [[file:3.2/x86-io-apic-migra-no-unmask.patch][3.2]]
  m [[file:3.4/x86-io-apic-migra-no-unmask.patch][3.4]]
    [[file:3.6/x86-io-apic-migra-no-unmask.patch][3.6]]
    [[file:3.8/x86-io-apic-migra-no-unmask.patch][3.8]]
    [[file:3.10/x86-io-apic-migra-no-unmask.patch][3.10]]
    [[file:3.12/x86-io-apic-migra-no-unmask.patch][3.12]]
    [[file:3.14/x86-io-apic-migra-no-unmask.patch][3.14]]
    [[file:3.18/x86-io-apic-migra-no-unmask.patch][3.18]]
    [[file:4.0/x86-io-apic-migra-no-unmask.patch][4.0]]
    [[file:4.1/x86-io-apic-migra-no-unmask.patch][4.1]]
  m [[file:4.4/x86-io-apic-migra-no-unmask.patch][4.4]]
    [[file:4.6/x86-io-apic-migra-no-unmask.patch][4.6]]
    [[file:4.8/x86-io-apic-migra-no-unmask.patch][4.8]]
    [[file:4.9/x86-io-apic-migra-no-unmask.patch][4.9]]
    [[file:4.11/x86-io-apic-migra-no-unmask.patch][4.11]]
* [   3.2         ] wait: Provide __wake_up_all_locked{C::maintain::refactor::add a var to extend fun to wake up all}
  + [[file:3.2/wait-provide-__wake_up_all_locked.patch][3.2]]
  - 3.4
* [   3.2         ] wait-simple: Simple waitqueue implementation{C::feature&performance::waitqueue::implement a slim version of waitqueue}
  + [[file:3.2/wait-simple-version.patch][3.2]]
  - 3.4
* [   3.2         ] printk: Disable migration instead of preemption{C::bug::crash::preempt::preempt::replace preempt_disable with migrate_disable}
  + [[file:3.2/printk-disable-migration-instead-of-preemption.patch][3.2]]
  - 3.4
* [   3.2         ] acpi-gpe-use-wait-simple.patch{C::performance::sched::use simple waitqueue}
  + [[file:3.2/acpi-gpe-use-wait-simple.patch][3.2]]
  - 3.4
* [   3.2         ] powerpc: wsp: Mark opb cascade handler IRQF_NO_THREAD{C::feature::irq::mark irq with hard irq}
  + [[file:3.2/powerpc-wsp-opb-mark-demux-handler-nothread.patch][3.2]]
  - 3.4
* [   3.2         ] mm: memcg: shorten preempt-disabled section around event checks{C::performance::preempt::merge two fun, shorten disable preempt section}
  + [[file:3.2/mm-memcg-shorten-preempt-disabled-section-around-event-checks.patch][3.2]]
  - 3.4
* [   3.2         ] powerpc: Mark IPI interrupts IRQF_NO_THREAD{C::feature::rtsupport::rm irq thread flag}
  + [[file:3.2/powerpc-markipi-interrupts-nothread.patch][3.2]]
  - 3.4
* [   3.2         ] sched: Keep period timer ticking when throttling active{C::bug::hang::time::semantics::keep timer alive}
  + [[file:3.2/sched-keep-period-timer-alive-when-throttled.patch][3.2]]
  - 3.4
* [   3.2         ] ACPI: Convert embedded controller lock to raw spinlock{C::bug::sched::atomicity::irq::replace with raw}
  + [[file:3.2/acpi-make-ec-lock-raw-as-well.patch][3.2]]
  - 3.4
* [   3.2         ] acpi: Make gbl_[hardware|gpe]_lock raw{C::feature::rtsupport::replace with raw}
  + [[file:3.2/acpi-make-gbl-hardware-lock-raw.patch][3.2]]
  - 3.4
* [   3.2         ] sched: Do not throttle due to PI boosting{C::feature::sched::prevent rt_runtime boosting}
  + [[file:3.2/sched-prevent-boosting-from-throttling.patch][3.2]]
  - 3.4
* [   3.2         ] x86: Call idle notifier after irq_enter(){C::bug::??::irq::order::call irq_enter first}
  + [[file:3.2/x86_64-patch-for-idle-notifiers.patch][3.2]]
  - 3.4
* [   3.2 -    3.4] slab, lockdep: Annotate all slab caches{C::maintain::refactor::add dummy funs}
  + [[file:3.2/re-possible-slab-deadlock-while-doing-ifenslave-1.patch][3.2]]
    [[file:3.4/re-possible-slab-deadlock-while-doing-ifenslave-1.patch][3.4]]
  - 3.6
* [   3.2 -    3.4] workqueue: Fix cpuhotplug trainwreck{C::feature::sched::new wq to not respect cpu affinity}
  + [[file:3.2/workqueue-sanity.patch][3.2]]
    [[file:3.4/workqueue-sanity.patch][3.4]]
  - 3.6
* [   3.2 -    3.4] slab: Fix __do_drain to use the right array cache{C::bug::??::??::??::replace with rt safe fun}
  + [[file:3.2/rt-slab-fix-__do_drain-to-use-the-right-array-cache.patch][3.2]]
    [[file:3.4/rt-slab-fix-__do_drain-to-use-the-right-array-cache.patch][3.4]]
  - 3.6
* [   3.2 -    3.4] hotplug-stuff.patch{C::feature::sched::add cases to not take lock for non handled cases}
  + [[file:3.2/workqueue-more-hotplug-fallout.patch][3.2]]
    [[file:3.4/workqueue-more-hotplug-fallout.patch][3.4]]
  - 3.6
* [   3.2 -    3.4] workqueue: Fix PF_THREAD_BOUND abuse{C::feature::rtsupport::add flag to bound thread to a single cpu}
  + [[file:3.2/workqueue-fix-PF_THREAD_BOUND.patch][3.2]]
    [[file:3.4/workqueue-fix-PF_THREAD_BOUND.patch][3.4]]
  - 3.6
* [   3.2 -    3.4] ring-buffer: Convert reader_lock from raw_spin_lock into spin_lock{C::feature::rtsupport::add fun to converd rdlock to spinlock}
  + [[file:3.2/rt-ring-buffer-convert-reader_lock-from-raw_spin_lock-into-spin_lock.patch][3.2]]
    [[file:3.4/rt-ring-buffer-convert-reader_lock-from-raw_spin_lock-into-spin_lock.patch][3.4]]
  - 3.6
* [   3.2 -    3.4] rcu: Fix macro substitution for synchronize_rcu_bh() on RT{C::bug::compile::compiling_err::syntax::rm () to make it right type}
  + [[file:3.2/rcu-fix-macro-substitution.patch][3.2]]
    [[file:3.4/rcu-fix-macro-substitution.patch][3.4]]
  - 3.6
* [   3.2 -    3.4] sysrq: Allow immediate Magic SysRq output for PREEMPT_RT_FULL{C::feature::rtsupport::allow immediate output for rt_full}
  + [[file:3.2/preempt-rt-allow-immediate-magic-sysrq-output-for-preempt_rt_full.patch][3.2]]
    [[file:3.4/preempt-rt-allow-immediate-magic-sysrq-output-for-preempt_rt_full.patch][3.4]]
  - 3.6
* [   3.2 -    3.4] workqueue: Use get_cpu_light() in flush_gcwq(){C::feature::rtsupport::replace with _light}
  + [[file:3.2/workqueue-hotplug-fix.patch][3.2]]
    [[file:3.4/workqueue-hotplug-fix.patch][3.4]]
  - 3.6
* [   3.2 -    3.6] ftrace-crap.patch{C::bug::??::??::semantics::implement a rt version fun}
  + [[file:3.2/ftrace-crap.patch][3.2]]
    [[file:3.4/ftrace-crap.patch][3.4]]
    [[file:3.6/ftrace-crap.patch][3.6]]
  - 3.8
* [   3.2 -    3.6] softirq: Fix unplug deadlock{C::bug::deadlock::deadlock::semantics::add a check, rm some case and a new case to manage dead}
  + [[file:3.2/softirq-fix-unplug-deadlock.patch][3.2]]
    [[file:3.4/softirq-fix-unplug-deadlock.patch][3.4]]
    [[file:3.6/softirq-fix-unplug-deadlock.patch][3.6]]
  - 3.8
* [   3.2 -    3.6] hrtimer-fix-reprogram-madness.patch{C::bug::na::config_err::config::add a config check to avoid fun used but not config}
  + [[file:3.2/hrtimer-fix-reprogram-madness.patch][3.2]]
    [[file:3.4/hrtimer-fix-reprogram-madness.patch][3.4]]
    [[file:3.6/hrtimer-fix-reprogram-madness.patch][3.6]]
  - 3.8
* [   3.2 -    3.6] rt/rcutree: Move misplaced prototype{C::bug::compile::compiling_err::semantics::move declaration}
  + [[file:3.2/rt-rcutree-warn-fix.patch][3.2]]
    [[file:3.4/rt-rcutree-warn-fix.patch][3.4]]
    [[file:3.6/rt-rcutree-warn-fix.patch][3.6]]
  - 3.8
* [   3.2 -    3.6] hrtimer: Don't call the timer handler from hrtimer_start{C::bug::hang::hardware::hardware::rm handler from start, return error val instead}
  + [[file:3.2/peter_zijlstra-frob-hrtimer.patch][3.2]]
    [[file:3.4/peter_zijlstra-frob-hrtimer.patch][3.4]]
    [[file:3.6/peter_zijlstra-frob-hrtimer.patch][3.6]]
  - 3.8
* [   3.2 -    3.6] hrtimer: Add missing debug_activate() aid{C::bug?::??::??::simply deactivate the warning trace function}
  + [[file:3.2/hrtimer-add-missing-debug_activate-aid-was-re-announce-3-0-6-rt17.patch][3.2]]
    [[file:3.4/hrtimer-add-missing-debug_activate-aid-was-re-announce-3-0-6-rt17.patch][3.4]]
    [[file:3.6/hrtimer-add-missing-debug_activate-aid.patch][3.6]]
  - 3.8
* [   3.2 -    3.8] intel_idle: Convert i7300_idle_lock to raw spinlock{C::bug::crash::atomicity::preempt::replace with raw}
  + [[file:3.2/intel_idle-convert-i7300_idle_lock-to-raw-spinlock.patch][3.2]]
    [[file:3.4/intel_idle-convert-i7300_idle_lock-to-raw-spinlock.patch][3.4]]
    [[file:3.6/intel_idle-convert-i7300_idle_lock-to-raw-spinlock.patch][3.6]]
    [[file:3.8/intel_idle-convert-i7300_idle_lock-to-raw-spinlock.patch][3.8]]
  - 3.10
* [   3.2 -    3.8] printk: Don't call printk_tick in printk_needs_cpu() on RT{C::bug::crash::atomicity::semantics::replace with a sleep safe fun}
  + [[file:3.2/rfc-printk-don-27t-call-printk_tick-in-printk_needs_cpu.patch][3.2]]
    [[file:3.4/rfc-printk-don-27t-call-printk_tick-in-printk_needs_cpu.patch][3.4]]
    [[file:3.6/rfc-printk-don-27t-call-printk_tick-in-printk_needs_cpu.patch][3.6]]
    [[file:3.8/rfc-printk-don-27t-call-printk_tick-in-printk_needs_cpu.patch][3.8]]
  - 3.10
* [   3.2 -    3.8] x86: hpet: Disable MSI on Lenovo W510{C::bug::crash::hardware::semantics::just add stack to call back on this chip, not a fixup}
  + [[file:3.2/x86-hpet-disable-msi-on-lenovo-w510.patch][3.2]]
    [[file:3.4/x86-hpet-disable-msi-on-lenovo-w510.patch][3.4]]
    [[file:3.6/x86-hpet-disable-msi-on-lenovo-w510.patch][3.6]]
    [[file:3.8/x86-hpet-disable-msi-on-lenovo-w510.patch][3.8]]
  - 3.10
* [   3.2 -   3.10] softirq: Export in_serving_softirq(){C::bug::compile::compiling_err::syntax::add symbol export}
  + [[file:3.2/softirq-export-in-serving-softirq.patch][3.2]]
    [[file:3.4/softirq-export-in-serving-softirq.patch][3.4]]
    [[file:3.6/softirq-export-in-serving-softirq.patch][3.6]]
    [[file:3.8/softirq-export-in-serving-softirq.patch][3.8]]
    [[file:3.10/softirq-export-in-serving-softirq.patch][3.10]]
  - 3.12
* [   3.2 -   3.10] hardirq.h: Define softirq_count() as OUL to kill build warning{C::bug::compile::compiling_err::memory::change var type}
  + [[file:3.2/harirq-h-define-softirq_count-as-oul-to-kill-build-warning.patch][3.2]]
    [[file:3.4/harirq-h-define-softirq_count-as-oul-to-kill-build-warning.patch][3.4]]
    [[file:3.6/harirq-h-define-softirq_count-as-oul-to-kill-build-warning.patch][3.6]]
    [[file:3.8/harirq-h-define-softirq_count-as-oul-to-kill-build-warning.patch][3.8]]
    [[file:3.10/harirq-h-define-softirq_count-as-oul-to-kill-build-warning.patch][3.10]]
  - 3.12
* [   3.2 -   3.12] hotplug: Call cpu_unplug_begin() before DOWN_PREPARE{C::bug::crash::hardware::order::reorder funs to invoke fun in right order}
  + [[file:3.2/hotplug-call-cpu_unplug_begin-a-little-early.patch][3.2]]
    [[file:3.4/hotplug-call-cpu_unplug_begin-a-little-early.patch][3.4]]
    [[file:3.6/hotplug-call-cpu_unplug_begin-a-little-early.patch][3.6]]
  m [[file:3.8/hotplug-call-cpu_unplug_begin-a-little-early.patch][3.8]]
    [[file:3.10/hotplug-call-cpu_unplug_begin-a-little-early.patch][3.10]]
    [[file:3.12/hotplug-call-cpu_unplug_begin-a-little-early.patch][3.12]]
  - 3.14
* [   3.2 -   3.18] mm: raw_pagefault_disable{C::bug::??::??::irq::replace with raw pgfault disable}
  + [[file:3.2/peterz-raw_pagefault_disable.patch][3.2]]
    [[file:3.4/peterz-raw_pagefault_disable.patch][3.4]]
    [[file:3.6/peterz-raw_pagefault_disable.patch][3.6]]
  m [[file:3.8/peterz-raw_pagefault_disable.patch][3.8]]
    [[file:3.10/peterz-raw_pagefault_disable.patch][3.10]]
    [[file:3.12/peterz-raw_pagefault_disable.patch][3.12]]
  M [[file:3.14/peterz-raw_pagefault_disable.patch][3.14]]
    [[file:3.18/peterz-raw_pagefault_disable.patch][3.18]]
  - 4.0
* [   3.2 -   3.18] mm: pagefault_disabled(){C::maintain::refactor::fun wrapper}
  + [[file:3.2/peter_zijlstra-frob-pagefault_disable.patch][3.2]]
  M [[file:3.4/peter_zijlstra-frob-pagefault_disable.patch][3.4]]
  M [[file:3.6/peter_zijlstra-frob-pagefault_disable.patch][3.6]]
  M [[file:3.8/peter_zijlstra-frob-pagefault_disable.patch][3.8]]
  M [[file:3.10/peter_zijlstra-frob-pagefault_disable.patch][3.10]]
  M [[file:3.12/peter_zijlstra-frob-pagefault_disable.patch][3.12]]
  M [[file:3.14/peter_zijlstra-frob-pagefault_disable.patch][3.14]]
  M [[file:3.18/peter_zijlstra-frob-pagefault_disable.patch][3.18]]
  - 4.0
* [   3.2 -    4.0] sched, rt: Fix migrate_enable() thinko{C::bug::data_err::migration::migration::reorder fun}
  + [[file:3.2/sched-rt-fix-migrate_enable-thinko.patch][3.2]]
    [[file:3.4/sched-rt-fix-migrate_enable-thinko.patch][3.4]]
  M [[file:3.6/sched-rt-fix-migrate_enable-thinko.patch][3.6]]
    [[file:3.8/sched-rt-fix-migrate_enable-thinko.patch][3.8]]
    [[file:3.10/sched-rt-fix-migrate_enable-thinko.patch][3.10]]
  m [[file:3.12/sched-rt-fix-migrate_enable-thinko.patch][3.12]]
    [[file:3.14/sched-rt-fix-migrate_enable-thinko.patch][3.14]]
    [[file:3.18/sched-rt-fix-migrate_enable-thinko.patch][3.18]]
    [[file:4.0/sched-rt-fix-migrate_enable-thinko.patch][4.0]]
  - 4.1
* [   3.2 -    4.0] sched: Have migrate_disable ignore bounded threads{C::feature::sched::add check go ignore bounded threads}
  + [[file:3.2/rt-sched-have-migrate_disable-ignore-bounded-threads.patch][3.2]]
    [[file:3.4/rt-sched-have-migrate_disable-ignore-bounded-threads.patch][3.4]]
  M [[file:3.6/rt-sched-have-migrate_disable-ignore-bounded-threads.patch][3.6]]
    [[file:3.8/rt-sched-have-migrate_disable-ignore-bounded-threads.patch][3.8]]
  M [[file:3.10/rt-sched-have-migrate_disable-ignore-bounded-threads.patch][3.10]]
    [[file:3.12/rt-sched-have-migrate_disable-ignore-bounded-threads.patch][3.12]]
  m [[file:3.14/rt-sched-have-migrate_disable-ignore-bounded-threads.patch][3.14]]
    [[file:3.18/rt-sched-have-migrate_disable-ignore-bounded-threads.patch][3.18]]
    [[file:4.0/rt-sched-have-migrate_disable-ignore-bounded-threads.patch][4.0]]
  - 4.1
* [   3.2 -    4.0] sched: Optimize migrate_disable{C::feature::rtsupport::replace with raw lock}
  + [[file:3.2/peter_zijlstra-frob-migrate_disable.patch][3.2]]
  m [[file:3.4/peter_zijlstra-frob-migrate_disable.patch][3.4]]
  m [[file:3.6/peter_zijlstra-frob-migrate_disable.patch][3.6]]
    [[file:3.8/peter_zijlstra-frob-migrate_disable.patch][3.8]]
    [[file:3.10/peter_zijlstra-frob-migrate_disable.patch][3.10]]
    [[file:3.12/peter_zijlstra-frob-migrate_disable.patch][3.12]]
    [[file:3.14/peter_zijlstra-frob-migrate_disable.patch][3.14]]
    [[file:3.18/peter_zijlstra-frob-migrate_disable.patch][3.18]]
    [[file:4.0/peter_zijlstra-frob-migrate_disable.patch][4.0]]
  - 4.1
* [   3.2 -    4.0] tracing: Show padding as unsigned short{C::feature::trace::change var type}
  + [[file:3.2/rt-tracing-show-padding-as-unsigned-short.patch][3.2]]
    [[file:3.4/rt-tracing-show-padding-as-unsigned-short.patch][3.4]]
    [[file:3.6/rt-tracing-show-padding-as-unsigned-short.patch][3.6]]
    [[file:3.8/rt-tracing-show-padding-as-unsigned-short.patch][3.8]]
  M [[file:3.10/rt-tracing-show-padding-as-unsigned-short.patch][3.10]]
    [[file:3.12/rt-tracing-show-padding-as-unsigned-short.patch][3.12]]
    [[file:3.14/rt-tracing-show-padding-as-unsigned-short.patch][3.14]]
    [[file:3.18/rt-tracing-show-padding-as-unsigned-short.patch][3.18]]
    [[file:4.0/rt-tracing-show-padding-as-unsigned-short.patch][4.0]]
  - 4.1
* [   3.2 -    4.0] sched: Teach migrate_disable about atomic contexts{C::feature::sched::add var to record migrate disable atomic num, and warning}
  + [[file:3.2/sched-teach-migrate_disable-about-atomic-contexts.patch][3.2]]
    [[file:3.4/sched-teach-migrate_disable-about-atomic-contexts.patch][3.4]]
  M [[file:3.6/sched-teach-migrate_disable-about-atomic-contexts.patch][3.6]]
    [[file:3.8/sched-teach-migrate_disable-about-atomic-contexts.patch][3.8]]
    [[file:3.10/sched-teach-migrate_disable-about-atomic-contexts.patch][3.10]]
    [[file:3.12/sched-teach-migrate_disable-about-atomic-contexts.patch][3.12]]
    [[file:3.14/sched-teach-migrate_disable-about-atomic-contexts.patch][3.14]]
    [[file:3.18/sched-teach-migrate_disable-about-atomic-contexts.patch][3.18]]
    [[file:4.0/sched-teach-migrate_disable-about-atomic-contexts.patch][4.0]]
  - 4.1
* [   3.2 -    4.0] ipc/mqueue: Add a critical section to avoid a deadlock{C::bug::deadlock::deadlock::preempt::diasble preempt}
  + [[file:3.2/ipc-mqueue-add-a-critical-section-to-avoid-a-deadlock.patch][3.2]]
    [[file:3.4/ipc-mqueue-add-a-critical-section-to-avoid-a-deadlock.patch][3.4]]
  M [[file:3.6/ipc-mqueue-add-a-critical-section-to-avoid-a-deadlock.patch][3.6]]
    [[file:3.8/ipc-mqueue-add-a-critical-section-to-avoid-a-deadlock.patch][3.8]]
    [[file:3.10/ipc-mqueue-add-a-critical-section-to-avoid-a-deadlock.patch][3.10]]
    [[file:3.12/ipc-mqueue-add-a-critical-section-to-avoid-a-deadlock.patch][3.12]]
    [[file:3.14/ipc-mqueue-add-a-critical-section-to-avoid-a-deadlock.patch][3.14]]
    [[file:3.18/ipc-mqueue-add-a-critical-section-to-avoid-a-deadlock.patch][3.18]]
    [[file:4.0/ipc-mqueue-add-a-critical-section-to-avoid-a-deadlock.patch][4.0]]
  - 4.1
* [   3.2 -    4.0] sched: Postpone actual migration disalbe to schedule{C::feature::migrate::new impl of migrate disable}
  + [[file:3.2/rt-sched-postpone-actual-migration-disalbe-to-schedule.patch][3.2]]
  M [[file:3.4/rt-sched-postpone-actual-migration-disalbe-to-schedule.patch][3.4]]
  M [[file:3.6/rt-sched-postpone-actual-migration-disalbe-to-schedule.patch][3.6]]
    [[file:3.8/rt-sched-postpone-actual-migration-disalbe-to-schedule.patch][3.8]]
    [[file:3.10/rt-sched-postpone-actual-migration-disalbe-to-schedule.patch][3.10]]
  m [[file:3.12/rt-sched-postpone-actual-migration-disalbe-to-schedule.patch][3.12]]
    [[file:3.14/rt-sched-postpone-actual-migration-disalbe-to-schedule.patch][3.14]]
  m [[file:3.18/rt-sched-postpone-actual-migration-disalbe-to-schedule.patch][3.18]]
  m [[file:4.0/rt-sched-postpone-actual-migration-disalbe-to-schedule.patch][4.0]]
  - 4.1
* [   3.2 -    4.0] sched: Do not compare cpu masks in scheduler{C::feature::sched::do not compare cpu masks in sched}
  + [[file:3.2/rt-sched-do-not-compare-cpu-masks-in-scheduler.patch][3.2]]
    [[file:3.4/rt-sched-do-not-compare-cpu-masks-in-scheduler.patch][3.4]]
  M [[file:3.6/rt-sched-do-not-compare-cpu-masks-in-scheduler.patch][3.6]]
    [[file:3.8/rt-sched-do-not-compare-cpu-masks-in-scheduler.patch][3.8]]
    [[file:3.10/rt-sched-do-not-compare-cpu-masks-in-scheduler.patch][3.10]]
    [[file:3.12/rt-sched-do-not-compare-cpu-masks-in-scheduler.patch][3.12]]
    [[file:3.14/rt-sched-do-not-compare-cpu-masks-in-scheduler.patch][3.14]]
    [[file:3.18/rt-sched-do-not-compare-cpu-masks-in-scheduler.patch][3.18]]
    [[file:4.0/rt-sched-do-not-compare-cpu-masks-in-scheduler.patch][4.0]]
  - 4.1
* [   3.2 -    4.0] sysctl-include-fix.patch{C::bug::compile::compiling_err::syntax::add proper header file}
  + [[file:3.2/sysctl-include-atomic-h.patch][3.2]]
  m [[file:3.4/sysctl-include-atomic-h.patch][3.4]]
    [[file:3.6/sysctl-include-atomic-h.patch][3.6]]
  m [[file:3.8/sysctl-include-atomic-h.patch][3.8]]
    [[file:3.10/sysctl-include-atomic-h.patch][3.10]]
    [[file:3.12/sysctl-include-atomic-h.patch][3.12]]
    [[file:3.14/sysctl-include-atomic-h.patch][3.14]]
    [[file:3.18/sysctl-include-atomic-h.patch][3.18]]
    [[file:4.0/sysctl-include-atomic-h.patch][4.0]]
  - 4.1
* [   3.2 -    4.0] rcu-more-fallout.patch{C::feature::rtsupport::add precompile of preempt rt full to some codes}
  + [[file:3.2/rcu-tiny-merge-bh.patch][3.2]]
    [[file:3.4/rcu-tiny-merge-bh.patch][3.4]]
    [[file:3.6/rcu-tiny-merge-bh.patch][3.6]]
    [[file:3.8/rcu-tiny-merge-bh.patch][3.8]]
    [[file:3.10/rcu-tiny-merge-bh.patch][3.10]]
  m [[file:3.12/rcu-tiny-merge-bh.patch][3.12]]
    [[file:3.14/rcu-tiny-merge-bh.patch][3.14]]
    [[file:3.18/rcu-tiny-merge-bh.patch][3.18]]
  m [[file:4.0/rcu-tiny-merge-bh.patch][4.0]]
  - 4.1
* [   3.2 -    4.0] sched-clear-pf-thread-bound-on-fallback-rq.patch{C::feature::sched::clear flag}
  + [[file:3.2/sched-clear-pf-thread-bound-on-fallback-rq.patch][3.2]]
  m [[file:3.4/sched-clear-pf-thread-bound-on-fallback-rq.patch][3.4]]
    [[file:3.6/sched-clear-pf-thread-bound-on-fallback-rq.patch][3.6]]
    [[file:3.8/sched-clear-pf-thread-bound-on-fallback-rq.patch][3.8]]
  M [[file:3.10/sched-clear-pf-thread-bound-on-fallback-rq.patch][3.10]]
    [[file:3.12/sched-clear-pf-thread-bound-on-fallback-rq.patch][3.12]]
    [[file:3.14/sched-clear-pf-thread-bound-on-fallback-rq.patch][3.14]]
    [[file:3.18/sched-clear-pf-thread-bound-on-fallback-rq.patch][3.18]]
    [[file:4.0/sched-clear-pf-thread-bound-on-fallback-rq.patch][4.0]]
  - 4.1
* [   3.2 -    4.0] sched: Generic migrate_disable{C::feature::sched::make !rt migrate disable preempt disable}
  + [[file:3.2/peter_zijlstra-frob-migrate_disable-2.patch][3.2]]
  m [[file:3.4/peter_zijlstra-frob-migrate_disable-2.patch][3.4]]
  m [[file:3.6/peter_zijlstra-frob-migrate_disable-2.patch][3.6]]
    [[file:3.8/peter_zijlstra-frob-migrate_disable-2.patch][3.8]]
  M [[file:3.10/peter_zijlstra-frob-migrate_disable-2.patch][3.10]]
    [[file:3.12/peter_zijlstra-frob-migrate_disable-2.patch][3.12]]
  M [[file:3.14/peter_zijlstra-frob-migrate_disable-2.patch][3.14]]
  M [[file:3.18/peter_zijlstra-frob-migrate_disable-2.patch][3.18]]
  m [[file:4.0/peter_zijlstra-frob-migrate_disable-2.patch][4.0]]
  - 4.1
* [   3.2 -    4.0] early-printk-consolidate.patch{C::maintain::refactor}
  + [[file:3.2/early-printk-consolidate.patch][3.2]]
  M [[file:3.4/early-printk-consolidate.patch][3.4]]
  m [[file:3.6/early-printk-consolidate.patch][3.6]]
  M [[file:3.8/early-printk-consolidate.patch][3.8]]
  M [[file:3.10/early-printk-consolidate.patch][3.10]]
    [[file:3.12/early-printk-consolidate.patch][3.12]]
    [[file:3.14/early-printk-consolidate.patch][3.14]]
    [[file:3.18/early-printk-consolidate.patch][3.18]]
    [[file:4.0/early-printk-consolidate.patch][4.0]]
  - 4.1
* [   3.2 -    4.4] rwlocks: Fix section mismatch{C::bug::compile::compiling_err::syntax::making non-rt kernel cache align rwlocks by default}
  + [[file:3.2/tasklist-lock-fix-section-conflict.patch][3.2]]
    [[file:3.4/tasklist-lock-fix-section-conflict.patch][3.4]]
    [[file:3.6/tasklist-lock-fix-section-conflict.patch][3.6]]
    [[file:3.8/tasklist-lock-fix-section-conflict.patch][3.8]]
  M [[file:3.10/tasklist-lock-fix-section-conflict.patch][3.10]]
    [[file:3.12/tasklist-lock-fix-section-conflict.patch][3.12]]
  M [[file:3.14/tasklist-lock-fix-section-conflict.patch][3.14]]
    [[file:3.18/tasklist-lock-fix-section-conflict.patch][3.18]]
    [[file:4.0/tasklist-lock-fix-section-conflict.patch][4.0]]
    [[file:4.1/tasklist-lock-fix-section-conflict.patch][4.1]]
    [[file:4.4/tasklist-lock-fix-section-conflict.patch][4.4]]
  - 4.6
* [   3.2 -    4.6] net: Avoid livelock in net_tx_action() on RT{C::feature::rtsupport::use spinlock to avoid livelock}
  + [[file:3.2/net-tx-action-avoid-livelock-on-rt.patch][3.2]]
    [[file:3.4/net-tx-action-avoid-livelock-on-rt.patch][3.4]]
    [[file:3.6/net-tx-action-avoid-livelock-on-rt.patch][3.6]]
    [[file:3.8/net-tx-action-avoid-livelock-on-rt.patch][3.8]]
    [[file:3.10/net-tx-action-avoid-livelock-on-rt.patch][3.10]]
    [[file:3.12/net-tx-action-avoid-livelock-on-rt.patch][3.12]]
    [[file:3.14/net-tx-action-avoid-livelock-on-rt.patch][3.14]]
  m [[file:3.18/net-tx-action-avoid-livelock-on-rt.patch][3.18]]
    [[file:4.0/net-tx-action-avoid-livelock-on-rt.patch][4.0]]
    [[file:4.1/net-tx-action-avoid-livelock-on-rt.patch][4.1]]
    [[file:4.4/net-tx-action-avoid-livelock-on-rt.patch][4.4]]
    [[file:4.6/net-tx-action-avoid-livelock-on-rt.patch][4.6]]
  - 4.8
* [   3.2 -   4.11] hotplug: Reread hotplug_pcp on pin_current_cpu() retry{C::feature::cpu::update cpu mask}
  + [[file:3.2/re-migrate_disable-race-with-cpu-hotplug-3f.patch][3.2]]
    [[file:3.4/re-migrate_disable-race-with-cpu-hotplug-3f.patch][3.4]]
    [[file:3.6/re-migrate_disable-race-with-cpu-hotplug-3f.patch][3.6]]
    [[file:3.8/re-migrate_disable-race-with-cpu-hotplug-3f.patch][3.8]]
  m [[file:3.10/re-migrate_disable-race-with-cpu-hotplug-3f.patch][3.10]]
    [[file:3.12/re-migrate_disable-race-with-cpu-hotplug-3f.patch][3.12]]
    [[file:3.14/re-migrate_disable-race-with-cpu-hotplug-3f.patch][3.14]]
    [[file:3.18/re-migrate_disable-race-with-cpu-hotplug-3f.patch][3.18]]
  M [[file:4.0/re-migrate_disable-race-with-cpu-hotplug-3f.patch][4.0]]
    [[file:4.1/re-migrate_disable-race-with-cpu-hotplug-3f.patch][4.1]]
    [[file:4.4/re-migrate_disable-race-with-cpu-hotplug-3f.patch][4.4]]
    [[file:4.6/re-migrate_disable-race-with-cpu-hotplug-3f.patch][4.6]]
    [[file:4.8/re-migrate_disable-race-with-cpu-hotplug-3f.patch][4.8]]
    [[file:4.9/re-migrate_disable-race-with-cpu-hotplug-3f.patch][4.9]]
    [[file:4.11/re-migrate_disable-race-with-cpu-hotplug-3f.patch][4.11]]
* [   3.2 -   4.11] printk: Add "force_early_printk" boot param to help with debugging{C::feature::debuginfo::add param to help debugging}
  + [[file:3.2/printk-27force_early_printk-27-boot-param-to-help-with-debugging.patch][3.2]]
  M [[file:3.4/printk-27force_early_printk-27-boot-param-to-help-with-debugging.patch][3.4]]
    [[file:3.6/printk-27force_early_printk-27-boot-param-to-help-with-debugging.patch][3.6]]
    [[file:3.8/printk-27force_early_printk-27-boot-param-to-help-with-debugging.patch][3.8]]
    [[file:3.10/printk-27force_early_printk-27-boot-param-to-help-with-debugging.patch][3.10]]
    [[file:3.12/printk-27force_early_printk-27-boot-param-to-help-with-debugging.patch][3.12]]
    [[file:3.14/printk-27force_early_printk-27-boot-param-to-help-with-debugging.patch][3.14]]
    [[file:3.18/printk-27force_early_printk-27-boot-param-to-help-with-debugging.patch][3.18]]
    [[file:4.0/printk-27force_early_printk-27-boot-param-to-help-with-debugging.patch][4.0]]
    [[file:4.1/printk-27force_early_printk-27-boot-param-to-help-with-debugging.patch][4.1]]
    [[file:4.4/printk-27force_early_printk-27-boot-param-to-help-with-debugging.patch][4.4]]
    [[file:4.6/printk-27force_early_printk-27-boot-param-to-help-with-debugging.patch][4.6]]
    [[file:4.8/printk-27force_early_printk-27-boot-param-to-help-with-debugging.patch][4.8]]
    [[file:4.9/printk-27force_early_printk-27-boot-param-to-help-with-debugging.patch][4.9]]
    [[file:4.11/printk-27force_early_printk-27-boot-param-to-help-with-debugging.patch][4.11]]
* [   3.2 -   4.11] tty/serial/omap: Make the locking RT aware{C::maintain::refactor::coalesce funs}
  + [[file:3.2/drivers-tty-fix-omap-lock-crap.patch][3.2]]
  M [[file:3.4/drivers-tty-fix-omap-lock-crap.patch][3.4]]
    [[file:3.6/drivers-tty-fix-omap-lock-crap.patch][3.6]]
  m [[file:3.8/drivers-tty-fix-omap-lock-crap.patch][3.8]]
    [[file:3.10/drivers-tty-fix-omap-lock-crap.patch][3.10]]
    [[file:3.12/drivers-tty-fix-omap-lock-crap.patch][3.12]]
    [[file:3.14/drivers-tty-fix-omap-lock-crap.patch][3.14]]
    [[file:3.18/drivers-tty-fix-omap-lock-crap.patch][3.18]]
    [[file:4.0/drivers-tty-fix-omap-lock-crap.patch][4.0]]
    [[file:4.1/drivers-tty-fix-omap-lock-crap.patch][4.1]]
    [[file:4.4/drivers-tty-fix-omap-lock-crap.patch][4.4]]
    [[file:4.6/drivers-tty-fix-omap-lock-crap.patch][4.6]]
    [[file:4.8/drivers-tty-fix-omap-lock-crap.patch][4.8]]
    [[file:4.9/drivers-tty-fix-omap-lock-crap.patch][4.9]]
    [[file:4.11/drivers-tty-fix-omap-lock-crap.patch][4.11]]
* [   3.2 -   4.11] arm: Convert arm boot_lock to raw{C::bug::crash::preempt::preempt::replace with raw}
  + [[file:3.2/arm-convert-boot-lock-to-raw.patch][3.2]]
  M [[file:3.4/arm-convert-boot-lock-to-raw.patch][3.4]]
    [[file:3.6/arm-convert-boot-lock-to-raw.patch][3.6]]
  M [[file:3.8/arm-convert-boot-lock-to-raw.patch][3.8]]
  M [[file:3.10/arm-convert-boot-lock-to-raw.patch][3.10]]
  M [[file:3.12/arm-convert-boot-lock-to-raw.patch][3.12]]
  M [[file:3.14/arm-convert-boot-lock-to-raw.patch][3.14]]
  M [[file:3.18/arm-convert-boot-lock-to-raw.patch][3.18]]
  m [[file:4.0/arm-convert-boot-lock-to-raw.patch][4.0]]
    [[file:4.1/arm-convert-boot-lock-to-raw.patch][4.1]]
  M [[file:4.4/arm-convert-boot-lock-to-raw.patch][4.4]]
    [[file:4.6/arm-convert-boot-lock-to-raw.patch][4.6]]
  m [[file:4.8/arm-convert-boot-lock-to-raw.patch][4.8]]
    [[file:4.9/arm-convert-boot-lock-to-raw.patch][4.9]]
    [[file:4.11/arm-convert-boot-lock-to-raw.patch][4.11]]
* [   3.2 -    4.9] ipc/sem: Rework semaphore wakeups{C::performance::preempt::avoid disable preemption and wake task directly}
  + [[file:3.2/ipc-sem-rework-semaphore-wakeups.patch][3.2]]
    [[file:3.4/ipc-sem-rework-semaphore-wakeups.patch][3.4]]
    [[file:3.6/ipc-sem-rework-semaphore-wakeups.patch][3.6]]
    [[file:3.8/ipc-sem-rework-semaphore-wakeups.patch][3.8]]
  M [[file:3.10/ipc-sem-rework-semaphore-wakeups.patch][3.10]]
  M [[file:3.12/ipc-sem-rework-semaphore-wakeups.patch][3.12]]
    [[file:3.14/ipc-sem-rework-semaphore-wakeups.patch][3.14]]
    [[file:3.18/ipc-sem-rework-semaphore-wakeups.patch][3.18]]
    [[file:4.0/ipc-sem-rework-semaphore-wakeups.patch][4.0]]
    [[file:4.1/ipc-sem-rework-semaphore-wakeups.patch][4.1]]
    [[file:4.4/ipc-sem-rework-semaphore-wakeups.patch][4.4]]
    [[file:4.6/ipc-sem-rework-semaphore-wakeups.patch][4.6]]
    [[file:4.8/ipc-sem-rework-semaphore-wakeups.patch][4.8]]
    [[file:4.9/ipc-sem-rework-semaphore-wakeups.patch][4.9]]
  - 4.11
* [   3.2 -   4.11] cpumask: Disable CONFIG_CPUMASK_OFFSTACK for RT{C::feature::rtsupport::disallow cpumask_offstack when rt_full}
  + [[file:3.2/cpumask-disable-offstack-on-rt.patch][3.2]]
    [[file:3.4/cpumask-disable-offstack-on-rt.patch][3.4]]
    [[file:3.6/cpumask-disable-offstack-on-rt.patch][3.6]]
    [[file:3.8/cpumask-disable-offstack-on-rt.patch][3.8]]
  m [[file:3.10/cpumask-disable-offstack-on-rt.patch][3.10]]
    [[file:3.12/cpumask-disable-offstack-on-rt.patch][3.12]]
    [[file:3.14/cpumask-disable-offstack-on-rt.patch][3.14]]
    [[file:3.18/cpumask-disable-offstack-on-rt.patch][3.18]]
    [[file:4.0/cpumask-disable-offstack-on-rt.patch][4.0]]
    [[file:4.1/cpumask-disable-offstack-on-rt.patch][4.1]]
    [[file:4.4/cpumask-disable-offstack-on-rt.patch][4.4]]
    [[file:4.6/cpumask-disable-offstack-on-rt.patch][4.6]]
    [[file:4.8/cpumask-disable-offstack-on-rt.patch][4.8]]
    [[file:4.9/cpumask-disable-offstack-on-rt.patch][4.9]]
    [[file:4.11/cpumask-disable-offstack-on-rt.patch][4.11]]
* [   3.2 -   4.11] hotplug: sync_unplug: No "\n" in task name{C::maintain::refactor::rm '\n'}
  + [[file:3.2/hotplug-sync_unplug-no-27-5cn-27-in-task-name.patch][3.2]]
    [[file:3.4/hotplug-sync_unplug-no-27-5cn-27-in-task-name.patch][3.4]]
    [[file:3.6/hotplug-sync_unplug-no-27-5cn-27-in-task-name.patch][3.6]]
    [[file:3.8/hotplug-sync_unplug-no-27-5cn-27-in-task-name.patch][3.8]]
    [[file:3.10/hotplug-sync_unplug-no-27-5cn-27-in-task-name.patch][3.10]]
    [[file:3.12/hotplug-sync_unplug-no-27-5cn-27-in-task-name.patch][3.12]]
    [[file:3.14/hotplug-sync_unplug-no-27-5cn-27-in-task-name.patch][3.14]]
    [[file:3.18/hotplug-sync_unplug-no-27-5cn-27-in-task-name.patch][3.18]]
    [[file:4.0/hotplug-sync_unplug-no-27-5cn-27-in-task-name.patch][4.0]]
    [[file:4.1/hotplug-sync_unplug-no-27-5cn-27-in-task-name.patch][4.1]]
    [[file:4.4/hotplug-sync_unplug-no-27-5cn-27-in-task-name.patch][4.4]]
    [[file:4.6/hotplug-sync_unplug-no-27-5cn-27-in-task-name.patch][4.6]]
    [[file:4.8/hotplug-sync_unplug-no-27-5cn-27-in-task-name.patch][4.8]]
    [[file:4.9/hotplug-sync_unplug-no-27-5cn-27-in-task-name.patch][4.9]]
    [[file:4.11/hotplug-sync_unplug-no-27-5cn-27-in-task-name.patch][4.11]]
* [   3.2 -   4.11] rcu: Merge RCU-bh into RCU-preempt{C::feature::rtsupport::add precompile}
  + [[file:3.2/rcu-merge-rcu-bh-into-rcu-preempt-for-rt.patch][3.2]]
  m [[file:3.4/rcu-merge-rcu-bh-into-rcu-preempt-for-rt.patch][3.4]]
  M [[file:3.6/rcu-merge-rcu-bh-into-rcu-preempt-for-rt.patch][3.6]]
  m [[file:3.8/rcu-merge-rcu-bh-into-rcu-preempt-for-rt.patch][3.8]]
    [[file:3.10/rcu-merge-rcu-bh-into-rcu-preempt-for-rt.patch][3.10]]
  M [[file:3.12/rcu-merge-rcu-bh-into-rcu-preempt-for-rt.patch][3.12]]
  M [[file:3.14/rcu-merge-rcu-bh-into-rcu-preempt-for-rt.patch][3.14]]
  M [[file:3.18/rcu-merge-rcu-bh-into-rcu-preempt-for-rt.patch][3.18]]
  M [[file:4.0/rcu-merge-rcu-bh-into-rcu-preempt-for-rt.patch][4.0]]
  m [[file:4.1/rcu-merge-rcu-bh-into-rcu-preempt-for-rt.patch][4.1]]
  m [[file:4.4/rcu-merge-rcu-bh-into-rcu-preempt-for-rt.patch][4.4]]
  m [[file:4.6/rcu-merge-rcu-bh-into-rcu-preempt-for-rt.patch][4.6]]
  M [[file:4.8/rcu-merge-rcu-bh-into-rcu-preempt-for-rt.patch][4.8]]
  m [[file:4.9/rcu-merge-rcu-bh-into-rcu-preempt-for-rt.patch][4.9]]
    [[file:4.11/rcu-merge-rcu-bh-into-rcu-preempt-for-rt.patch][4.11]]
* [   3.2 -   4.11] sched: ttwu: Return success when only changing the saved_state value{C::feature::sched::return sched}
  + [[file:3.2/sched-ttwu-ensure-success-return-is-correct.patch][3.2]]
    [[file:3.4/sched-ttwu-ensure-success-return-is-correct.patch][3.4]]
    [[file:3.6/sched-ttwu-ensure-success-return-is-correct.patch][3.6]]
    [[file:3.8/sched-ttwu-ensure-success-return-is-correct.patch][3.8]]
    [[file:3.10/sched-ttwu-ensure-success-return-is-correct.patch][3.10]]
    [[file:3.12/sched-ttwu-ensure-success-return-is-correct.patch][3.12]]
    [[file:3.14/sched-ttwu-ensure-success-return-is-correct.patch][3.14]]
    [[file:3.18/sched-ttwu-ensure-success-return-is-correct.patch][3.18]]
    [[file:4.0/sched-ttwu-ensure-success-return-is-correct.patch][4.0]]
    [[file:4.1/sched-ttwu-ensure-success-return-is-correct.patch][4.1]]
    [[file:4.4/sched-ttwu-ensure-success-return-is-correct.patch][4.4]]
    [[file:4.6/sched-ttwu-ensure-success-return-is-correct.patch][4.6]]
    [[file:4.8/sched-ttwu-ensure-success-return-is-correct.patch][4.8]]
    [[file:4.9/sched-ttwu-ensure-success-return-is-correct.patch][4.9]]
    [[file:4.11/sched-ttwu-ensure-success-return-is-correct.patch][4.11]]
* [   3.2 -   4.11] sched: Disable TTWU_QUEUE on RT{C::feature::rtsupport::disable rrwu_queue on rt}
  + [[file:3.2/sched-disable-ttwu-queue.patch][3.2]]
  M [[file:3.4/sched-disable-ttwu-queue.patch][3.4]]
    [[file:3.6/sched-disable-ttwu-queue.patch][3.6]]
    [[file:3.8/sched-disable-ttwu-queue.patch][3.8]]
    [[file:3.10/sched-disable-ttwu-queue.patch][3.10]]
    [[file:3.12/sched-disable-ttwu-queue.patch][3.12]]
    [[file:3.14/sched-disable-ttwu-queue.patch][3.14]]
  M [[file:3.18/sched-disable-ttwu-queue.patch][3.18]]
    [[file:4.0/sched-disable-ttwu-queue.patch][4.0]]
  m [[file:4.1/sched-disable-ttwu-queue.patch][4.1]]
    [[file:4.4/sched-disable-ttwu-queue.patch][4.4]]
    [[file:4.6/sched-disable-ttwu-queue.patch][4.6]]
    [[file:4.8/sched-disable-ttwu-queue.patch][4.8]]
    [[file:4.9/sched-disable-ttwu-queue.patch][4.9]]
  m [[file:4.11/sched-disable-ttwu-queue.patch][4.11]]
* [   3.2 -   4.11] scsi/fcoe: Make RT aware.{C::feature::rtsupport::replace with _light}
  + [[file:3.2/scsi-fcoe-rt-aware.patch][3.2]]
    [[file:3.4/scsi-fcoe-rt-aware.patch][3.4]]
  M [[file:3.6/scsi-fcoe-rt-aware.patch][3.6]]
    [[file:3.8/scsi-fcoe-rt-aware.patch][3.8]]
    [[file:3.10/scsi-fcoe-rt-aware.patch][3.10]]
    [[file:3.12/scsi-fcoe-rt-aware.patch][3.12]]
    [[file:3.14/scsi-fcoe-rt-aware.patch][3.14]]
    [[file:3.18/scsi-fcoe-rt-aware.patch][3.18]]
    [[file:4.0/scsi-fcoe-rt-aware.patch][4.0]]
    [[file:4.1/scsi-fcoe-rt-aware.patch][4.1]]
    [[file:4.4/scsi-fcoe-rt-aware.patch][4.4]]
    [[file:4.6/scsi-fcoe-rt-aware.patch][4.6]]
  M [[file:4.8/scsi-fcoe-rt-aware.patch][4.8]]
    [[file:4.9/scsi-fcoe-rt-aware.patch][4.9]]
    [[file:4.11/scsi-fcoe-rt-aware.patch][4.11]]
* [   3.2 -   4.11] x86: kvm Require const tsc for RT{C::feature::debuginfo::print err when !tsc in rt}
  + [[file:3.2/x86-kvm-require-const-tsc-for-rt.patch][3.2]]
    [[file:3.4/x86-kvm-require-const-tsc-for-rt.patch][3.4]]
    [[file:3.6/x86-kvm-require-const-tsc-for-rt.patch][3.6]]
  m [[file:3.8/x86-kvm-require-const-tsc-for-rt.patch][3.8]]
    [[file:3.10/x86-kvm-require-const-tsc-for-rt.patch][3.10]]
    [[file:3.12/x86-kvm-require-const-tsc-for-rt.patch][3.12]]
    [[file:3.14/x86-kvm-require-const-tsc-for-rt.patch][3.14]]
    [[file:3.18/x86-kvm-require-const-tsc-for-rt.patch][3.18]]
    [[file:4.0/x86-kvm-require-const-tsc-for-rt.patch][4.0]]
    [[file:4.1/x86-kvm-require-const-tsc-for-rt.patch][4.1]]
    [[file:4.4/x86-kvm-require-const-tsc-for-rt.patch][4.4]]
    [[file:4.6/x86-kvm-require-const-tsc-for-rt.patch][4.6]]
    [[file:4.8/x86-kvm-require-const-tsc-for-rt.patch][4.8]]
    [[file:4.9/x86-kvm-require-const-tsc-for-rt.patch][4.9]]
    [[file:4.11/x86-kvm-require-const-tsc-for-rt.patch][4.11]]
* [   3.2 -   4.11] ARM: Initialize split page table locks for vector page{C::bug::data_err::uninit_var::semantics::add fun}
  + [[file:3.2/re-preempt_rt_full-arm-coredump-fails-for-cpu-3e-3d-4.patch][3.2]]
  m [[file:3.4/re-preempt_rt_full-arm-coredump-fails-for-cpu-3e-3d-4.patch][3.4]]
    [[file:3.6/re-preempt_rt_full-arm-coredump-fails-for-cpu-3e-3d-4.patch][3.6]]
    [[file:3.8/re-preempt_rt_full-arm-coredump-fails-for-cpu-3e-3d-4.patch][3.8]]
    [[file:3.10/re-preempt_rt_full-arm-coredump-fails-for-cpu-3e-3d-4.patch][3.10]]
  m [[file:3.12/re-preempt_rt_full-arm-coredump-fails-for-cpu-3e-3d-4.patch][3.12]]
    [[file:3.14/re-preempt_rt_full-arm-coredump-fails-for-cpu-3e-3d-4.patch][3.14]]
    [[file:3.18/re-preempt_rt_full-arm-coredump-fails-for-cpu-3e-3d-4.patch][3.18]]
    [[file:4.0/re-preempt_rt_full-arm-coredump-fails-for-cpu-3e-3d-4.patch][4.0]]
    [[file:4.1/re-preempt_rt_full-arm-coredump-fails-for-cpu-3e-3d-4.patch][4.1]]
    [[file:4.4/re-preempt_rt_full-arm-coredump-fails-for-cpu-3e-3d-4.patch][4.4]]
    [[file:4.6/re-preempt_rt_full-arm-coredump-fails-for-cpu-3e-3d-4.patch][4.6]]
    [[file:4.8/re-preempt_rt_full-arm-coredump-fails-for-cpu-3e-3d-4.patch][4.8]]
    [[file:4.9/re-preempt_rt_full-arm-coredump-fails-for-cpu-3e-3d-4.patch][4.9]]
    [[file:4.11/re-preempt_rt_full-arm-coredump-fails-for-cpu-3e-3d-4.patch][4.11]]
* [   3.2 -   4.11] sysfs: Add /sys/kernel/realtime entry{C::feature::fs::add rt entry}
  + [[file:3.2/sysfs-realtime-entry.patch][3.2]]
    [[file:3.4/sysfs-realtime-entry.patch][3.4]]
    [[file:3.6/sysfs-realtime-entry.patch][3.6]]
  m [[file:3.8/sysfs-realtime-entry.patch][3.8]]
    [[file:3.10/sysfs-realtime-entry.patch][3.10]]
    [[file:3.12/sysfs-realtime-entry.patch][3.12]]
    [[file:3.14/sysfs-realtime-entry.patch][3.14]]
    [[file:3.18/sysfs-realtime-entry.patch][3.18]]
    [[file:4.0/sysfs-realtime-entry.patch][4.0]]
    [[file:4.1/sysfs-realtime-entry.patch][4.1]]
  m [[file:4.4/sysfs-realtime-entry.patch][4.4]]
  m [[file:4.6/sysfs-realtime-entry.patch][4.6]]
    [[file:4.8/sysfs-realtime-entry.patch][4.8]]
    [[file:4.9/sysfs-realtime-entry.patch][4.9]]
    [[file:4.11/sysfs-realtime-entry.patch][4.11]]
* [   3.2 -   4.11] kconfig: Disable config options which are not RT compatible{C::feature::rtsupport::disable sth no rt-supported}
  + [[file:3.2/kconfig-disable-a-few-options-rt.patch][3.2]]
    [[file:3.4/kconfig-disable-a-few-options-rt.patch][3.4]]
    [[file:3.6/kconfig-disable-a-few-options-rt.patch][3.6]]
  M [[file:3.8/kconfig-disable-a-few-options-rt.patch][3.8]]
    [[file:3.10/kconfig-disable-a-few-options-rt.patch][3.10]]
    [[file:3.12/kconfig-disable-a-few-options-rt.patch][3.12]]
    [[file:3.14/kconfig-disable-a-few-options-rt.patch][3.14]]
  M [[file:3.18/kconfig-disable-a-few-options-rt.patch][3.18]]
    [[file:4.0/kconfig-disable-a-few-options-rt.patch][4.0]]
    [[file:4.1/kconfig-disable-a-few-options-rt.patch][4.1]]
    [[file:4.4/kconfig-disable-a-few-options-rt.patch][4.4]]
    [[file:4.6/kconfig-disable-a-few-options-rt.patch][4.6]]
  m [[file:4.8/kconfig-disable-a-few-options-rt.patch][4.8]]
    [[file:4.9/kconfig-disable-a-few-options-rt.patch][4.9]]
    [[file:4.11/kconfig-disable-a-few-options-rt.patch][4.11]]
* [   3.2 -   4.11] x86: crypto: Reduce preempt disabled regions{C::performance::preempt::restrict preempt disable region to right size}
  + [[file:3.2/x86-crypto-reduce-preempt-disabled-regions.patch][3.2]]
    [[file:3.4/x86-crypto-reduce-preempt-disabled-regions.patch][3.4]]
    [[file:3.6/x86-crypto-reduce-preempt-disabled-regions.patch][3.6]]
    [[file:3.8/x86-crypto-reduce-preempt-disabled-regions.patch][3.8]]
    [[file:3.10/x86-crypto-reduce-preempt-disabled-regions.patch][3.10]]
    [[file:3.12/x86-crypto-reduce-preempt-disabled-regions.patch][3.12]]
    [[file:3.14/x86-crypto-reduce-preempt-disabled-regions.patch][3.14]]
  m [[file:3.18/x86-crypto-reduce-preempt-disabled-regions.patch][3.18]]
  m [[file:4.0/x86-crypto-reduce-preempt-disabled-regions.patch][4.0]]
    [[file:4.1/x86-crypto-reduce-preempt-disabled-regions.patch][4.1]]
    [[file:4.4/x86-crypto-reduce-preempt-disabled-regions.patch][4.4]]
    [[file:4.6/x86-crypto-reduce-preempt-disabled-regions.patch][4.6]]
    [[file:4.8/x86-crypto-reduce-preempt-disabled-regions.patch][4.8]]
    [[file:4.9/x86-crypto-reduce-preempt-disabled-regions.patch][4.9]]
  M [[file:4.11/x86-crypto-reduce-preempt-disabled-regions.patch][4.11]]
* [   3.2 -   4.11] tasklet: Prevent tasklets from going into infinite spin in RT
  + [[file:3.2/tasklet-rt-prevent-tasklets-from-going-into-infinite-spin-in-rt.patch][3.2]]
    [[file:3.4/tasklet-rt-prevent-tasklets-from-going-into-infinite-spin-in-rt.patch][3.4]]
    [[file:3.6/tasklet-rt-prevent-tasklets-from-going-into-infinite-spin-in-rt.patch][3.6]]
  m [[file:3.8/tasklet-rt-prevent-tasklets-from-going-into-infinite-spin-in-rt.patch][3.8]]
    [[file:3.10/tasklet-rt-prevent-tasklets-from-going-into-infinite-spin-in-rt.patch][3.10]]
    [[file:3.12/tasklet-rt-prevent-tasklets-from-going-into-infinite-spin-in-rt.patch][3.12]]
  M [[file:3.14/tasklet-rt-prevent-tasklets-from-going-into-infinite-spin-in-rt.patch][3.14]]
  M [[file:3.18/tasklet-rt-prevent-tasklets-from-going-into-infinite-spin-in-rt.patch][3.18]]
  M [[file:4.0/tasklet-rt-prevent-tasklets-from-going-into-infinite-spin-in-rt.patch][4.0]]
    [[file:4.1/tasklet-rt-prevent-tasklets-from-going-into-infinite-spin-in-rt.patch][4.1]]
    [[file:4.4/tasklet-rt-prevent-tasklets-from-going-into-infinite-spin-in-rt.patch][4.4]]
    [[file:4.6/tasklet-rt-prevent-tasklets-from-going-into-infinite-spin-in-rt.patch][4.6]]
    [[file:4.8/tasklet-rt-prevent-tasklets-from-going-into-infinite-spin-in-rt.patch][4.8]]
    [[file:4.9/tasklet-rt-prevent-tasklets-from-going-into-infinite-spin-in-rt.patch][4.9]]
    [[file:4.11/tasklet-rt-prevent-tasklets-from-going-into-infinite-spin-in-rt.patch][4.11]]
* [   3.2 -   4.11] tracing: Account for preempt off in preempt_schedule(){C::feature::trace::add trace manually}
  + [[file:3.2/tracing-account-for-preempt-off-in-preempt_schedule.patch][3.2]]
    [[file:3.4/tracing-account-for-preempt-off-in-preempt_schedule.patch][3.4]]
    [[file:3.6/tracing-account-for-preempt-off-in-preempt_schedule.patch][3.6]]
    [[file:3.8/tracing-account-for-preempt-off-in-preempt_schedule.patch][3.8]]
    [[file:3.10/tracing-account-for-preempt-off-in-preempt_schedule.patch][3.10]]
    [[file:3.12/tracing-account-for-preempt-off-in-preempt_schedule.patch][3.12]]
  m [[file:3.14/tracing-account-for-preempt-off-in-preempt_schedule.patch][3.14]]
    [[file:3.18/tracing-account-for-preempt-off-in-preempt_schedule.patch][3.18]]
  m [[file:4.0/tracing-account-for-preempt-off-in-preempt_schedule.patch][4.0]]
    [[file:4.1/tracing-account-for-preempt-off-in-preempt_schedule.patch][4.1]]
  m [[file:4.4/tracing-account-for-preempt-off-in-preempt_schedule.patch][4.4]]
    [[file:4.6/tracing-account-for-preempt-off-in-preempt_schedule.patch][4.6]]
  m [[file:4.8/tracing-account-for-preempt-off-in-preempt_schedule.patch][4.8]]
    [[file:4.9/tracing-account-for-preempt-off-in-preempt_schedule.patch][4.9]]
    [[file:4.11/tracing-account-for-preempt-off-in-preempt_schedule.patch][4.11]]
* [   3.2 -   4.11] kgdb/serial: Short term workaround{C::bug::?module unusable::semantics::add fun, and move the cnt}
  + [[file:3.2/kgb-serial-hackaround.patch][3.2]]
  M [[file:3.4/kgb-serial-hackaround.patch][3.4]]
    [[file:3.6/kgb-serial-hackaround.patch][3.6]]
  M [[file:3.8/kgb-serial-hackaround.patch][3.8]]
    [[file:3.10/kgb-serial-hackaround.patch][3.10]]
    [[file:3.12/kgb-serial-hackaround.patch][3.12]]
    [[file:3.14/kgb-serial-hackaround.patch][3.14]]
  m [[file:3.18/kgb-serial-hackaround.patch][3.18]]
  M [[file:4.0/kgb-serial-hackaround.patch][4.0]]
    [[file:4.1/kgb-serial-hackaround.patch][4.1]]
  m [[file:4.4/kgb-serial-hackaround.patch][4.4]]
  M [[file:4.6/kgb-serial-hackaround.patch][4.6]]
    [[file:4.8/kgb-serial-hackaround.patch][4.8]]
    [[file:4.9/kgb-serial-hackaround.patch][4.9]]
  M [[file:4.11/kgb-serial-hackaround.patch][4.11]]
* [   3.2 -    4.9] pci: Use __wake_up_all_locked in pci_unblock_user_cfg_access(){C::feature::rtsupport::add lock to prevent mightsleep}
  + [[file:3.2/pci-access-use-__wake_up_all_locked.patch][3.2]]
  M [[file:3.4/pci-access-use-__wake_up_all_locked.patch][3.4]]
    [[file:3.6/pci-access-use-__wake_up_all_locked.patch][3.6]]
    [[file:3.8/pci-access-use-__wake_up_all_locked.patch][3.8]]
    [[file:3.10/pci-access-use-__wake_up_all_locked.patch][3.10]]
    [[file:3.12/pci-access-use-__wake_up_all_locked.patch][3.12]]
    [[file:3.14/pci-access-use-__wake_up_all_locked.patch][3.14]]
    [[file:3.18/pci-access-use-__wake_up_all_locked.patch][3.18]]
    [[file:4.0/pci-access-use-__wake_up_all_locked.patch][4.0]]
    [[file:4.1/pci-access-use-__wake_up_all_locked.patch][4.1]]
    [[file:4.4/pci-access-use-__wake_up_all_locked.patch][4.4]]
    [[file:4.6/pci-access-use-__wake_up_all_locked.patch][4.6]]
    [[file:4.8/pci-access-use-__wake_up_all_locked.patch][4.8]]
    [[file:4.9/pci-access-use-__wake_up_all_locked.patch][4.9]]
  - 4.11
* [   3.2 -   4.11] rt: Improve the serial console PASS_LIMIT{C::bug::compile::compiling_err::syntax::add a rt limit}
  + [[file:3.2/rt-serial-warn-fix.patch][3.2]]
    [[file:3.4/rt-serial-warn-fix.patch][3.4]]
    [[file:3.6/rt-serial-warn-fix.patch][3.6]]
  M [[file:3.8/rt-serial-warn-fix.patch][3.8]]
    [[file:3.10/rt-serial-warn-fix.patch][3.10]]
    [[file:3.12/rt-serial-warn-fix.patch][3.12]]
    [[file:3.14/rt-serial-warn-fix.patch][3.14]]
    [[file:3.18/rt-serial-warn-fix.patch][3.18]]
    [[file:4.0/rt-serial-warn-fix.patch][4.0]]
    [[file:4.1/rt-serial-warn-fix.patch][4.1]]
  m [[file:4.4/rt-serial-warn-fix.patch][4.4]]
    [[file:4.6/rt-serial-warn-fix.patch][4.6]]
    [[file:4.8/rt-serial-warn-fix.patch][4.8]]
    [[file:4.9/rt-serial-warn-fix.patch][4.9]]
    [[file:4.11/rt-serial-warn-fix.patch][4.11]]
* [   3.2 -   4.11] dm: Make rt aware{C::feature::rtsupport::replace with nort}
  + [[file:3.2/dm-make-rt-aware.patch][3.2]]
    [[file:3.4/dm-make-rt-aware.patch][3.4]]
    [[file:3.6/dm-make-rt-aware.patch][3.6]]
    [[file:3.8/dm-make-rt-aware.patch][3.8]]
    [[file:3.10/dm-make-rt-aware.patch][3.10]]
    [[file:3.12/dm-make-rt-aware.patch][3.12]]
    [[file:3.14/dm-make-rt-aware.patch][3.14]]
    [[file:3.18/dm-make-rt-aware.patch][3.18]]
  M [[file:4.0/dm-make-rt-aware.patch][4.0]]
    [[file:4.1/dm-make-rt-aware.patch][4.1]]
    [[file:4.4/dm-make-rt-aware.patch][4.4]]
  m [[file:4.6/dm-make-rt-aware.patch][4.6]]
    [[file:4.8/dm-make-rt-aware.patch][4.8]]
  m [[file:4.9/dm-make-rt-aware.patch][4.9]]
    [[file:4.11/dm-make-rt-aware.patch][4.11]]
* [   3.2 -   4.11] rcu: Frob softirq test{C::bug::deadlock::deadlock::semantics::add preempt count check}
  + [[file:3.2/peter_zijlstra-frob-rcu.patch][3.2]]
    [[file:3.4/peter_zijlstra-frob-rcu.patch][3.4]]
    [[file:3.6/peter_zijlstra-frob-rcu.patch][3.6]]
    [[file:3.8/peter_zijlstra-frob-rcu.patch][3.8]]
    [[file:3.10/peter_zijlstra-frob-rcu.patch][3.10]]
    [[file:3.12/peter_zijlstra-frob-rcu.patch][3.12]]
  M [[file:3.14/peter_zijlstra-frob-rcu.patch][3.14]]
    [[file:3.18/peter_zijlstra-frob-rcu.patch][3.18]]
    [[file:4.0/peter_zijlstra-frob-rcu.patch][4.0]]
  M [[file:4.1/peter_zijlstra-frob-rcu.patch][4.1]]
  m [[file:4.4/peter_zijlstra-frob-rcu.patch][4.4]]
    [[file:4.6/peter_zijlstra-frob-rcu.patch][4.6]]
    [[file:4.8/peter_zijlstra-frob-rcu.patch][4.8]]
    [[file:4.9/peter_zijlstra-frob-rcu.patch][4.9]]
    [[file:4.11/peter_zijlstra-frob-rcu.patch][4.11]]
* [   3.2 -   4.11] signal: Revert ptrace preempt magic{C::feature::rtsupport::rm preempt disable}
  + [[file:3.2/signal-revert-ptrace-preempt-magic.patch][3.2]]
    [[file:3.4/signal-revert-ptrace-preempt-magic.patch][3.4]]
    [[file:3.6/signal-revert-ptrace-preempt-magic.patch][3.6]]
  m [[file:3.8/signal-revert-ptrace-preempt-magic.patch][3.8]]
    [[file:3.10/signal-revert-ptrace-preempt-magic.patch][3.10]]
    [[file:3.12/signal-revert-ptrace-preempt-magic.patch][3.12]]
    [[file:3.14/signal-revert-ptrace-preempt-magic.patch][3.14]]
    [[file:3.18/signal-revert-ptrace-preempt-magic.patch][3.18]]
    [[file:4.0/signal-revert-ptrace-preempt-magic.patch][4.0]]
    [[file:4.1/signal-revert-ptrace-preempt-magic.patch][4.1]]
    [[file:4.4/signal-revert-ptrace-preempt-magic.patch][4.4]]
    [[file:4.6/signal-revert-ptrace-preempt-magic.patch][4.6]]
    [[file:4.8/signal-revert-ptrace-preempt-magic.patch][4.8]]
    [[file:4.9/signal-revert-ptrace-preempt-magic.patch][4.9]]
    [[file:4.11/signal-revert-ptrace-preempt-magic.patch][4.11]]
* [   3.2 -   4.11] mm, rt: kmap_atomic scheduling{C::feature::sched::add kmap atomic stack}
  + [[file:3.2/peter_zijlstra-re-_3_0-rt4.patch][3.2]]
  m [[file:3.4/peter_zijlstra-re-_3_0-rt4.patch][3.4]]
    [[file:3.6/mm-rt-kmap-atomic-scheduling.patch][3.6]]
  M [[file:3.8/mm-rt-kmap-atomic-scheduling.patch][3.8]]
    [[file:3.10/mm-rt-kmap-atomic-scheduling.patch][3.10]]
    [[file:3.12/mm-rt-kmap-atomic-scheduling.patch][3.12]]
  m [[file:3.14/mm-rt-kmap-atomic-scheduling.patch][3.14]]
  m [[file:3.18/mm-rt-kmap-atomic-scheduling.patch][3.18]]
  M [[file:4.0/mm-rt-kmap-atomic-scheduling.patch][4.0]]
  m [[file:4.1/mm-rt-kmap-atomic-scheduling.patch][4.1]]
  m [[file:4.4/mm-rt-kmap-atomic-scheduling.patch][4.4]]
    [[file:4.6/mm-rt-kmap-atomic-scheduling.patch][4.6]]
    [[file:4.8/mm-rt-kmap-atomic-scheduling.patch][4.8]]
    [[file:4.9/mm-rt-kmap-atomic-scheduling.patch][4.9]]
  M [[file:4.11/mm-rt-kmap-atomic-scheduling.patch][4.11]]
* [   3.2 -   4.11] rcu: Make ksoftirqd do RCU quiescent states{C::feature::rtsupport::rcu_bh_qs implementation}
  + [[file:3.2/patch-to-introduce-rcu-bh-qs-where-safe-from-softirq.patch][3.2]]
  M [[file:3.4/patch-to-introduce-rcu-bh-qs-where-safe-from-softirq.patch][3.4]]
    [[file:3.6/patch-to-introduce-rcu-bh-qs-where-safe-from-softirq.patch][3.6]]
  M [[file:3.8/patch-to-introduce-rcu-bh-qs-where-safe-from-softirq.patch][3.8]]
  m [[file:3.10/patch-to-introduce-rcu-bh-qs-where-safe-from-softirq.patch][3.10]]
  M [[file:3.12/patch-to-introduce-rcu-bh-qs-where-safe-from-softirq.patch][3.12]]
  M [[file:3.14/patch-to-introduce-rcu-bh-qs-where-safe-from-softirq.patch][3.14]]
  M [[file:3.18/patch-to-introduce-rcu-bh-qs-where-safe-from-softirq.patch][3.18]]
  M [[file:4.0/patch-to-introduce-rcu-bh-qs-where-safe-from-softirq.patch][4.0]]
  M [[file:4.1/patch-to-introduce-rcu-bh-qs-where-safe-from-softirq.patch][4.1]]
  m [[file:4.4/patch-to-introduce-rcu-bh-qs-where-safe-from-softirq.patch][4.4]]
  m [[file:4.6/patch-to-introduce-rcu-bh-qs-where-safe-from-softirq.patch][4.6]]
    [[file:4.8/patch-to-introduce-rcu-bh-qs-where-safe-from-softirq.patch][4.8]]
  m [[file:4.9/patch-to-introduce-rcu-bh-qs-where-safe-from-softirq.patch][4.9]]
  m [[file:4.11/patch-to-introduce-rcu-bh-qs-where-safe-from-softirq.patch][4.11]]
* [   3.4         ] lglock/rt: Use non-rt for_each_cpu() in -rt code
  + [[file:3.4/rfc-lglock-rt-use-non-rt-for_each_cpu-in-rt-code.patch][3.4]]
  - 3.6
* [   3.4         ] ring-buffer/rt: Check for irqs disabled before grabbing reader lock
  + [[file:3.4/rfc-ring-buffer-rt-check-for-irqs-disabled-before-grabbing-reader-lock.patch][3.4]]
  - 3.6
* [   3.4         ] timer: Fix hotplug for -rt
  + [[file:3.4/rfc-timer-fix-hotplug-for-rt.patch][3.4]]
  - 3.6
* [   3.4         ] futex/rt: Fix possible lockup when taking pi_lock in proxy handler
  + [[file:3.4/rfc-futex-rt-fix-possible-lockup-when-taking-pi_lock-in-proxy-handler.patch][3.4]]
  - 3.6
* [   3.4 -    3.6] rcu: Fix build break
  + [[file:3.4/rcu-fix-build-break.patch][3.4]]
  m [[file:3.6/rcu-fix-build-break.patch][3.6]]
  - 3.8
* [   3.4 -    3.6] timekeeping: Split xtime_lock
  + [[file:3.4/timekeeping-split-xtime-lock.patch][3.4]]
  M [[file:3.6/timekeeping-split-xtime-lock.patch][3.6]]
  - 3.8
* [   3.4 -    3.8] arm-omap-make-wakeupgen_lock-raw.patch
  + [[file:3.4/arm-omap-make-wakeupgen_lock-raw.patch][3.4]]
  m [[file:3.6/arm-omap-make-wakeupgen_lock-raw.patch][3.6]]
    [[file:3.8/arm-omap-make-wakeupgen_lock-raw.patch][3.8]]
  - 3.10
* [   3.4 -    3.8] ntp: Make ntp_lock raw.
  + [[file:3.4/ntp-make-ntp-lock-raw-sigh.patch][3.4]]
  m [[file:3.6/ntp-make-ntp-lock-raw-sigh.patch][3.6]]
    [[file:3.8/ntp-make-ntp-lock-raw-sigh.patch][3.8]]
  - 3.10
* [   3.4 -   3.12] sched/rt: Fix wait_task_interactive() to test rt_spin_lock state
  + [[file:3.4/rfc-sched-rt-fix-wait_task_interactive-to-test-rt_spin_lock-state.patch][3.4]]
    [[file:3.6/rfc-sched-rt-fix-wait_task_interactive-to-test-rt_spin_lock-state.patch][3.6]]
    [[file:3.8/rfc-sched-rt-fix-wait_task_interactive-to-test-rt_spin_lock-state.patch][3.8]]
    [[file:3.10/rfc-sched-rt-fix-wait_task_interactive-to-test-rt_spin_lock-state.patch][3.10]]
    [[file:3.12/rfc-sched-rt-fix-wait_task_interactive-to-test-rt_spin_lock-state.patch][3.12]]
  - 3.14
* [   3.4 -    4.1] x86: Do not disable preemption in int3 on 32bit
  + [[file:3.4/fix-rt-int3-x86_32-3.2-rt.patch][3.4]]
    [[file:3.6/fix-rt-int3-x86_32-3.2-rt.patch][3.6]]
  M [[file:3.8/fix-rt-int3-x86_32-3.2-rt.patch][3.8]]
  m [[file:3.10/fix-rt-int3-x86_32-3.2-rt.patch][3.10]]
    [[file:3.12/fix-rt-int3-x86_32-3.2-rt.patch][3.12]]
  m [[file:3.14/fix-rt-int3-x86_32-3.2-rt.patch][3.14]]
  M [[file:3.18/fix-rt-int3-x86_32-3.2-rt.patch][3.18]]
  m [[file:4.0/fix-rt-int3-x86_32-3.2-rt.patch][4.0]]
  m [[file:4.1/fix-rt-int3-x86_32-3.2-rt.patch][4.1]]
  - 4.4
* [   3.4 -   4.11] futex: Fix bug on when a requeued RT task times out
  + [[file:3.4/futex-requeue-pi-fix.patch][3.4]]
  M [[file:3.6/futex-requeue-pi-fix.patch][3.6]]
    [[file:3.8/futex-requeue-pi-fix.patch][3.8]]
    [[file:3.10/futex-requeue-pi-fix.patch][3.10]]
    [[file:3.12/futex-requeue-pi-fix.patch][3.12]]
    [[file:3.14/futex-requeue-pi-fix.patch][3.14]]
  m [[file:3.18/futex-requeue-pi-fix.patch][3.18]]
    [[file:4.0/futex-requeue-pi-fix.patch][4.0]]
    [[file:4.1/futex-requeue-pi-fix.patch][4.1]]
    [[file:4.4/futex-requeue-pi-fix.patch][4.4]]
  M [[file:4.6/futex-requeue-pi-fix.patch][4.6]]
    [[file:4.8/futex-requeue-pi-fix.patch][4.8]]
    [[file:4.9/futex-requeue-pi-fix.patch][4.9]]
  m [[file:4.11/futex-requeue-pi-fix.patch][4.11]]
* [   3.4 -   4.11] net: Use cpu_chill() instead of cpu_relax()
  + [[file:3.4/net-use-cpu-chill.patch][3.4]]
    [[file:3.6/net-use-cpu-chill.patch][3.6]]
    [[file:3.8/net-use-cpu-chill.patch][3.8]]
    [[file:3.10/net-use-cpu-chill.patch][3.10]]
  m [[file:3.12/net-use-cpu-chill.patch][3.12]]
    [[file:3.14/net-use-cpu-chill.patch][3.14]]
    [[file:3.18/net-use-cpu-chill.patch][3.18]]
    [[file:4.0/net-use-cpu-chill.patch][4.0]]
    [[file:4.1/net-use-cpu-chill.patch][4.1]]
    [[file:4.4/net-use-cpu-chill.patch][4.4]]
  m [[file:4.6/net-use-cpu-chill.patch][4.6]]
  m [[file:4.8/net-use-cpu-chill.patch][4.8]]
    [[file:4.9/net-use-cpu-chill.patch][4.9]]
    [[file:4.11/net-use-cpu-chill.patch][4.11]]
* [   3.4 -   4.11] fs: dcache: Use cpu_chill() in trylock loops
  + [[file:3.4/fs-dcache-use-cpu-chill-in-trylock-loops.patch][3.4]]
    [[file:3.6/fs-dcache-use-cpu-chill-in-trylock-loops.patch][3.6]]
  m [[file:3.8/fs-dcache-use-cpu-chill-in-trylock-loops.patch][3.8]]
  M [[file:3.10/fs-dcache-use-cpu-chill-in-trylock-loops.patch][3.10]]
  M [[file:3.12/fs-dcache-use-cpu-chill-in-trylock-loops.patch][3.12]]
  m [[file:3.14/fs-dcache-use-cpu-chill-in-trylock-loops.patch][3.14]]
  M [[file:3.18/fs-dcache-use-cpu-chill-in-trylock-loops.patch][3.18]]
    [[file:4.0/fs-dcache-use-cpu-chill-in-trylock-loops.patch][4.0]]
    [[file:4.1/fs-dcache-use-cpu-chill-in-trylock-loops.patch][4.1]]
    [[file:4.4/fs-dcache-use-cpu-chill-in-trylock-loops.patch][4.4]]
  m [[file:4.6/fs-dcache-use-cpu-chill-in-trylock-loops.patch][4.6]]
  M [[file:4.8/fs-dcache-use-cpu-chill-in-trylock-loops.patch][4.8]]
    [[file:4.9/fs-dcache-use-cpu-chill-in-trylock-loops.patch][4.9]]
  m [[file:4.11/fs-dcache-use-cpu-chill-in-trylock-loops.patch][4.11]]
* [   3.4 -   4.11] genirq: Allow disabling of softirq processing in irq thread context
  + [[file:3.4/irq-allow-disabling-of-softirq-processing-in-irq-thread-context.patch][3.4]]
  m [[file:3.6/irq-allow-disabling-of-softirq-processing-in-irq-thread-context.patch][3.6]]
    [[file:3.8/irq-allow-disabling-of-softirq-processing-in-irq-thread-context.patch][3.8]]
    [[file:3.10/irq-allow-disabling-of-softirq-processing-in-irq-thread-context.patch][3.10]]
    [[file:3.12/irq-allow-disabling-of-softirq-processing-in-irq-thread-context.patch][3.12]]
  M [[file:3.14/irq-allow-disabling-of-softirq-processing-in-irq-thread-context.patch][3.14]]
    [[file:3.18/irq-allow-disabling-of-softirq-processing-in-irq-thread-context.patch][3.18]]
  m [[file:4.0/irq-allow-disabling-of-softirq-processing-in-irq-thread-context.patch][4.0]]
  M [[file:4.1/irq-allow-disabling-of-softirq-processing-in-irq-thread-context.patch][4.1]]
  M [[file:4.4/irq-allow-disabling-of-softirq-processing-in-irq-thread-context.patch][4.4]]
    [[file:4.6/irq-allow-disabling-of-softirq-processing-in-irq-thread-context.patch][4.6]]
    [[file:4.8/irq-allow-disabling-of-softirq-processing-in-irq-thread-context.patch][4.8]]
    [[file:4.9/irq-allow-disabling-of-softirq-processing-in-irq-thread-context.patch][4.9]]
    [[file:4.11/irq-allow-disabling-of-softirq-processing-in-irq-thread-context.patch][4.11]]
* [   3.4 -   4.11] timer-fd: Prevent live lock
  + [[file:3.4/timer-fd-avoid-live-lock.patch][3.4]]
    [[file:3.6/timer-fd-avoid-live-lock.patch][3.6]]
    [[file:3.8/timer-fd-avoid-live-lock.patch][3.8]]
    [[file:3.10/timer-fd-avoid-live-lock.patch][3.10]]
  M [[file:3.12/timer-fd-avoid-live-lock.patch][3.12]]
    [[file:3.14/timer-fd-avoid-live-lock.patch][3.14]]
    [[file:3.18/timer-fd-avoid-live-lock.patch][3.18]]
    [[file:4.0/timer-fd-avoid-live-lock.patch][4.0]]
    [[file:4.1/timer-fd-avoid-live-lock.patch][4.1]]
    [[file:4.4/timer-fd-avoid-live-lock.patch][4.4]]
    [[file:4.6/timer-fd-avoid-live-lock.patch][4.6]]
    [[file:4.8/timer-fd-avoid-live-lock.patch][4.8]]
    [[file:4.9/timer-fd-avoid-live-lock.patch][4.9]]
    [[file:4.11/timer-fd-avoid-live-lock.patch][4.11]]
* [   3.4 -   4.11] seqlock: Prevent rt starvation
  + [[file:3.4/seqlock-prevent-rt-starvation.patch][3.4]]
    [[file:3.6/seqlock-prevent-rt-starvation.patch][3.6]]
  M [[file:3.8/seqlock-prevent-rt-starvation.patch][3.8]]
    [[file:3.10/seqlock-prevent-rt-starvation.patch][3.10]]
    [[file:3.12/seqlock-prevent-rt-starvation.patch][3.12]]
  M [[file:3.14/seqlock-prevent-rt-starvation.patch][3.14]]
  m [[file:3.18/seqlock-prevent-rt-starvation.patch][3.18]]
    [[file:4.0/seqlock-prevent-rt-starvation.patch][4.0]]
  M [[file:4.1/seqlock-prevent-rt-starvation.patch][4.1]]
  m [[file:4.4/seqlock-prevent-rt-starvation.patch][4.4]]
    [[file:4.6/seqlock-prevent-rt-starvation.patch][4.6]]
    [[file:4.8/seqlock-prevent-rt-starvation.patch][4.8]]
    [[file:4.9/seqlock-prevent-rt-starvation.patch][4.9]]
  M [[file:4.11/seqlock-prevent-rt-starvation.patch][4.11]]
* [   3.4 -   4.11] rt: Introduce cpu_chill()
  + [[file:3.4/rt-introduce-cpu-chill.patch][3.4]]
    [[file:3.6/rt-introduce-cpu-chill.patch][3.6]]
    [[file:3.8/rt-introduce-cpu-chill.patch][3.8]]
    [[file:3.10/rt-introduce-cpu-chill.patch][3.10]]
    [[file:3.12/rt-introduce-cpu-chill.patch][3.12]]
    [[file:3.14/rt-introduce-cpu-chill.patch][3.14]]
    [[file:3.18/rt-introduce-cpu-chill.patch][3.18]]
    [[file:4.0/rt-introduce-cpu-chill.patch][4.0]]
  M [[file:4.1/rt-introduce-cpu-chill.patch][4.1]]
    [[file:4.4/rt-introduce-cpu-chill.patch][4.4]]
    [[file:4.6/rt-introduce-cpu-chill.patch][4.6]]
    [[file:4.8/rt-introduce-cpu-chill.patch][4.8]]
    [[file:4.9/rt-introduce-cpu-chill.patch][4.9]]
    [[file:4.11/rt-introduce-cpu-chill.patch][4.11]]
* [   3.4 -   4.11] cpu: Make hotplug.lock a "sleeping" spinlock on RT
  + [[file:3.4/cpu-rt-make-hotplug-lock-a-sleeping-spinlock-on-rt.patch][3.4]]
    [[file:3.6/cpu-rt-make-hotplug-lock-a-sleeping-spinlock-on-rt.patch][3.6]]
  m [[file:3.8/cpu-rt-make-hotplug-lock-a-sleeping-spinlock-on-rt.patch][3.8]]
  m [[file:3.10/cpu-rt-make-hotplug-lock-a-sleeping-spinlock-on-rt.patch][3.10]]
  m [[file:3.12/cpu-rt-make-hotplug-lock-a-sleeping-spinlock-on-rt.patch][3.12]]
    [[file:3.14/cpu-rt-make-hotplug-lock-a-sleeping-spinlock-on-rt.patch][3.14]]
  M [[file:3.18/cpu-rt-make-hotplug-lock-a-sleeping-spinlock-on-rt.patch][3.18]]
  M [[file:4.0/cpu-rt-make-hotplug-lock-a-sleeping-spinlock-on-rt.patch][4.0]]
    [[file:4.1/cpu-rt-make-hotplug-lock-a-sleeping-spinlock-on-rt.patch][4.1]]
  M [[file:4.4/cpu-rt-make-hotplug-lock-a-sleeping-spinlock-on-rt.patch][4.4]]
    [[file:4.6/cpu-rt-make-hotplug-lock-a-sleeping-spinlock-on-rt.patch][4.6]]
  M [[file:4.8/cpu-rt-make-hotplug-lock-a-sleeping-spinlock-on-rt.patch][4.8]]
  m [[file:4.9/cpu-rt-make-hotplug-lock-a-sleeping-spinlock-on-rt.patch][4.9]]
    [[file:4.11/cpu-rt-make-hotplug-lock-a-sleeping-spinlock-on-rt.patch][4.11]]
* [   3.4 -   4.11] signal/x86: Delay calling signals in atomic
  + [[file:3.4/oleg-signal-rt-fix.patch][3.4]]
  M [[file:3.6/oleg-signal-rt-fix.patch][3.6]]
  M [[file:3.8/oleg-signal-rt-fix.patch][3.8]]
    [[file:3.10/oleg-signal-rt-fix.patch][3.10]]
    [[file:3.12/oleg-signal-rt-fix.patch][3.12]]
    [[file:3.14/oleg-signal-rt-fix.patch][3.14]]
    [[file:3.18/oleg-signal-rt-fix.patch][3.18]]
  M [[file:4.0/oleg-signal-rt-fix.patch][4.0]]
    [[file:4.1/oleg-signal-rt-fix.patch][4.1]]
  M [[file:4.4/oleg-signal-rt-fix.patch][4.4]]
    [[file:4.6/oleg-signal-rt-fix.patch][4.6]]
    [[file:4.8/oleg-signal-rt-fix.patch][4.8]]
  m [[file:4.9/oleg-signal-rt-fix.patch][4.9]]
  M [[file:4.11/oleg-signal-rt-fix.patch][4.11]]
* [   3.6         ] Disable RT_GROUP_SCHED in PREEMPT_RT_FULL
  + [[file:3.6/rt-disable-rt-group-sched.patch][3.6]]
  - 3.8
* [   3.6         ] mm: Protect activate_mm() by preempt_[disable%7Cenable]_rt()
  + [[file:3.6/mm-protect-activate_mm-by-preempt_-disable-7cenable-_rt.patch][3.6]]
  - 3.8
* [   3.6         ] timer.c: fix build fail for ! RT_FULL
  + [[file:3.6/timer.c-fix-build-fail-for-RT_FULL.patch][3.6]]
  - 3.8
* [   3.6         ] mm: slab: Fix potential deadlock
  + [[file:3.6/mm-slab-fix-potential-deadlock.patch][3.6]]
  - 3.8
* [   3.6         ] crypto: Make core builtin and init srcu early
  + [[file:3.6/crypto-make-core-static-and-init-scru-early.patch][3.6]]
  - 3.8
* [   3.6 -    3.8] x86: perf: Deal with kfree from atomic contexts
  + [[file:3.6/x86-perf-uncore-deal-with-kfree.patch][3.6]]
    [[file:3.8/x86-perf-uncore-deal-with-kfree.patch][3.8]]
  - 3.10
* [   3.6 -    3.8] genirq: Add default affinity mask command line option
  + [[file:3.6/genirq-add-default-mask-cmdline-option.patch][3.6]]
    [[file:3.8/genirq-add-default-mask-cmdline-option.patch][3.8]]
  - 3.10
* [   3.6 -    3.8] lockdep: Selftest: convert spinlock to raw spinlock
  + [[file:3.6/lockdep-selftest-convert-spinlock-to-raw-spinlock.patch][3.6]]
    [[file:3.8/lockdep-selftest-convert-spinlock-to-raw-spinlock.patch][3.8]]
  - 3.10
* [   3.6 -    3.8] powerpc: Mark low level irq handlers NO_THREAD
  + [[file:3.6/ppc-mark-low-level-handlers-no-thread.patch][3.6]]
    [[file:3.8/ppc-mark-low-level-handlers-no-thread.patch][3.8]]
  - 3.10
* [   3.6 -   3.10] rcu: rcutiny: Prevent RCU stall
  + [[file:3.6/rcu-tiny-solve-rt-mistery.patch][3.6]]
    [[file:3.8/rcu-tiny-solve-rt-mistery.patch][3.8]]
    [[file:3.10/rcu-tiny-solve-rt-mistery.patch][3.10]]
  - 3.12
* [   3.6 -   3.14] stomp_machine: Use mutex_trylock when called from inactive cpu
  + [[file:3.6/stomp-machine-deal-clever-with-stopper-lock.patch][3.6]]
    [[file:3.8/stomp-machine-deal-clever-with-stopper-lock.patch][3.8]]
  m [[file:3.10/stomp-machine-deal-clever-with-stopper-lock.patch][3.10]]
    [[file:3.12/stomp-machine-deal-clever-with-stopper-lock.patch][3.12]]
    [[file:3.14/stomp-machine-deal-clever-with-stopper-lock.patch][3.14]]
  - 3.18
* [   3.6 -   3.14] sched: Add better debug output for might_sleep()
  + [[file:3.6/sched-better-debug-output-for-might-sleep.patch][3.6]]
  m [[file:3.8/sched-better-debug-output-for-might-sleep.patch][3.8]]
  M [[file:3.10/sched-better-debug-output-for-might-sleep.patch][3.10]]
    [[file:3.12/sched-better-debug-output-for-might-sleep.patch][3.12]]
  m [[file:3.14/sched-Add-better-debug-output-for-might_sleep.patch][3.14]]
  - 3.18
* [   3.6 -   3.18] net: Use get_cpu_light() in ip_send_unicast_reply()
  + [[file:3.6/net-use-cpu-light-in-ip-send-unicast-reply.patch][3.6]]
    [[file:3.8/net-use-cpu-light-in-ip-send-unicast-reply.patch][3.8]]
    [[file:3.10/net-use-cpu-light-in-ip-send-unicast-reply.patch][3.10]]
    [[file:3.12/net-use-cpu-light-in-ip-send-unicast-reply.patch][3.12]]
    [[file:3.14/net-use-cpu-light-in-ip-send-unicast-reply.patch][3.14]]
  m [[file:3.18/net-use-cpu-light-in-ip-send-unicast-reply.patch][3.18]]
  - 4.0
* [   3.6 -    4.0] softirq: Init softirq local lock after per cpu section is set up
  + [[file:3.6/softirq-init-softirq-local-lock-after-per-cpu-section-is-set-up.patch][3.6]]
    [[file:3.8/softirq-init-softirq-local-lock-after-per-cpu-section-is-set-up.patch][3.8]]
  m [[file:3.10/softirq-init-softirq-local-lock-after-per-cpu-section-is-set-up.patch][3.10]]
    [[file:3.12/softirq-init-softirq-local-lock-after-per-cpu-section-is-set-up.patch][3.12]]
    [[file:3.14/softirq-init-softirq-local-lock-after-per-cpu-section-is-set-up.patch][3.14]]
    [[file:3.18/softirq-init-softirq-local-lock-after-per-cpu-section-is-set-up.patch][3.18]]
    [[file:4.0/softirq-init-softirq-local-lock-after-per-cpu-section-is-set-up.patch][4.0]]
  - 4.1
* [   3.6 -    4.0] softirq: Split handling function
  + [[file:3.6/softirq-split-handling-function.patch][3.6]]
    [[file:3.8/softirq-split-handling-function.patch][3.8]]
    [[file:3.10/softirq-split-handling-function.patch][3.10]]
    [[file:3.12/softirq-split-handling-function.patch][3.12]]
  M [[file:3.14/softirq-split-handling-function.patch][3.14]]
  M [[file:3.18/softirq-split-handling-function.patch][3.18]]
    [[file:4.0/softirq-split-handling-function.patch][4.0]]
  - 4.1
* [   3.6 -    4.0] softirq: Make serving softirqs a task flag
  + [[file:3.6/softirq-make-serving-softirqs-a-task-flag.patch][3.6]]
  M [[file:3.8/softirq-make-serving-softirqs-a-task-flag.patch][3.8]]
    [[file:3.10/softirq-make-serving-softirqs-a-task-flag.patch][3.10]]
    [[file:3.12/softirq-make-serving-softirqs-a-task-flag.patch][3.12]]
    [[file:3.14/softirq-make-serving-softirqs-a-task-flag.patch][3.14]]
    [[file:3.18/softirq-make-serving-softirqs-a-task-flag.patch][3.18]]
  M [[file:4.0/softirq-make-serving-softirqs-a-task-flag.patch][4.0]]
  - 4.1
* [   3.6 -    4.0] rt: rwsem/rwlock: lockdep annotations
  + [[file:3.6/rt-rw-lockdep-annotations.patch][3.6]]
  M [[file:3.8/rt-rw-lockdep-annotations.patch][3.8]]
    [[file:3.10/rt-rw-lockdep-annotations.patch][3.10]]
    [[file:3.12/rt-rw-lockdep-annotations.patch][3.12]]
  M [[file:3.14/rt-rw-lockdep-annotations.patch][3.14]]
  M [[file:3.18/rt-rw-lockdep-annotations.patch][3.18]]
  M [[file:4.0/rt-rw-lockdep-annotations.patch][4.0]]
  - 4.1
* [   3.6 -    4.1] fs, jbd: pull your plug when waiting for space
  + [[file:3.6/fs-jbd-pull-plug-when-waiting-for-space.patch][3.6]]
    [[file:3.8/fs-jbd-pull-plug-when-waiting-for-space.patch][3.8]]
    [[file:3.10/fs-jbd-pull-plug-when-waiting-for-space.patch][3.10]]
    [[file:3.12/fs-jbd-pull-plug-when-waiting-for-space.patch][3.12]]
    [[file:3.14/fs-jbd-pull-plug-when-waiting-for-space.patch][3.14]]
    [[file:3.18/fs-jbd-pull-plug-when-waiting-for-space.patch][3.18]]
    [[file:4.0/fs-jbd-pull-plug-when-waiting-for-space.patch][4.0]]
    [[file:4.1/fs-jbd-pull-plug-when-waiting-for-space.patch][4.1]]
  - 4.4
* [   3.6 -   4.11] printk: Make rt aware
  + [[file:3.6/printk-rt-aware.patch][3.6]]
    [[file:3.8/printk-rt-aware.patch][3.8]]
  m [[file:3.10/printk-rt-aware.patch][3.10]]
    [[file:3.12/printk-rt-aware.patch][3.12]]
    [[file:3.14/printk-rt-aware.patch][3.14]]
  M [[file:3.18/printk-rt-aware.patch][3.18]]
    [[file:4.0/printk-rt-aware.patch][4.0]]
    [[file:4.1/printk-rt-aware.patch][4.1]]
  M [[file:4.4/printk-rt-aware.patch][4.4]]
  M [[file:4.6/printk-rt-aware.patch][4.6]]
    [[file:4.8/printk-rt-aware.patch][4.8]]
    [[file:4.9/printk-rt-aware.patch][4.9]]
  M [[file:4.11/printk-rt-aware.patch][4.11]]
* [   3.6 -   4.11] net: Remove preemption disabling in netif_rx()
  + [[file:3.6/upstream-net-rt-remove-preemption-disabling-in-netif_rx.patch][3.6]]
    [[file:3.8/upstream-net-rt-remove-preemption-disabling-in-netif_rx.patch][3.8]]
    [[file:3.10/upstream-net-rt-remove-preemption-disabling-in-netif_rx.patch][3.10]]
    [[file:3.12/upstream-net-rt-remove-preemption-disabling-in-netif_rx.patch][3.12]]
    [[file:3.14/upstream-net-rt-remove-preemption-disabling-in-netif_rx.patch][3.14]]
    [[file:3.18/upstream-net-rt-remove-preemption-disabling-in-netif_rx.patch][3.18]]
    [[file:4.0/upstream-net-rt-remove-preemption-disabling-in-netif_rx.patch][4.0]]
    [[file:4.1/upstream-net-rt-remove-preemption-disabling-in-netif_rx.patch][4.1]]
    [[file:4.4/upstream-net-rt-remove-preemption-disabling-in-netif_rx.patch][4.4]]
    [[file:4.6/upstream-net-rt-remove-preemption-disabling-in-netif_rx.patch][4.6]]
    [[file:4.8/upstream-net-rt-remove-preemption-disabling-in-netif_rx.patch][4.8]]
    [[file:4.9/upstream-net-rt-remove-preemption-disabling-in-netif_rx.patch][4.9]]
    [[file:4.11/upstream-net-rt-remove-preemption-disabling-in-netif_rx.patch][4.11]]
* [   3.6 -   4.11] lockdep: selftest: Only do hardirq context test for raw spinlock
  + [[file:3.6/lockdep-selftest-only-do-hardirq-context-test-for-raw-spinlock.patch][3.6]]
    [[file:3.8/lockdep-selftest-only-do-hardirq-context-test-for-raw-spinlock.patch][3.8]]
    [[file:3.10/lockdep-selftest-only-do-hardirq-context-test-for-raw-spinlock.patch][3.10]]
  m [[file:3.12/lockdep-selftest-only-do-hardirq-context-test-for-raw-spinlock.patch][3.12]]
    [[file:3.14/lockdep-selftest-only-do-hardirq-context-test-for-raw-spinlock.patch][3.14]]
    [[file:3.18/lockdep-selftest-only-do-hardirq-context-test-for-raw-spinlock.patch][3.18]]
    [[file:4.0/lockdep-selftest-only-do-hardirq-context-test-for-raw-spinlock.patch][4.0]]
    [[file:4.1/lockdep-selftest-only-do-hardirq-context-test-for-raw-spinlock.patch][4.1]]
    [[file:4.4/lockdep-selftest-only-do-hardirq-context-test-for-raw-spinlock.patch][4.4]]
    [[file:4.6/lockdep-selftest-only-do-hardirq-context-test-for-raw-spinlock.patch][4.6]]
    [[file:4.8/lockdep-selftest-only-do-hardirq-context-test-for-raw-spinlock.patch][4.8]]
    [[file:4.9/lockdep-selftest-only-do-hardirq-context-test-for-raw-spinlock.patch][4.9]]
    [[file:4.11/lockdep-selftest-only-do-hardirq-context-test-for-raw-spinlock.patch][4.11]]
* [   3.6 -   4.11] scsi: qla2xxx: Use local_irq_save_nort() in qla2x00_poll
  + [[file:3.6/scsi-qla2xxx-fix-bug-sleeping-function-called-from-invalid-context.patch][3.6]]
    [[file:3.8/scsi-qla2xxx-fix-bug-sleeping-function-called-from-invalid-context.patch][3.8]]
    [[file:3.10/scsi-qla2xxx-fix-bug-sleeping-function-called-from-invalid-context.patch][3.10]]
  m [[file:3.12/scsi-qla2xxx-fix-bug-sleeping-function-called-from-invalid-context.patch][3.12]]
    [[file:3.14/scsi-qla2xxx-fix-bug-sleeping-function-called-from-invalid-context.patch][3.14]]
    [[file:3.18/scsi-qla2xxx-fix-bug-sleeping-function-called-from-invalid-context.patch][3.18]]
    [[file:4.0/scsi-qla2xxx-fix-bug-sleeping-function-called-from-invalid-context.patch][4.0]]
    [[file:4.1/scsi-qla2xxx-fix-bug-sleeping-function-called-from-invalid-context.patch][4.1]]
    [[file:4.4/scsi-qla2xxx-fix-bug-sleeping-function-called-from-invalid-context.patch][4.4]]
    [[file:4.6/scsi-qla2xxx-fix-bug-sleeping-function-called-from-invalid-context.patch][4.6]]
    [[file:4.8/scsi-qla2xxx-fix-bug-sleeping-function-called-from-invalid-context.patch][4.8]]
    [[file:4.9/scsi-qla2xxx-fix-bug-sleeping-function-called-from-invalid-context.patch][4.9]]
    [[file:4.11/scsi-qla2xxx-fix-bug-sleeping-function-called-from-invalid-context.patch][4.11]]
* [   3.6 -   4.11] cpu/rt: Rework cpu down for PREEMPT_RT
  + [[file:3.6/cpu-rt-rework-cpu-down.patch][3.6]]
  m [[file:3.8/cpu-rt-rework-cpu-down.patch][3.8]]
  M [[file:3.10/cpu-rt-rework-cpu-down.patch][3.10]]
  m [[file:3.12/cpu-rt-rework-cpu-down.patch][3.12]]
  m [[file:3.14/cpu-rt-rework-cpu-down.patch][3.14]]
  M [[file:3.18/cpu-rt-rework-cpu-down.patch][3.18]]
  M [[file:4.0/cpu-rt-rework-cpu-down.patch][4.0]]
    [[file:4.1/cpu-rt-rework-cpu-down.patch][4.1]]
  M [[file:4.4/cpu-rt-rework-cpu-down.patch][4.4]]
  M [[file:4.6/cpu-rt-rework-cpu-down.patch][4.6]]
  M [[file:4.8/cpu-rt-rework-cpu-down.patch][4.8]]
  M [[file:4.9/cpu-rt-rework-cpu-down.patch][4.9]]
  M [[file:4.11/cpu-rt-rework-cpu-down.patch][4.11]]
* [   3.6 -   4.11] random: Make it work on rt
  + [[file:3.6/random-make-it-work-on-rt.patch][3.6]]
  M [[file:3.8/random-make-it-work-on-rt.patch][3.8]]
    [[file:3.10/random-make-it-work-on-rt.patch][3.10]]
  m [[file:3.12/random-make-it-work-on-rt.patch][3.12]]
  M [[file:3.14/random-make-it-work-on-rt.patch][3.14]]
  M [[file:3.18/random-make-it-work-on-rt.patch][3.18]]
    [[file:4.0/random-make-it-work-on-rt.patch][4.0]]
    [[file:4.1/random-make-it-work-on-rt.patch][4.1]]
  M [[file:4.4/random-make-it-work-on-rt.patch][4.4]]
  m [[file:4.6/random-make-it-work-on-rt.patch][4.6]]
  M [[file:4.8/random-make-it-work-on-rt.patch][4.8]]
  M [[file:4.9/random-make-it-work-on-rt.patch][4.9]]
  m [[file:4.11/random-make-it-work-on-rt.patch][4.11]]
* [   3.6 -   4.11] softirq: Check preemption after reenabling interrupts
  + [[file:3.6/softirq-preempt-fix-3-re.patch][3.6]]
    [[file:3.8/softirq-preempt-fix-3-re.patch][3.8]]
  M [[file:3.10/softirq-preempt-fix-3-re.patch][3.10]]
    [[file:3.12/softirq-preempt-fix-3-re.patch][3.12]]
  M [[file:3.14/softirq-preempt-fix-3-re.patch][3.14]]
  m [[file:3.18/softirq-preempt-fix-3-re.patch][3.18]]
  M [[file:4.0/softirq-preempt-fix-3-re.patch][4.0]]
    [[file:4.1/softirq-preempt-fix-3-re.patch][4.1]]
  m [[file:4.4/softirq-preempt-fix-3-re.patch][4.4]]
  M [[file:4.6/softirq-preempt-fix-3-re.patch][4.6]]
    [[file:4.8/softirq-preempt-fix-3-re.patch][4.8]]
  M [[file:4.9/softirq-preempt-fix-3-re.patch][4.9]]
  m [[file:4.11/softirq-preempt-fix-3-re.patch][4.11]]
* [   3.6 -   4.11] perf: Make swevent hrtimer run in irq instead of softirq
  + [[file:3.6/perf-make-swevent-hrtimer-irqsafe.patch][3.6]]
    [[file:3.8/perf-make-swevent-hrtimer-irqsafe.patch][3.8]]
    [[file:3.10/perf-make-swevent-hrtimer-irqsafe.patch][3.10]]
    [[file:3.12/perf-make-swevent-hrtimer-irqsafe.patch][3.12]]
    [[file:3.14/perf-make-swevent-hrtimer-irqsafe.patch][3.14]]
    [[file:3.18/perf-make-swevent-hrtimer-irqsafe.patch][3.18]]
    [[file:4.0/perf-make-swevent-hrtimer-irqsafe.patch][4.0]]
    [[file:4.1/perf-make-swevent-hrtimer-irqsafe.patch][4.1]]
    [[file:4.4/perf-make-swevent-hrtimer-irqsafe.patch][4.4]]
    [[file:4.6/perf-make-swevent-hrtimer-irqsafe.patch][4.6]]
    [[file:4.8/perf-make-swevent-hrtimer-irqsafe.patch][4.8]]
    [[file:4.9/perf-make-swevent-hrtimer-irqsafe.patch][4.9]]
    [[file:4.11/perf-make-swevent-hrtimer-irqsafe.patch][4.11]]
* [   3.6 -   4.11] mm: page_alloc: Use local_lock_on() instead of plain spinlock
  + [[file:3.6/mm-page-alloc-use-local-lock-on-target-cpu.patch][3.6]]
  m [[file:3.8/mm-page-alloc-use-local-lock-on-target-cpu.patch][3.8]]
  M [[file:3.10/mm-page-alloc-use-local-lock-on-target-cpu.patch][3.10]]
    [[file:3.12/mm-page-alloc-use-local-lock-on-target-cpu.patch][3.12]]
    [[file:3.14/mm-page-alloc-use-local-lock-on-target-cpu.patch][3.14]]
    [[file:3.18/mm-page-alloc-use-local-lock-on-target-cpu.patch][3.18]]
    [[file:4.0/mm-page-alloc-use-local-lock-on-target-cpu.patch][4.0]]
    [[file:4.1/mm-page-alloc-use-local-lock-on-target-cpu.patch][4.1]]
    [[file:4.4/mm-page-alloc-use-local-lock-on-target-cpu.patch][4.4]]
    [[file:4.6/mm-page-alloc-use-local-lock-on-target-cpu.patch][4.6]]
    [[file:4.8/mm-page-alloc-use-local-lock-on-target-cpu.patch][4.8]]
    [[file:4.9/mm-page-alloc-use-local-lock-on-target-cpu.patch][4.9]]
    [[file:4.11/mm-page-alloc-use-local-lock-on-target-cpu.patch][4.11]]
* [   3.6 -   4.11] net: Another local_irq_disable/kmalloc headache
  + [[file:3.6/net-another-local-irq-disable-alloc-atomic-headache.patch][3.6]]
  m [[file:3.8/net-another-local-irq-disable-alloc-atomic-headache.patch][3.8]]
  m [[file:3.10/net-another-local-irq-disable-alloc-atomic-headache.patch][3.10]]
    [[file:3.12/net-another-local-irq-disable-alloc-atomic-headache.patch][3.12]]
    [[file:3.14/net-another-local-irq-disable-alloc-atomic-headache.patch][3.14]]
  m [[file:3.18/net-another-local-irq-disable-alloc-atomic-headache.patch][3.18]]
  M [[file:4.0/net-another-local-irq-disable-alloc-atomic-headache.patch][4.0]]
    [[file:4.1/net-another-local-irq-disable-alloc-atomic-headache.patch][4.1]]
  m [[file:4.4/net-another-local-irq-disable-alloc-atomic-headache.patch][4.4]]
  M [[file:4.6/net-another-local-irq-disable-alloc-atomic-headache.patch][4.6]]
    [[file:4.8/net-another-local-irq-disable-alloc-atomic-headache.patch][4.8]]
    [[file:4.9/net-another-local-irq-disable-alloc-atomic-headache.patch][4.9]]
  m [[file:4.11/net-another-local-irq-disable-alloc-atomic-headache.patch][4.11]]
* [   3.6 -   4.11] softirq: Split softirq locks
  + [[file:3.6/softirq-split-locks.patch][3.6]]
  M [[file:3.8/softirq-split-locks.patch][3.8]]
  M [[file:3.10/softirq-split-locks.patch][3.10]]
  M [[file:3.12/softirq-split-locks.patch][3.12]]
  M [[file:3.14/softirq-split-locks.patch][3.14]]
  M [[file:3.18/softirq-split-locks.patch][3.18]]
  M [[file:4.0/softirq-split-locks.patch][4.0]]
  M [[file:4.1/softirq-split-locks.patch][4.1]]
  M [[file:4.4/softirq-split-locks.patch][4.4]]
  M [[file:4.6/softirq-split-locks.patch][4.6]]
    [[file:4.8/softirq-split-locks.patch][4.8]]
  M [[file:4.9/softirq-split-locks.patch][4.9]]
  M [[file:4.11/softirq-split-locks.patch][4.11]]
* [   3.6 -   4.11] crypto: Convert crypto notifier chain to SRCU
  + [[file:3.6/peterz-srcu-crypto-chain.patch][3.6]]
  M [[file:3.8/peterz-srcu-crypto-chain.patch][3.8]]
  m [[file:3.10/peterz-srcu-crypto-chain.patch][3.10]]
  m [[file:3.12/peterz-srcu-crypto-chain.patch][3.12]]
    [[file:3.14/peterz-srcu-crypto-chain.patch][3.14]]
    [[file:3.18/peterz-srcu-crypto-chain.patch][3.18]]
    [[file:4.0/peterz-srcu-crypto-chain.patch][4.0]]
    [[file:4.1/peterz-srcu-crypto-chain.patch][4.1]]
    [[file:4.4/peterz-srcu-crypto-chain.patch][4.4]]
    [[file:4.6/peterz-srcu-crypto-chain.patch][4.6]]
    [[file:4.8/peterz-srcu-crypto-chain.patch][4.8]]
    [[file:4.9/peterz-srcu-crypto-chain.patch][4.9]]
    [[file:4.11/peterz-srcu-crypto-chain.patch][4.11]]
* [   3.8         ] timekeeping: Implement a shadow timekeeper
  + [[file:3.8/timekeeping-implement-shadow-timekeeper.patch][3.8]]
  - 3.10
* [   3.8         ] timekeeping: Store cycle_last value in timekeeper struct as well
  + [[file:3.8/timekeeping-store-cycle-last-in-timekeeper.patch][3.8]]
  - 3.10
* [   3.8         ] printk: Fix rq->lock vs logbuf_lock unlock lock inversion
  + [[file:3.8/fix-rq-3elock-vs-logbuf_lock-unlock-race.patch][3.8]]
  - 3.10
* [   3.8         ] timekeeping: Split timekeeper_lock into lock and seqcount
  + [[file:3.8/timekeeping-split-timekeeper-lock.patch][3.8]]
  - 3.10
* [   3.8         ] timekeeping: Calc stuff once
  + [[file:3.8/timekeeping-do-not-calc-crap-over-and-over.patch][3.8]]
  - 3.10
* [   3.8         ] of: fix recursive locking in of_get_next_available_child()
  + [[file:3.8/0001-of-fix-recursive-locking-in-of_get_next_available_ch.patch][3.8]]
  - 3.10
* [   3.8         ] powerpc/fsl-msi: use a different locklcass for the cascade interrupt
  + [[file:3.8/powerpc-fsl-msi-use-a-different-locklcass-for-the-ca.patch][3.8]]
  - 3.10
* [   3.8         ] OF: Convert devtree lock from rw_lock to raw spinlock
  + [[file:3.8/of-convert-devtree-lock-from-rw_lock-to-raw-spinlock.patch][3.8]]
  - 3.10
* [   3.8         ] timekeeping: Delay update of clock->cycle_last
  + [[file:3.8/timekeeping-delay-clock-cycle-last-update.patch][3.8]]
  - 3.10
* [   3.8         ] timekeeping: Move lock out of timekeeper struct
  + [[file:3.8/timekeeping-move-lock-out-of-timekeeper.patch][3.8]]
  - 3.10
* [   3.8         ] kernel/srcu: merge common code into a macro
  + [[file:3.8/0001-kernel-srcu-merge-common-code-into-a-macro.patch][3.8]]
  - 3.10
* [   3.8         ] FIX [2/2] slub: Tid must be retrieved from the percpu area of the current proces
  + [[file:3.8/fix-2-2-slub-tid-must-be-retrieved-from-the-percpu-area-of-the-current-processor.patch][3.8]]
  - 3.10
* [   3.8         ] spi/omap-mcspi: check condition also after timeout
  + [[file:3.8/spi-omap-mcspi-check-condition-also-after-timeout.patch][3.8]]
  - 3.10
* [   3.8         ] FIX [1/2] slub: Do not dereference NULL pointer in node_match
  + [[file:3.8/fix-1-2-slub-do-not-dereference-null-pointer-in-node_match.patch][3.8]]
  - 3.10
* [   3.8         ] timekeeping: Make jiffies_lock internal
  + [[file:3.8/timekeeping-make-jiffies-lock-internal.patch][3.8]]
  - 3.10
* [   3.8         ] timekeeping: Shorten seq_count region
  + [[file:3.8/timekeeping-shorten-seq-count-region.patch][3.8]]
  - 3.10
* [   3.8 -   3.10] rcutiny: Use simple waitqueue
  + [[file:3.8/rcutiny-use-simple-waitqueue.patch][3.8]]
    [[file:3.10/rcutiny-use-simple-waitqueue.patch][3.10]]
  - 3.12
* [   3.8 -   3.12] sched: Adjust sched_reset_on_fork when nothing else changes
  + [[file:3.8/sched-adjust-reset-on-fork-always.patch][3.8]]
    [[file:3.10/sched-adjust-reset-on-fork-always.patch][3.10]]
    [[file:3.12/sched-adjust-reset-on-fork-always.patch][3.12]]
  - 3.14
* [   3.8 -   3.12] sched: Consider pi boosting in setscheduler
  + [[file:3.8/sched-consider-pi-boosting-in-setscheduler.patch][3.8]]
    [[file:3.10/sched-consider-pi-boosting-in-setscheduler.patch][3.10]]
    [[file:3.12/sched-consider-pi-boosting-in-setscheduler.patch][3.12]]
  - 3.14
* [   3.8 -   3.14] sched: Init idle->on_rq in init_idle()
  + [[file:3.8/idle-state.patch][3.8]]
    [[file:3.10/idle-state.patch][3.10]]
    [[file:3.12/idle-state.patch][3.12]]
    [[file:3.14/sched-Init-idle-on_rq-in-init_idle.patch][3.14]]
  - 3.18
* [   3.8 -   3.14] sched: Check for idle task in might_sleep()
  + [[file:3.8/might-sleep-check-for-idle.patch][3.8]]
    [[file:3.10/might-sleep-check-for-idle.patch][3.10]]
    [[file:3.12/might-sleep-check-for-idle.patch][3.12]]
    [[file:3.14/sched-Check-for-idle-task-in-might_sleep.patch][3.14]]
  - 3.18
* [   3.8 -   3.14] sched: Queue RT tasks to head when prio drops
  + [[file:3.8/sched-enqueue-to-head.patch][3.8]]
    [[file:3.10/sched-enqueue-to-head.patch][3.10]]
    [[file:3.12/sched-enqueue-to-head.patch][3.12]]
    [[file:3.14/sched-Queue-RT-tasks-to-head-when-prio-drops.patch][3.14]]
  - 3.18
* [   3.8 -    4.0] wait-simple: Rework for use with completions
  + [[file:3.8/wait-simple-rework-for-completions.patch][3.8]]
    [[file:3.10/wait-simple-rework-for-completions.patch][3.10]]
  M [[file:3.12/wait-simple-rework-for-completions.patch][3.12]]
    [[file:3.14/wait-simple-rework-for-completions.patch][3.14]]
    [[file:3.18/wait-simple-rework-for-completions.patch][3.18]]
    [[file:4.0/wait-simple-rework-for-completions.patch][4.0]]
  - 4.1
* [   3.8 -    4.0] kernel/treercu: use a simple waitqueue
  + [[file:3.8/treercu-use-simple-waitqueue.patch][3.8]]
  m [[file:3.10/treercu-use-simple-waitqueue.patch][3.10]]
    [[file:3.12/treercu-use-simple-waitqueue.patch][3.12]]
  m [[file:3.14/treercu-use-simple-waitqueue.patch][3.14]]
  M [[file:3.18/treercu-use-simple-waitqueue.patch][3.18]]
    [[file:4.0/treercu-use-simple-waitqueue.patch][4.0]]
  - 4.1
* [   3.8 -    4.0] softirq: Adapt NOHZ softirq pending check to new RT scheme
  + [[file:3.8/softirq-adapt-nohz-pending-debug-code-to-new-scheme.patch][3.8]]
    [[file:3.10/softirq-adapt-nohz-pending-debug-code-to-new-scheme.patch][3.10]]
  M [[file:3.12/softirq-adapt-nohz-pending-debug-code-to-new-scheme.patch][3.12]]
    [[file:3.14/softirq-adapt-nohz-pending-debug-code-to-new-scheme.patch][3.14]]
  M [[file:3.18/softirq-adapt-nohz-pending-debug-code-to-new-scheme.patch][3.18]]
  M [[file:4.0/softirq-adapt-nohz-pending-debug-code-to-new-scheme.patch][4.0]]
  - 4.1
* [   3.8 -    4.0] net: Use local_bh_disable in netif_rx_ni()
  + [[file:3.8/net-netif-rx-ni-use-local-bh-disable.patch][3.8]]
    [[file:3.10/net-netif-rx-ni-use-local-bh-disable.patch][3.10]]
    [[file:3.12/net-netif-rx-ni-use-local-bh-disable.patch][3.12]]
  m [[file:3.14/net-netif-rx-ni-use-local-bh-disable.patch][3.14]]
    [[file:3.18/net-netif-rx-ni-use-local-bh-disable.patch][3.18]]
    [[file:4.0/net-netif-rx-ni-use-local-bh-disable.patch][4.0]]
  - 4.1
* [   3.8 -    4.1] hrtimer: Raise softirq if hrtimer irq stalled
  + [[file:3.8/hrtimer-raise-softirq-if-hrtimer-irq-stalled.patch][3.8]]
    [[file:3.10/hrtimer-raise-softirq-if-hrtimer-irq-stalled.patch][3.10]]
    [[file:3.12/hrtimer-raise-softirq-if-hrtimer-irq-stalled.patch][3.12]]
    [[file:3.14/hrtimer-raise-softirq-if-hrtimer-irq-stalled.patch][3.14]]
    [[file:3.18/hrtimer-raise-softirq-if-hrtimer-irq-stalled.patch][3.18]]
    [[file:4.0/hrtimer-raise-softirq-if-hrtimer-irq-stalled.patch][4.0]]
    [[file:4.1/hrtimer-raise-softirq-if-hrtimer-irq-stalled.patch][4.1]]
  - 4.4
* [   3.8 -    4.4] wait-simple: Simple waitqueue implementation
  + [[file:3.8/wait-simple-implementation.patch][3.8]]
  m [[file:3.10/wait-simple-implementation.patch][3.10]]
  m [[file:3.12/wait-simple-implementation.patch][3.12]]
  M [[file:3.14/wait-simple-implementation.patch][3.14]]
  M [[file:3.18/wait-simple-implementation.patch][3.18]]
    [[file:4.0/wait-simple-implementation.patch][4.0]]
    [[file:4.1/wait-simple-implementation.patch][4.1]]
  m [[file:4.4/wait-simple-implementation.patch][4.4]]
  - 4.6
* [   3.8 -    4.6] i2c/omap: drop the lock hard irq context
  + [[file:3.8/i2c-omap-drop-the-lock-hard-irq-context.patch][3.8]]
    [[file:3.10/i2c-omap-drop-the-lock-hard-irq-context.patch][3.10]]
    [[file:3.12/i2c-omap-drop-the-lock-hard-irq-context.patch][3.12]]
    [[file:3.14/i2c-omap-drop-the-lock-hard-irq-context.patch][3.14]]
    [[file:3.18/i2c-omap-drop-the-lock-hard-irq-context.patch][3.18]]
    [[file:4.0/i2c-omap-drop-the-lock-hard-irq-context.patch][4.0]]
    [[file:4.1/i2c-omap-drop-the-lock-hard-irq-context.patch][4.1]]
  M [[file:4.4/i2c-omap-drop-the-lock-hard-irq-context.patch][4.4]]
    [[file:4.6/i2c-omap-drop-the-lock-hard-irq-context.patch][4.6]]
  - 4.8
* [   3.8 -   4.11] arm: Enable highmem for rt
  + [[file:3.8/arm-enable-highmem-for-rt.patch][3.8]]
    [[file:3.10/arm-enable-highmem-for-rt.patch][3.10]]
  m [[file:3.12/arm-enable-highmem-for-rt.patch][3.12]]
    [[file:3.14/arm-enable-highmem-for-rt.patch][3.14]]
  M [[file:3.18/arm-enable-highmem-for-rt.patch][3.18]]
  M [[file:4.0/arm-enable-highmem-for-rt.patch][4.0]]
  M [[file:4.1/arm-enable-highmem-for-rt.patch][4.1]]
  M [[file:4.4/arm-enable-highmem-for-rt.patch][4.4]]
  M [[file:4.6/arm-enable-highmem-for-rt.patch][4.6]]
    [[file:4.8/arm-enable-highmem-for-rt.patch][4.8]]
    [[file:4.9/arm-enable-highmem-for-rt.patch][4.9]]
    [[file:4.11/arm-enable-highmem-for-rt.patch][4.11]]
* [   3.8 -   4.11] net: netfilter: Serialize xt_write_recseq sections on RT
  + [[file:3.8/net-fix-iptable-xt-write-recseq-begin-rt-fallout.patch][3.8]]
  M [[file:3.10/net-fix-iptable-xt-write-recseq-begin-rt-fallout.patch][3.10]]
    [[file:3.12/net-fix-iptable-xt-write-recseq-begin-rt-fallout.patch][3.12]]
    [[file:3.14/net-fix-iptable-xt-write-recseq-begin-rt-fallout.patch][3.14]]
    [[file:3.18/net-fix-iptable-xt-write-recseq-begin-rt-fallout.patch][3.18]]
    [[file:4.0/net-fix-iptable-xt-write-recseq-begin-rt-fallout.patch][4.0]]
    [[file:4.1/net-fix-iptable-xt-write-recseq-begin-rt-fallout.patch][4.1]]
  m [[file:4.4/net-fix-iptable-xt-write-recseq-begin-rt-fallout.patch][4.4]]
    [[file:4.6/net-fix-iptable-xt-write-recseq-begin-rt-fallout.patch][4.6]]
  m [[file:4.8/net-fix-iptable-xt-write-recseq-begin-rt-fallout.patch][4.8]]
  m [[file:4.9/net-fix-iptable-xt-write-recseq-begin-rt-fallout.patch][4.9]]
  m [[file:4.11/net-fix-iptable-xt-write-recseq-begin-rt-fallout.patch][4.11]]
* [   3.8 -   4.11] printk: Drop the logbuf_lock more often
  + [[file:3.8/HACK-printk-drop-the-logbuf_lock-more-often.patch][3.8]]
    [[file:3.10/HACK-printk-drop-the-logbuf_lock-more-often.patch][3.10]]
    [[file:3.12/HACK-printk-drop-the-logbuf_lock-more-often.patch][3.12]]
    [[file:3.14/HACK-printk-drop-the-logbuf_lock-more-often.patch][3.14]]
    [[file:3.18/HACK-printk-drop-the-logbuf_lock-more-often.patch][3.18]]
    [[file:4.0/HACK-printk-drop-the-logbuf_lock-more-often.patch][4.0]]
    [[file:4.1/HACK-printk-drop-the-logbuf_lock-more-often.patch][4.1]]
    [[file:4.4/HACK-printk-drop-the-logbuf_lock-more-often.patch][4.4]]
  m [[file:4.6/HACK-printk-drop-the-logbuf_lock-more-often.patch][4.6]]
    [[file:4.8/HACK-printk-drop-the-logbuf_lock-more-often.patch][4.8]]
    [[file:4.9/HACK-printk-drop-the-logbuf_lock-more-often.patch][4.9]]
  M [[file:4.11/HACK-printk-drop-the-logbuf_lock-more-often.patch][4.11]]
* [   3.8 -   4.11] powerpc: Add support for lazy preemption
  + [[file:3.8/powerpc-preempt-lazy-support.patch][3.8]]
  M [[file:3.10/powerpc-preempt-lazy-support.patch][3.10]]
  M [[file:3.12/powerpc-preempt-lazy-support.patch][3.12]]
  M [[file:3.14/powerpc-preempt-lazy-support.patch][3.14]]
  m [[file:3.18/powerpc-preempt-lazy-support.patch][3.18]]
  M [[file:4.0/powerpc-preempt-lazy-support.patch][4.0]]
    [[file:4.1/powerpc-preempt-lazy-support.patch][4.1]]
    [[file:4.4/powerpc-preempt-lazy-support.patch][4.4]]
  m [[file:4.6/powerpc-preempt-lazy-support.patch][4.6]]
  M [[file:4.8/powerpc-preempt-lazy-support.patch][4.8]]
    [[file:4.9/powerpc-preempt-lazy-support.patch][4.9]]
  M [[file:4.11/powerpc-preempt-lazy-support.patch][4.11]]
* [   3.8 -   4.11] net: Add a mutex around devnet_rename_seq
  + [[file:3.8/net-make-devnet_rename_seq-a-mutex.patch][3.8]]
  M [[file:3.10/net-make-devnet_rename_seq-a-mutex.patch][3.10]]
  m [[file:3.12/net-make-devnet_rename_seq-a-mutex.patch][3.12]]
  M [[file:3.14/net-make-devnet_rename_seq-a-mutex.patch][3.14]]
  M [[file:3.18/net-make-devnet_rename_seq-a-mutex.patch][3.18]]
    [[file:4.0/net-make-devnet_rename_seq-a-mutex.patch][4.0]]
    [[file:4.1/net-make-devnet_rename_seq-a-mutex.patch][4.1]]
    [[file:4.4/net-make-devnet_rename_seq-a-mutex.patch][4.4]]
  m [[file:4.6/net-make-devnet_rename_seq-a-mutex.patch][4.6]]
    [[file:4.8/net-make-devnet_rename_seq-a-mutex.patch][4.8]]
    [[file:4.9/net-make-devnet_rename_seq-a-mutex.patch][4.9]]
    [[file:4.11/net-make-devnet_rename_seq-a-mutex.patch][4.11]]
* [   3.8 -   4.11] rcu: Disable RCU_FAST_NO_HZ on RT
  + [[file:3.8/rcu-disable-rcu-fast-no-hz-on-rt.patch][3.8]]
  M [[file:3.10/rcu-disable-rcu-fast-no-hz-on-rt.patch][3.10]]
    [[file:3.12/rcu-disable-rcu-fast-no-hz-on-rt.patch][3.12]]
    [[file:3.14/rcu-disable-rcu-fast-no-hz-on-rt.patch][3.14]]
    [[file:3.18/rcu-disable-rcu-fast-no-hz-on-rt.patch][3.18]]
    [[file:4.0/rcu-disable-rcu-fast-no-hz-on-rt.patch][4.0]]
    [[file:4.1/rcu-disable-rcu-fast-no-hz-on-rt.patch][4.1]]
  M [[file:4.4/rcu-disable-rcu-fast-no-hz-on-rt.patch][4.4]]
    [[file:4.6/rcu-disable-rcu-fast-no-hz-on-rt.patch][4.6]]
    [[file:4.8/rcu-disable-rcu-fast-no-hz-on-rt.patch][4.8]]
    [[file:4.9/rcu-disable-rcu-fast-no-hz-on-rt.patch][4.9]]
    [[file:4.11/rcu-disable-rcu-fast-no-hz-on-rt.patch][4.11]]
* [   3.8 -   4.11] sched: Add support for lazy preemption
  + [[file:3.8/preempt-lazy-support.patch][3.8]]
  M [[file:3.10/preempt-lazy-support.patch][3.10]]
  M [[file:3.12/preempt-lazy-support.patch][3.12]]
  M [[file:3.14/preempt-lazy-support.patch][3.14]]
  M [[file:3.18/preempt-lazy-support.patch][3.18]]
  M [[file:4.0/preempt-lazy-support.patch][4.0]]
  m [[file:4.1/preempt-lazy-support.patch][4.1]]
  M [[file:4.4/preempt-lazy-support.patch][4.4]]
  M [[file:4.6/preempt-lazy-support.patch][4.6]]
  M [[file:4.8/preempt-lazy-support.patch][4.8]]
    [[file:4.9/preempt-lazy-support.patch][4.9]]
  M [[file:4.11/preempt-lazy-support.patch][4.11]]
* [   3.8 -   4.11] arm/highmem: Flush tlb on unmap
  + [[file:3.8/0003-arm-highmem-flush-tlb-on-unmap.patch][3.8]]
    [[file:3.10/0003-arm-highmem-flush-tlb-on-unmap.patch][3.10]]
    [[file:3.12/0003-arm-highmem-flush-tlb-on-unmap.patch][3.12]]
    [[file:3.14/0003-arm-highmem-flush-tlb-on-unmap.patch][3.14]]
  M [[file:3.18/0003-arm-highmem-flush-tlb-on-unmap.patch][3.18]]
    [[file:4.0/0003-arm-highmem-flush-tlb-on-unmap.patch][4.0]]
    [[file:4.1/arm-highmem-flush-tlb-on-unmap.patch][4.1]]
    [[file:4.4/arm-highmem-flush-tlb-on-unmap.patch][4.4]]
    [[file:4.6/arm-highmem-flush-tlb-on-unmap.patch][4.6]]
    [[file:4.8/arm-highmem-flush-tlb-on-unmap.patch][4.8]]
    [[file:4.9/arm-highmem-flush-tlb-on-unmap.patch][4.9]]
    [[file:4.11/arm-highmem-flush-tlb-on-unmap.patch][4.11]]
* [   3.8 -   4.11] slub: Enable irqs for __GFP_WAIT
  + [[file:3.8/slub-enable-irqs-for-no-wait.patch][3.8]]
    [[file:3.10/slub-enable-irqs-for-no-wait.patch][3.10]]
    [[file:3.12/slub-enable-irqs-for-no-wait.patch][3.12]]
    [[file:3.14/slub-enable-irqs-for-no-wait.patch][3.14]]
    [[file:3.18/slub-enable-irqs-for-no-wait.patch][3.18]]
    [[file:4.0/slub-enable-irqs-for-no-wait.patch][4.0]]
  m [[file:4.1/slub-enable-irqs-for-no-wait.patch][4.1]]
  M [[file:4.4/slub-enable-irqs-for-no-wait.patch][4.4]]
    [[file:4.6/slub-enable-irqs-for-no-wait.patch][4.6]]
  m [[file:4.8/slub-enable-irqs-for-no-wait.patch][4.8]]
    [[file:4.9/slub-enable-irqs-for-no-wait.patch][4.9]]
  M [[file:4.11/slub-enable-irqs-for-no-wait.patch][4.11]]
* [   3.8 -   4.11] completion: Use simple wait queues
  + [[file:3.8/completion-use-simple-wait-queues.patch][3.8]]
  M [[file:3.10/completion-use-simple-wait-queues.patch][3.10]]
  m [[file:3.12/completion-use-simple-wait-queues.patch][3.12]]
  M [[file:3.14/completion-use-simple-wait-queues.patch][3.14]]
    [[file:3.18/completion-use-simple-wait-queues.patch][3.18]]
  M [[file:4.0/completion-use-simple-wait-queues.patch][4.0]]
  M [[file:4.1/completion-use-simple-wait-queues.patch][4.1]]
    [[file:4.4/completion-use-simple-wait-queues.patch][4.4]]
  M [[file:4.6/completion-use-simple-wait-queues.patch][4.6]]
  m [[file:4.8/completion-use-simple-wait-queues.patch][4.8]]
    [[file:4.9/completion-use-simple-wait-queues.patch][4.9]]
  M [[file:4.11/completion-use-simple-wait-queues.patch][4.11]]
* [   3.8 -   4.11] block: Use cpu_chill() for retry loops
  + [[file:3.8/block-use-cpu-chill.patch][3.8]]
    [[file:3.10/block-use-cpu-chill.patch][3.10]]
    [[file:3.12/block-use-cpu-chill.patch][3.12]]
  m [[file:3.14/block-use-cpu-chill.patch][3.14]]
    [[file:3.18/block-use-cpu-chill.patch][3.18]]
    [[file:4.0/block-use-cpu-chill.patch][4.0]]
    [[file:4.1/block-use-cpu-chill.patch][4.1]]
    [[file:4.4/block-use-cpu-chill.patch][4.4]]
    [[file:4.6/block-use-cpu-chill.patch][4.6]]
    [[file:4.8/block-use-cpu-chill.patch][4.8]]
    [[file:4.9/block-use-cpu-chill.patch][4.9]]
  M [[file:4.11/block-use-cpu-chill.patch][4.11]]
* [   3.8 -   4.11] x86: Support for lazy preemption
  + [[file:3.8/x86-preempt-lazy.patch][3.8]]
  m [[file:3.10/x86-preempt-lazy.patch][3.10]]
  m [[file:3.12/x86-preempt-lazy.patch][3.12]]
  M [[file:3.14/x86-preempt-lazy.patch][3.14]]
  M [[file:3.18/x86-preempt-lazy.patch][3.18]]
  M [[file:4.0/x86-preempt-lazy.patch][4.0]]
  M [[file:4.1/x86-preempt-lazy.patch][4.1]]
  M [[file:4.4/x86-preempt-lazy.patch][4.4]]
  M [[file:4.6/x86-preempt-lazy.patch][4.6]]
  M [[file:4.8/x86-preempt-lazy.patch][4.8]]
  M [[file:4.9/x86-preempt-lazy.patch][4.9]]
  M [[file:4.11/x86-preempt-lazy.patch][4.11]]
* [   3.8 -   4.11] mm: Enable SLUB for RT
  + [[file:3.8/mm-enable-slub.patch][3.8]]
  M [[file:3.10/mm-enable-slub.patch][3.10]]
  M [[file:3.12/mm-enable-slub.patch][3.12]]
  m [[file:3.14/mm-enable-slub.patch][3.14]]
  m [[file:3.18/mm-enable-slub.patch][3.18]]
  M [[file:4.0/mm-enable-slub.patch][4.0]]
  m [[file:4.1/mm-enable-slub.patch][4.1]]
  M [[file:4.4/mm-enable-slub.patch][4.4]]
  M [[file:4.6/mm-enable-slub.patch][4.6]]
  m [[file:4.8/mm-enable-slub.patch][4.8]]
    [[file:4.9/mm-enable-slub.patch][4.9]]
  M [[file:4.11/mm-enable-slub.patch][4.11]]
* [   3.8 -   4.11] kernel/SRCU: provide a static initializer
  + [[file:3.8/0002-kernel-SRCU-provide-a-static-initializer.patch][3.8]]
  M [[file:3.10/0002-kernel-SRCU-provide-a-static-initializer.patch][3.10]]
    [[file:3.12/0002-kernel-SRCU-provide-a-static-initializer.patch][3.12]]
  M [[file:3.14/0002-kernel-SRCU-provide-a-static-initializer.patch][3.14]]
    [[file:3.18/0002-kernel-SRCU-provide-a-static-initializer.patch][3.18]]
  M [[file:4.0/0002-kernel-SRCU-provide-a-static-initializer.patch][4.0]]
    [[file:4.1/kernel-SRCU-provide-a-static-initializer.patch][4.1]]
    [[file:4.4/kernel-SRCU-provide-a-static-initializer.patch][4.4]]
  m [[file:4.6/kernel-SRCU-provide-a-static-initializer.patch][4.6]]
    [[file:4.8/kernel-SRCU-provide-a-static-initializer.patch][4.8]]
    [[file:4.9/kernel-SRCU-provide-a-static-initializer.patch][4.9]]
  M [[file:4.11/kernel-SRCU-provide-a-static-initializer.patch][4.11]]
* [   3.8 -   4.11] mmci: Remove bogus local_irq_save()
  + [[file:3.8/mmci-remove-bogus-irq-save.patch][3.8]]
    [[file:3.10/mmci-remove-bogus-irq-save.patch][3.10]]
    [[file:3.12/mmci-remove-bogus-irq-save.patch][3.12]]
    [[file:3.14/mmci-remove-bogus-irq-save.patch][3.14]]
    [[file:3.18/mmci-remove-bogus-irq-save.patch][3.18]]
    [[file:4.0/mmci-remove-bogus-irq-save.patch][4.0]]
    [[file:4.1/mmci-remove-bogus-irq-save.patch][4.1]]
    [[file:4.4/mmci-remove-bogus-irq-save.patch][4.4]]
    [[file:4.6/mmci-remove-bogus-irq-save.patch][4.6]]
    [[file:4.8/mmci-remove-bogus-irq-save.patch][4.8]]
    [[file:4.9/mmci-remove-bogus-irq-save.patch][4.9]]
    [[file:4.11/mmci-remove-bogus-irq-save.patch][4.11]]
* [   3.8 -   4.11] mm: bounce: Use local_irq_save_nort
  + [[file:3.8/mm-bounce-local-irq-save-nort.patch][3.8]]
    [[file:3.10/mm-bounce-local-irq-save-nort.patch][3.10]]
    [[file:3.12/mm-bounce-local-irq-save-nort.patch][3.12]]
    [[file:3.14/mm-bounce-local-irq-save-nort.patch][3.14]]
    [[file:3.18/mm-bounce-local-irq-save-nort.patch][3.18]]
    [[file:4.0/mm-bounce-local-irq-save-nort.patch][4.0]]
    [[file:4.1/mm-bounce-local-irq-save-nort.patch][4.1]]
    [[file:4.4/mm-bounce-local-irq-save-nort.patch][4.4]]
    [[file:4.6/mm-bounce-local-irq-save-nort.patch][4.6]]
    [[file:4.8/mm-bounce-local-irq-save-nort.patch][4.8]]
    [[file:4.9/mm-bounce-local-irq-save-nort.patch][4.9]]
    [[file:4.11/mm-bounce-local-irq-save-nort.patch][4.11]]
* [   3.8 -   4.11] tty/serial/pl011: Make the locking work on RT
  + [[file:3.8/drivers-tty-pl011-irq-disable-madness.patch][3.8]]
    [[file:3.10/drivers-tty-pl011-irq-disable-madness.patch][3.10]]
    [[file:3.12/drivers-tty-pl011-irq-disable-madness.patch][3.12]]
    [[file:3.14/drivers-tty-pl011-irq-disable-madness.patch][3.14]]
    [[file:3.18/drivers-tty-pl011-irq-disable-madness.patch][3.18]]
    [[file:4.0/drivers-tty-pl011-irq-disable-madness.patch][4.0]]
    [[file:4.1/drivers-tty-pl011-irq-disable-madness.patch][4.1]]
  m [[file:4.4/drivers-tty-pl011-irq-disable-madness.patch][4.4]]
  m [[file:4.6/drivers-tty-pl011-irq-disable-madness.patch][4.6]]
    [[file:4.8/drivers-tty-pl011-irq-disable-madness.patch][4.8]]
    [[file:4.9/drivers-tty-pl011-irq-disable-madness.patch][4.9]]
    [[file:4.11/drivers-tty-pl011-irq-disable-madness.patch][4.11]]
* [   3.8 -   4.11] futex: Ensure lock/unlock symetry versus pi_lock and hash bucket lock
  + [[file:3.8/0005-futex-Ensure-lock-unlock-symetry-versus-pi_lock-and-.patch][3.8]]
    [[file:3.10/0005-futex-Ensure-lock-unlock-symetry-versus-pi_lock-and-.patch][3.10]]
    [[file:3.12/0005-futex-Ensure-lock-unlock-symetry-versus-pi_lock-and-.patch][3.12]]
    [[file:3.14/0005-futex-Ensure-lock-unlock-symetry-versus-pi_lock-and-.patch][3.14]]
    [[file:3.18/0005-futex-Ensure-lock-unlock-symetry-versus-pi_lock-and-.patch][3.18]]
    [[file:4.0/0005-futex-Ensure-lock-unlock-symetry-versus-pi_lock-and-.patch][4.0]]
    [[file:4.1/0005-futex-Ensure-lock-unlock-symetry-versus-pi_lock-and-.patch][4.1]]
    [[file:4.4/0005-futex-Ensure-lock-unlock-symetry-versus-pi_lock-and-.patch][4.4]]
    [[file:4.6/0005-futex-Ensure-lock-unlock-symetry-versus-pi_lock-and-.patch][4.6]]
    [[file:4.8/futex-Ensure-lock-unlock-symetry-versus-pi_lock-and-.patch][4.8]]
    [[file:4.9/futex-Ensure-lock-unlock-symetry-versus-pi_lock-and-.patch][4.9]]
    [[file:4.11/futex-Ensure-lock-unlock-symetry-versus-pi_lock-and-.patch][4.11]]
* [   3.8 -   4.11] workqueue: Use local irq lock instead of irq disable regions
  + [[file:3.8/workqueue-use-locallock.patch][3.8]]
  M [[file:3.10/workqueue-use-locallock.patch][3.10]]
  m [[file:3.12/workqueue-use-locallock.patch][3.12]]
    [[file:3.14/workqueue-use-locallock.patch][3.14]]
    [[file:3.18/workqueue-use-locallock.patch][3.18]]
    [[file:4.0/workqueue-use-locallock.patch][4.0]]
  M [[file:4.1/workqueue-use-locallock.patch][4.1]]
  m [[file:4.4/workqueue-use-locallock.patch][4.4]]
    [[file:4.6/workqueue-use-locallock.patch][4.6]]
    [[file:4.8/workqueue-use-locallock.patch][4.8]]
  M [[file:4.9/workqueue-use-locallock.patch][4.9]]
  M [[file:4.11/workqueue-use-locallock.patch][4.11]]
* [   3.8 -   4.11] arm: Add support for lazy preemption
  + [[file:3.8/arm-preempt-lazy-support.patch][3.8]]
  m [[file:3.10/arm-preempt-lazy-support.patch][3.10]]
  m [[file:3.12/arm-preempt-lazy-support.patch][3.12]]
  m [[file:3.14/arm-preempt-lazy-support.patch][3.14]]
  m [[file:3.18/arm-preempt-lazy-support.patch][3.18]]
    [[file:4.0/arm-preempt-lazy-support.patch][4.0]]
  M [[file:4.1/arm-preempt-lazy-support.patch][4.1]]
  M [[file:4.4/arm-preempt-lazy-support.patch][4.4]]
    [[file:4.6/arm-preempt-lazy-support.patch][4.6]]
  M [[file:4.8/arm-preempt-lazy-support.patch][4.8]]
    [[file:4.9/arm-preempt-lazy-support.patch][4.9]]
    [[file:4.11/arm-preempt-lazy-support.patch][4.11]]
* [   3.8 -   4.11] timekeeping: Split jiffies seqlock
  + [[file:3.8/timekeeping-split-jiffies-lock.patch][3.8]]
  m [[file:3.10/timekeeping-split-jiffies-lock.patch][3.10]]
  m [[file:3.12/timekeeping-split-jiffies-lock.patch][3.12]]
  m [[file:3.14/timekeeping-split-jiffies-lock.patch][3.14]]
  M [[file:3.18/timekeeping-split-jiffies-lock.patch][3.18]]
  m [[file:4.0/timekeeping-split-jiffies-lock.patch][4.0]]
  M [[file:4.1/timekeeping-split-jiffies-lock.patch][4.1]]
  m [[file:4.4/timekeeping-split-jiffies-lock.patch][4.4]]
    [[file:4.6/timekeeping-split-jiffies-lock.patch][4.6]]
  m [[file:4.8/timekeeping-split-jiffies-lock.patch][4.8]]
    [[file:4.9/timekeeping-split-jiffies-lock.patch][4.9]]
  m [[file:4.11/timekeeping-split-jiffies-lock.patch][4.11]]
* [   3.8 -   4.11] x86/highmem: Add a "already used pte" check
  + [[file:3.8/0002-x86-highmem-add-a-already-used-pte-check.patch][3.8]]
    [[file:3.10/0002-x86-highmem-add-a-already-used-pte-check.patch][3.10]]
    [[file:3.12/0002-x86-highmem-add-a-already-used-pte-check.patch][3.12]]
    [[file:3.14/0002-x86-highmem-add-a-already-used-pte-check.patch][3.14]]
    [[file:3.18/0002-x86-highmem-add-a-already-used-pte-check.patch][3.18]]
    [[file:4.0/0002-x86-highmem-add-a-already-used-pte-check.patch][4.0]]
    [[file:4.1/x86-highmem-add-a-already-used-pte-check.patch][4.1]]
    [[file:4.4/x86-highmem-add-a-already-used-pte-check.patch][4.4]]
    [[file:4.6/x86-highmem-add-a-already-used-pte-check.patch][4.6]]
    [[file:4.8/x86-highmem-add-a-already-used-pte-check.patch][4.8]]
    [[file:4.9/x86-highmem-add-a-already-used-pte-check.patch][4.9]]
    [[file:4.11/x86-highmem-add-a-already-used-pte-check.patch][4.11]]
* [  3.10         ] net/cpsw: Use fallback for active_slave
  + [[file:3.10/cpsw-net-cpsw-Use-fallback-for-active_slave.patch][3.10]]
  - 3.12
* [  3.10         ] gpu: i915: allow the user not to do the wbinvd
  + [[file:3.10/gpu-i915-allow-the-user-not-to-do-the-wbinvd.patch][3.10]]
  - 3.12
* [  3.10         ] net/cpsw: revert f9a8f83b04e0c362a2fc660dbad980d24af209fc
  + [[file:3.10/revert-f9a8f83b04e0c362a2fc660dbad980d24af209fc.patch][3.10]]
  - 3.12
* [  3.10         ] mm-disable-slab-on-rt.patch
  + [[file:3.10/mm-disable-slab-on-rt.patch][3.10]]
  - 3.12
* [  3.10         ] net-dev-make-devnet-rename-seq-static.patch
  + [[file:3.10/net-dev-make-devnet-rename-seq-static.patch][3.10]]
  - 3.12
* [  3.10         ] net/cpsw: revert 80d5c3689b886308247da295a228a54df49a44f6
  + [[file:3.10/revert-80d5c3689b886308247da295a228a54df49a44f6.patch][3.10]]
  - 3.12
* [  3.10         ] net/cpsw: revert f646968f8f7c624587de729115d802372b9063dd
  + [[file:3.10/revert-f646968f8f7c624587de729115d802372b9063dd.patch][3.10]]
  - 3.12
* [  3.10         ] fs/fscache: remove spin_lock() from the condition in while()
  + [[file:3.10/fs-fscache-remove-spin_lock-from-the-condition-in-wh.patch][3.10]]
  - 3.12
* [  3.10 -   3.12] x86/mce: fix mce timer interval
  + [[file:3.10/x86-mce-fix-mce-timer-interval.patch][3.10]]
    [[file:3.12/x86-mce-fix-mce-timer-interval.patch][3.12]]
  - 3.14
* [  3.10 -   3.14] net/cpsw: use a lock around source testing
  + [[file:3.10/cpsw-net-cpsw-use-a-lock-around-source-testing.patch][3.10]]
    [[file:3.12/cpsw-net-cpsw-use-a-lock-around-source-testing.patch][3.12]]
    [[file:3.14/cpsw-net-cpsw-use-a-lock-around-source-testing.patch][3.14]]
  - 3.18
* [  3.10 -   3.18] x86/mce: Defer mce wakeups to threads for PREEMPT_RT
  + [[file:3.10/x86-mce-Defer-mce-wakeups-to-threads-for-PREEMPT_RT.patch][3.10]]
  M [[file:3.12/x86-mce-Defer-mce-wakeups-to-threads-for-PREEMPT_RT.patch][3.12]]
    [[file:3.14/x86-mce-Defer-mce-wakeups-to-threads-for-PREEMPT_RT.patch][3.14]]
  M [[file:3.18/x86-mce-Defer-mce-wakeups-to-threads-for-PREEMPT_RT.patch][3.18]]
  - 4.0
* [  3.10 -    4.0] slub: delay ctor until the object is requested
  + [[file:3.10/slub_delay_ctor_on_rt.patch][3.10]]
    [[file:3.12/slub_delay_ctor_on_rt.patch][3.12]]
    [[file:3.14/slub_delay_ctor_on_rt.patch][3.14]]
    [[file:3.18/slub_delay_ctor_on_rt.patch][3.18]]
  M [[file:4.0/slub_delay_ctor_on_rt.patch][4.0]]
  - 4.1
* [  3.10 -    4.0] percpu-rwsem: compile fix
  + [[file:3.10/percpu-rwsem-compilefix.patch][3.10]]
    [[file:3.12/percpu-rwsem-compilefix.patch][3.12]]
    [[file:3.14/percpu-rwsem-compilefix.patch][3.14]]
    [[file:3.18/percpu-rwsem-compilefix.patch][3.18]]
    [[file:4.0/percpu-rwsem-compilefix.patch][4.0]]
  - 4.1
* [  3.10 -    4.0] timers: prepare for full preemption improve
  + [[file:3.10/timers-prepare-for-full-preemption-improve.patch][3.10]]
    [[file:3.12/timers-prepare-for-full-preemption-improve.patch][3.12]]
    [[file:3.14/timers-prepare-for-full-preemption-improve.patch][3.14]]
    [[file:3.18/timers-prepare-for-full-preemption-improve.patch][3.18]]
    [[file:4.0/timers-prepare-for-full-preemption-improve.patch][4.0]]
  - 4.1
* [  3.10 -    4.4] vtime: Split lock and seqcount
  + [[file:3.10/vtime-split-lock-and-seqcount.patch][3.10]]
  M [[file:3.12/vtime-split-lock-and-seqcount.patch][3.12]]
  M [[file:3.14/vtime-split-lock-and-seqcount.patch][3.14]]
    [[file:3.18/vtime-split-lock-and-seqcount.patch][3.18]]
    [[file:4.0/vtime-split-lock-and-seqcount.patch][4.0]]
    [[file:4.1/vtime-split-lock-and-seqcount.patch][4.1]]
  m [[file:4.4/vtime-split-lock-and-seqcount.patch][4.4]]
  - 4.6
* [  3.10 -    4.4] rcu: use simple waitqueues
  + [[file:3.10/rcu-more-swait-conversions.patch][3.10]]
  M [[file:3.12/rcu-more-swait-conversions.patch][3.12]]
  M [[file:3.14/rcu-more-swait-conversions.patch][3.14]]
  M [[file:3.18/rcu-more-swait-conversions.patch][3.18]]
  m [[file:4.0/rcu-more-swait-conversions.patch][4.0]]
  M [[file:4.1/rcu-more-swait-conversions.patch][4.1]]
  M [[file:4.4/rcu-more-swait-conversions.patch][4.4]]
  - 4.6
* [  3.10 -    4.6] gpu/i915: don't open code these things
  + [[file:3.10/i915_compile_fix.patch][3.10]]
    [[file:3.12/i915_compile_fix.patch][3.12]]
    [[file:3.14/i915_compile_fix.patch][3.14]]
  M [[file:3.18/i915_compile_fix.patch][3.18]]
  M [[file:4.0/i915_compile_fix.patch][4.0]]
    [[file:4.1/i915_compile_fix.patch][4.1]]
    [[file:4.4/i915_compile_fix.patch][4.4]]
    [[file:4.6/i915_compile_fix.patch][4.6]]
  - 4.8
* [  3.10 -   4.11] rt,ntp: Move call to schedule_delayed_work() to helper thread
  + [[file:3.10/move_sched_delayed_work_to_helper.patch][3.10]]
  M [[file:3.12/move_sched_delayed_work_to_helper.patch][3.12]]
    [[file:3.14/move_sched_delayed_work_to_helper.patch][3.14]]
  M [[file:3.18/move_sched_delayed_work_to_helper.patch][3.18]]
    [[file:4.0/move_sched_delayed_work_to_helper.patch][4.0]]
    [[file:4.1/move_sched_delayed_work_to_helper.patch][4.1]]
  m [[file:4.4/move_sched_delayed_work_to_helper.patch][4.4]]
    [[file:4.6/move_sched_delayed_work_to_helper.patch][4.6]]
  M [[file:4.8/move_sched_delayed_work_to_helper.patch][4.8]]
    [[file:4.9/move_sched_delayed_work_to_helper.patch][4.9]]
    [[file:4.11/move_sched_delayed_work_to_helper.patch][4.11]]
* [  3.10 -   4.11] workqueue: Use normal rcu
  + [[file:3.10/workqueue-use-rcu.patch][3.10]]
  m [[file:3.12/workqueue-use-rcu.patch][3.12]]
    [[file:3.14/workqueue-use-rcu.patch][3.14]]
  m [[file:3.18/workqueue-use-rcu.patch][3.18]]
    [[file:4.0/workqueue-use-rcu.patch][4.0]]
  M [[file:4.1/workqueue-use-rcu.patch][4.1]]
  M [[file:4.4/workqueue-use-rcu.patch][4.4]]
  m [[file:4.6/workqueue-use-rcu.patch][4.6]]
    [[file:4.8/workqueue-use-rcu.patch][4.8]]
    [[file:4.9/workqueue-use-rcu.patch][4.9]]
    [[file:4.11/workqueue-use-rcu.patch][4.11]]
* [  3.10 -   4.11] sched/workqueue: Only wake up idle workers if not blocked on sleeping spin lock
  + [[file:3.10/sched-workqueue-Only-wake-up-idle-workers-if-not-blo.patch][3.10]]
    [[file:3.12/sched-workqueue-Only-wake-up-idle-workers-if-not-blo.patch][3.12]]
    [[file:3.14/sched-workqueue-Only-wake-up-idle-workers-if-not-blo.patch][3.14]]
    [[file:3.18/sched-workqueue-Only-wake-up-idle-workers-if-not-blo.patch][3.18]]
    [[file:4.0/sched-workqueue-Only-wake-up-idle-workers-if-not-blo.patch][4.0]]
    [[file:4.1/sched-workqueue-Only-wake-up-idle-workers-if-not-blo.patch][4.1]]
    [[file:4.4/sched-workqueue-Only-wake-up-idle-workers-if-not-blo.patch][4.4]]
  m [[file:4.6/sched-workqueue-Only-wake-up-idle-workers-if-not-blo.patch][4.6]]
    [[file:4.8/sched-workqueue-Only-wake-up-idle-workers-if-not-blo.patch][4.8]]
    [[file:4.9/sched-workqueue-Only-wake-up-idle-workers-if-not-blo.patch][4.9]]
    [[file:4.11/sched-workqueue-Only-wake-up-idle-workers-if-not-blo.patch][4.11]]
* [  3.10 -   4.11] kernel/hotplug: restore original cpu mask oncpu/down
  + [[file:3.10/kernel-hotplug-restore-original-cpu-mask-oncpu-down.patch][3.10]]
    [[file:3.12/kernel-hotplug-restore-original-cpu-mask-oncpu-down.patch][3.12]]
    [[file:3.14/kernel-hotplug-restore-original-cpu-mask-oncpu-down.patch][3.14]]
    [[file:3.18/kernel-hotplug-restore-original-cpu-mask-oncpu-down.patch][3.18]]
    [[file:4.0/kernel-hotplug-restore-original-cpu-mask-oncpu-down.patch][4.0]]
    [[file:4.1/kernel-hotplug-restore-original-cpu-mask-oncpu-down.patch][4.1]]
    [[file:4.4/kernel-hotplug-restore-original-cpu-mask-oncpu-down.patch][4.4]]
  M [[file:4.6/kernel-hotplug-restore-original-cpu-mask-oncpu-down.patch][4.6]]
    [[file:4.8/kernel-hotplug-restore-original-cpu-mask-oncpu-down.patch][4.8]]
    [[file:4.9/kernel-hotplug-restore-original-cpu-mask-oncpu-down.patch][4.9]]
  M [[file:4.11/kernel-hotplug-restore-original-cpu-mask-oncpu-down.patch][4.11]]
* [  3.10 -   4.11] kernel/cpu: fix cpu down problem if kthread's cpu is going down
  + [[file:3.10/kernel-cpu-fix-cpu-down-problem-if-kthread-s-cpu-is-.patch][3.10]]
    [[file:3.12/kernel-cpu-fix-cpu-down-problem-if-kthread-s-cpu-is-.patch][3.12]]
  m [[file:3.14/kernel-cpu-fix-cpu-down-problem-if-kthread-s-cpu-is-.patch][3.14]]
    [[file:3.18/kernel-cpu-fix-cpu-down-problem-if-kthread-s-cpu-is-.patch][3.18]]
    [[file:4.0/kernel-cpu-fix-cpu-down-problem-if-kthread-s-cpu-is-.patch][4.0]]
    [[file:4.1/kernel-cpu-fix-cpu-down-problem-if-kthread-s-cpu-is-.patch][4.1]]
  m [[file:4.4/kernel-cpu-fix-cpu-down-problem-if-kthread-s-cpu-is-.patch][4.4]]
  m [[file:4.6/kernel-cpu-fix-cpu-down-problem-if-kthread-s-cpu-is-.patch][4.6]]
  m [[file:4.8/kernel-cpu-fix-cpu-down-problem-if-kthread-s-cpu-is-.patch][4.8]]
    [[file:4.9/kernel-cpu-fix-cpu-down-problem-if-kthread-s-cpu-is-.patch][4.9]]
    [[file:4.11/kernel-cpu-fix-cpu-down-problem-if-kthread-s-cpu-is-.patch][4.11]]
* [  3.10 -   4.11] sched: Distangle worker accounting from rqlock
  + [[file:3.10/workqueue-distangle-from-rq-lock.patch][3.10]]
  M [[file:3.12/workqueue-distangle-from-rq-lock.patch][3.12]]
    [[file:3.14/workqueue-distangle-from-rq-lock.patch][3.14]]
  M [[file:3.18/workqueue-distangle-from-rq-lock.patch][3.18]]
  M [[file:4.0/workqueue-distangle-from-rq-lock.patch][4.0]]
    [[file:4.1/workqueue-distangle-from-rq-lock.patch][4.1]]
  M [[file:4.4/workqueue-distangle-from-rq-lock.patch][4.4]]
  M [[file:4.6/workqueue-distangle-from-rq-lock.patch][4.6]]
  M [[file:4.8/workqueue-distangle-from-rq-lock.patch][4.8]]
  M [[file:4.9/workqueue-distangle-from-rq-lock.patch][4.9]]
  M [[file:4.11/workqueue-distangle-from-rq-lock.patch][4.11]]
* [  3.10 -   4.11] workqueue: Prevent workqueue versus ata-piix livelock
  + [[file:3.10/work-queue-work-around-irqsafe-timer-optimization.patch][3.10]]
    [[file:3.12/work-queue-work-around-irqsafe-timer-optimization.patch][3.12]]
    [[file:3.14/work-queue-work-around-irqsafe-timer-optimization.patch][3.14]]
    [[file:3.18/work-queue-work-around-irqsafe-timer-optimization.patch][3.18]]
    [[file:4.0/work-queue-work-around-irqsafe-timer-optimization.patch][4.0]]
    [[file:4.1/work-queue-work-around-irqsafe-timer-optimization.patch][4.1]]
    [[file:4.4/work-queue-work-around-irqsafe-timer-optimization.patch][4.4]]
    [[file:4.6/work-queue-work-around-irqsafe-timer-optimization.patch][4.6]]
    [[file:4.8/work-queue-work-around-irqsafe-timer-optimization.patch][4.8]]
    [[file:4.9/work-queue-work-around-irqsafe-timer-optimization.patch][4.9]]
    [[file:4.11/work-queue-work-around-irqsafe-timer-optimization.patch][4.11]]
* [  3.10 -   4.11] list_bl: Make list head locking RT safe
  + [[file:3.10/list_bl.h-make-list-head-locking-RT-safe.patch][3.10]]
  M [[file:3.12/list_bl.h-make-list-head-locking-RT-safe.patch][3.12]]
    [[file:3.14/list_bl.h-make-list-head-locking-RT-safe.patch][3.14]]
    [[file:3.18/list_bl.h-make-list-head-locking-RT-safe.patch][3.18]]
    [[file:4.0/list_bl.h-make-list-head-locking-RT-safe.patch][4.0]]
    [[file:4.1/list_bl.h-make-list-head-locking-RT-safe.patch][4.1]]
    [[file:4.4/list_bl.h-make-list-head-locking-RT-safe.patch][4.4]]
    [[file:4.6/list_bl.h-make-list-head-locking-RT-safe.patch][4.6]]
    [[file:4.8/list_bl.h-make-list-head-locking-RT-safe.patch][4.8]]
    [[file:4.9/list_bl.h-make-list-head-locking-RT-safe.patch][4.9]]
    [[file:4.11/list_bl.h-make-list-head-locking-RT-safe.patch][4.11]]
* [  3.10 -    4.9] idr: Use local lock instead of preempt enable/disable
  + [[file:3.10/idr-use-local-lock-for-protection.patch][3.10]]
    [[file:3.12/idr-use-local-lock-for-protection.patch][3.12]]
    [[file:3.14/idr-use-local-lock-for-protection.patch][3.14]]
  m [[file:3.18/idr-use-local-lock-for-protection.patch][3.18]]
  m [[file:4.0/idr-use-local-lock-for-protection.patch][4.0]]
    [[file:4.1/idr-use-local-lock-for-protection.patch][4.1]]
  M [[file:4.4/idr-use-local-lock-for-protection.patch][4.4]]
    [[file:4.6/idr-use-local-lock-for-protection.patch][4.6]]
    [[file:4.8/idr-use-local-lock-for-protection.patch][4.8]]
    [[file:4.9/idr-use-local-lock-for-protection.patch][4.9]]
  - 4.11
* [  3.10 -   4.11] drm/i915: drop trace_i915_gem_ring_dispatch on rt
  + [[file:3.10/drm-i915-drop-trace_i915_gem_ring_dispatch-onrt.patch][3.10]]
  m [[file:3.12/drm-i915-drop-trace_i915_gem_ring_dispatch-onrt.patch][3.12]]
  m [[file:3.14/drm-i915-drop-trace_i915_gem_ring_dispatch-onrt.patch][3.14]]
  m [[file:3.18/drm-i915-drop-trace_i915_gem_ring_dispatch-onrt.patch][3.18]]
  m [[file:4.0/drm-i915-drop-trace_i915_gem_ring_dispatch-onrt.patch][4.0]]
  m [[file:4.1/drm-i915-drop-trace_i915_gem_ring_dispatch-onrt.patch][4.1]]
  m [[file:4.4/drm-i915-drop-trace_i915_gem_ring_dispatch-onrt.patch][4.4]]
    [[file:4.6/drm-i915-drop-trace_i915_gem_ring_dispatch-onrt.patch][4.6]]
  m [[file:4.8/drm-i915-drop-trace_i915_gem_ring_dispatch-onrt.patch][4.8]]
    [[file:4.9/drm-i915-drop-trace_i915_gem_ring_dispatch-onrt.patch][4.9]]
    [[file:4.11/drm-i915-drop-trace_i915_gem_ring_dispatch-onrt.patch][4.11]]
* [  3.10 -   4.11] acpi/rt: Convert acpi_gbl_hardware lock back to a raw_spinlock_t
  + [[file:3.10/acpi-rt-Convert-acpi_gbl_hardware-lock-back-to-a-raw.patch][3.10]]
    [[file:3.12/acpi-rt-Convert-acpi_gbl_hardware-lock-back-to-a-raw.patch][3.12]]
  M [[file:3.14/acpi-rt-Convert-acpi_gbl_hardware-lock-back-to-a-raw.patch][3.14]]
  M [[file:3.18/acpi-rt-Convert-acpi_gbl_hardware-lock-back-to-a-raw.patch][3.18]]
    [[file:4.0/acpi-rt-Convert-acpi_gbl_hardware-lock-back-to-a-raw.patch][4.0]]
    [[file:4.1/acpi-rt-Convert-acpi_gbl_hardware-lock-back-to-a-raw.patch][4.1]]
    [[file:4.4/acpi-rt-Convert-acpi_gbl_hardware-lock-back-to-a-raw.patch][4.4]]
    [[file:4.6/acpi-rt-Convert-acpi_gbl_hardware-lock-back-to-a-raw.patch][4.6]]
    [[file:4.8/acpi-rt-Convert-acpi_gbl_hardware-lock-back-to-a-raw.patch][4.8]]
    [[file:4.9/acpi-rt-Convert-acpi_gbl_hardware-lock-back-to-a-raw.patch][4.9]]
    [[file:4.11/acpi-rt-Convert-acpi_gbl_hardware-lock-back-to-a-raw.patch][4.11]]
* [  3.12         ] net: iwlwifi: request only a threaded handler for interrupts
  + [[file:3.12/net-iwlwifi-request-only-a-threaded-handler-for-inte.patch][3.12]]
  - 3.14
* [  3.12         ] Kind of revert "powerpc: 52xx: provide a default in mpc52xx_irqhost_map()"
  + [[file:3.12/Kind-of-revert-powerpc-52xx-provide-a-default-in-mpc.patch][3.12]]
  - 3.14
* [  3.12         ] drm: remove preempt_disable() from drm_calc_vbltimestamp_from_scanoutpos()
  + [[file:3.12/drm-remove-preempt_disable-from-drm_calc_vbltimestam.patch][3.12]]
  - 3.14
* [  3.12         ] genirq: Set the irq thread policy without checking CAP_SYS_NICE
  + [[file:3.12/genirq-Set-the-irq-thread-policy-without-checking-CA.patch][3.12]]
  - 3.14
* [  3.12         ] lockref: disable 64bit cmpxchg optimization on RT
  + [[file:3.12/lockref-disable-64bit-cmpxchg-optimization-on-RT.patch][3.12]]
  - 3.14
* [  3.12 -    4.0] simple-wait: rename and export the equivalent of waitqueue_active()
  + [[file:3.12/simple-wait-rename-and-export-the-equivalent-of-wait.patch][3.12]]
    [[file:3.14/simple-wait-rename-and-export-the-equivalent-of-wait.patch][3.14]]
    [[file:3.18/simple-wait-rename-and-export-the-equivalent-of-wait.patch][3.18]]
    [[file:4.0/simple-wait-rename-and-export-the-equivalent-of-wait.patch][4.0]]
  - 4.1
* [  3.12 -    4.0] a few open coded completions
  + [[file:3.12/fixup_opencoded_completions.patch][3.12]]
  M [[file:3.14/fixup_opencoded_completions.patch][3.14]]
    [[file:3.18/fixup_opencoded_completions.patch][3.18]]
    [[file:4.0/fixup_opencoded_completions.patch][4.0]]
  - 4.1
* [  3.12 -    4.0] sparc: provide EARLY_PRINTK for SPARC
  + [[file:3.12/sparc-provide-EARLY_PRINTK-for-SPARC.patch][3.12]]
    [[file:3.14/sparc-provide-EARLY_PRINTK-for-SPARC.patch][3.14]]
    [[file:3.18/sparc-provide-EARLY_PRINTK-for-SPARC.patch][3.18]]
    [[file:4.0/sparc-provide-EARLY_PRINTK-for-SPARC.patch][4.0]]
  - 4.1
* [  3.12 -    4.8] hwlat-detector: Update hwlat_detector to add outer loop detection
  + [[file:3.12/hwlat-detector-Update-hwlat_detector-to-add-outer-lo.patch][3.12]]
  M [[file:3.14/hwlat-detector-Update-hwlat_detector-to-add-outer-lo.patch][3.14]]
    [[file:3.18/hwlat-detector-Update-hwlat_detector-to-add-outer-lo.patch][3.18]]
    [[file:4.0/hwlat-detector-Update-hwlat_detector-to-add-outer-lo.patch][4.0]]
    [[file:4.1/hwlat-detector-Update-hwlat_detector-to-add-outer-lo.patch][4.1]]
    [[file:4.4/hwlat-detector-Update-hwlat_detector-to-add-outer-lo.patch][4.4]]
    [[file:4.6/hwlat-detector-Update-hwlat_detector-to-add-outer-lo.patch][4.6]]
    [[file:4.8/hwlat-detector-Update-hwlat_detector-to-add-outer-lo.patch][4.8]]
  - 4.9
* [  3.12 -    4.8] hwlat-detector: Use thread instead of stop machine
  + [[file:3.12/hwlat-detector-Use-thread-instead-of-stop-machine.patch][3.12]]
  M [[file:3.14/hwlat-detector-Use-thread-instead-of-stop-machine.patch][3.14]]
    [[file:3.18/hwlat-detector-Use-thread-instead-of-stop-machine.patch][3.18]]
    [[file:4.0/hwlat-detector-Use-thread-instead-of-stop-machine.patch][4.0]]
    [[file:4.1/hwlat-detector-Use-thread-instead-of-stop-machine.patch][4.1]]
    [[file:4.4/hwlat-detector-Use-thread-instead-of-stop-machine.patch][4.4]]
    [[file:4.6/hwlat-detector-Use-thread-instead-of-stop-machine.patch][4.6]]
    [[file:4.8/hwlat-detector-Use-thread-instead-of-stop-machine.patch][4.8]]
  - 4.9
* [  3.12 -    4.8] hwlat-detector: Use trace_clock_local if available
  + [[file:3.12/hwlat-detector-Use-trace_clock_local-if-available.patch][3.12]]
  M [[file:3.14/hwlat-detector-Use-trace_clock_local-if-available.patch][3.14]]
    [[file:3.18/hwlat-detector-Use-trace_clock_local-if-available.patch][3.18]]
    [[file:4.0/hwlat-detector-Use-trace_clock_local-if-available.patch][4.0]]
    [[file:4.1/hwlat-detector-Use-trace_clock_local-if-available.patch][4.1]]
    [[file:4.4/hwlat-detector-Use-trace_clock_local-if-available.patch][4.4]]
    [[file:4.6/hwlat-detector-Use-trace_clock_local-if-available.patch][4.6]]
    [[file:4.8/hwlat-detector-Use-trace_clock_local-if-available.patch][4.8]]
  - 4.9
* [  3.12 -    4.8] hwlat-detector: Don't ignore threshold module parameter
  + [[file:3.12/hwlat-detector-Don-t-ignore-threshold-module-paramet.patch][3.12]]
  M [[file:3.14/hwlat-detector-Don-t-ignore-threshold-module-paramet.patch][3.14]]
    [[file:3.18/hwlat-detector-Don-t-ignore-threshold-module-paramet.patch][3.18]]
    [[file:4.0/hwlat-detector-Don-t-ignore-threshold-module-paramet.patch][4.0]]
    [[file:4.1/hwlat-detector-Don-t-ignore-threshold-module-paramet.patch][4.1]]
    [[file:4.4/hwlat-detector-Don-t-ignore-threshold-module-paramet.patch][4.4]]
    [[file:4.6/hwlat-detector-Don-t-ignore-threshold-module-paramet.patch][4.6]]
    [[file:4.8/hwlat-detector-Don-t-ignore-threshold-module-paramet.patch][4.8]]
  - 4.9
* [  3.12 -   4.11] hrtimer: Move schedule_work call to helper thread
  + [[file:3.12/hrtimer-Move-schedule_work-call-to-helper-thread.patch][3.12]]
  m [[file:3.14/hrtimer-Move-schedule_work-call-to-helper-thread.patch][3.14]]
    [[file:3.18/hrtimer-Move-schedule_work-call-to-helper-thread.patch][3.18]]
    [[file:4.0/hrtimer-Move-schedule_work-call-to-helper-thread.patch][4.0]]
    [[file:4.1/hrtimer-Move-schedule_work-call-to-helper-thread.patch][4.1]]
    [[file:4.4/hrtimer-Move-schedule_work-call-to-helper-thread.patch][4.4]]
    [[file:4.6/hrtimer-Move-schedule_work-call-to-helper-thread.patch][4.6]]
  M [[file:4.8/hrtimer-Move-schedule_work-call-to-helper-thread.patch][4.8]]
    [[file:4.9/hrtimer-Move-schedule_work-call-to-helper-thread.patch][4.9]]
    [[file:4.11/hrtimer-Move-schedule_work-call-to-helper-thread.patch][4.11]]
* [  3.12 -   4.11] ptrace: fix ptrace vs tasklist_lock race
  + [[file:3.12/ptrace-fix-ptrace-vs-tasklist_lock-race.patch][3.12]]
  M [[file:3.14/ptrace-fix-ptrace-vs-tasklist_lock-race.patch][3.14]]
  M [[file:3.18/ptrace-fix-ptrace-vs-tasklist_lock-race.patch][3.18]]
    [[file:4.0/ptrace-fix-ptrace-vs-tasklist_lock-race.patch][4.0]]
    [[file:4.1/ptrace-fix-ptrace-vs-tasklist_lock-race.patch][4.1]]
  M [[file:4.4/ptrace-fix-ptrace-vs-tasklist_lock-race.patch][4.4]]
  M [[file:4.6/ptrace-fix-ptrace-vs-tasklist_lock-race.patch][4.6]]
  m [[file:4.8/ptrace-fix-ptrace-vs-tasklist_lock-race.patch][4.8]]
    [[file:4.9/ptrace-fix-ptrace-vs-tasklist_lock-race.patch][4.9]]
  M [[file:4.11/ptrace-fix-ptrace-vs-tasklist_lock-race.patch][4.11]]
* [  3.12 -   4.11] mm/memcontrol: Don't call schedule_work_on in preemption disabled context
  + [[file:3.12/mm-memcontrol-Don-t-call-schedule_work_on-in-preempt.patch][3.12]]
    [[file:3.14/mm-memcontrol-Don-t-call-schedule_work_on-in-preempt.patch][3.14]]
    [[file:3.18/mm-memcontrol-Don-t-call-schedule_work_on-in-preempt.patch][3.18]]
  m [[file:4.0/mm-memcontrol-Don-t-call-schedule_work_on-in-preempt.patch][4.0]]
    [[file:4.1/mm-memcontrol-Don-t-call-schedule_work_on-in-preempt.patch][4.1]]
    [[file:4.4/mm-memcontrol-Don-t-call-schedule_work_on-in-preempt.patch][4.4]]
    [[file:4.6/mm-memcontrol-Don-t-call-schedule_work_on-in-preempt.patch][4.6]]
    [[file:4.8/mm-memcontrol-Don-t-call-schedule_work_on-in-preempt.patch][4.8]]
    [[file:4.9/mm-memcontrol-Don-t-call-schedule_work_on-in-preempt.patch][4.9]]
    [[file:4.11/mm-memcontrol-Don-t-call-schedule_work_on-in-preempt.patch][4.11]]
* [  3.12 -   4.11] genirq: Do not invoke the affinity callback via a workqueue on RT
  + [[file:3.12/genirq-do-not-invoke-the-affinity-callback-via-a-wor.patch][3.12]]
    [[file:3.14/genirq-do-not-invoke-the-affinity-callback-via-a-wor.patch][3.14]]
  m [[file:3.18/genirq-do-not-invoke-the-affinity-callback-via-a-wor.patch][3.18]]
    [[file:4.0/genirq-do-not-invoke-the-affinity-callback-via-a-wor.patch][4.0]]
    [[file:4.1/genirq-do-not-invoke-the-affinity-callback-via-a-wor.patch][4.1]]
    [[file:4.4/genirq-do-not-invoke-the-affinity-callback-via-a-wor.patch][4.4]]
  M [[file:4.6/genirq-do-not-invoke-the-affinity-callback-via-a-wor.patch][4.6]]
  M [[file:4.8/genirq-do-not-invoke-the-affinity-callback-via-a-wor.patch][4.8]]
  M [[file:4.9/genirq-do-not-invoke-the-affinity-callback-via-a-wor.patch][4.9]]
  M [[file:4.11/genirq-do-not-invoke-the-affinity-callback-via-a-wor.patch][4.11]]
* [  3.12 -   4.11] wait.h: include atomic.h
  + [[file:3.12/wait.h-include-atomic.h.patch][3.12]]
    [[file:3.14/wait.h-include-atomic.h.patch][3.14]]
    [[file:3.18/wait.h-include-atomic.h.patch][3.18]]
    [[file:4.0/wait.h-include-atomic.h.patch][4.0]]
    [[file:4.1/wait.h-include-atomic.h.patch][4.1]]
    [[file:4.4/wait.h-include-atomic.h.patch][4.4]]
    [[file:4.6/wait.h-include-atomic.h.patch][4.6]]
    [[file:4.8/wait.h-include-atomic.h.patch][4.8]]
    [[file:4.9/wait.h-include-atomic.h.patch][4.9]]
  m [[file:4.11/wait.h-include-atomic.h.patch][4.11]]
* [  3.12 -   4.11] mm: Allow only slub on RT
  + [[file:3.12/mm-disable-sloub-rt.patch][3.12]]
    [[file:3.14/mm-disable-sloub-rt.patch][3.14]]
    [[file:3.18/mm-disable-sloub-rt.patch][3.18]]
    [[file:4.0/mm-disable-sloub-rt.patch][4.0]]
    [[file:4.1/mm-disable-sloub-rt.patch][4.1]]
    [[file:4.4/mm-disable-sloub-rt.patch][4.4]]
    [[file:4.6/mm-disable-sloub-rt.patch][4.6]]
  m [[file:4.8/mm-disable-sloub-rt.patch][4.8]]
    [[file:4.9/mm-disable-sloub-rt.patch][4.9]]
    [[file:4.11/mm-disable-sloub-rt.patch][4.11]]
* [  3.12 -   4.11] usb: Use _nort in giveback function
  + [[file:3.12/usb-use-_nort-in-giveback.patch][3.12]]
  m [[file:3.14/usb-use-_nort-in-giveback.patch][3.14]]
    [[file:3.18/usb-use-_nort-in-giveback.patch][3.18]]
    [[file:4.0/usb-use-_nort-in-giveback.patch][4.0]]
    [[file:4.1/usb-use-_nort-in-giveback.patch][4.1]]
    [[file:4.4/usb-use-_nort-in-giveback.patch][4.4]]
    [[file:4.6/usb-use-_nort-in-giveback.patch][4.6]]
    [[file:4.8/usb-use-_nort-in-giveback.patch][4.8]]
    [[file:4.9/usb-use-_nort-in-giveback.patch][4.9]]
    [[file:4.11/usb-use-_nort-in-giveback.patch][4.11]]
* [  3.12 -   4.11] rtmutex: Add RT aware ww locks
  + [[file:3.12/rtmutex-add-a-first-shot-of-ww_mutex.patch][3.12]]
  M [[file:3.14/rtmutex-add-a-first-shot-of-ww_mutex.patch][3.14]]
  M [[file:3.18/rtmutex-add-a-first-shot-of-ww_mutex.patch][3.18]]
  M [[file:4.0/rtmutex-add-a-first-shot-of-ww_mutex.patch][4.0]]
  M [[file:4.1/rtmutex-add-a-first-shot-of-ww_mutex.patch][4.1]]
  m [[file:4.4/rtmutex-add-a-first-shot-of-ww_mutex.patch][4.4]]
  m [[file:4.6/rtmutex-add-a-first-shot-of-ww_mutex.patch][4.6]]
    [[file:4.8/rtmutex-add-a-first-shot-of-ww_mutex.patch][4.8]]
    [[file:4.9/rtmutex-add-a-first-shot-of-ww_mutex.patch][4.9]]
  M [[file:4.11/rtmutex-add-a-first-shot-of-ww_mutex.patch][4.11]]
* [  3.12 -   4.11] md: disable bcache
  + [[file:3.12/md-disable-bcache.patch][3.12]]
    [[file:3.14/md-disable-bcache.patch][3.14]]
    [[file:3.18/md-disable-bcache.patch][3.18]]
    [[file:4.0/md-disable-bcache.patch][4.0]]
    [[file:4.1/md-disable-bcache.patch][4.1]]
    [[file:4.4/md-disable-bcache.patch][4.4]]
    [[file:4.6/md-disable-bcache.patch][4.6]]
    [[file:4.8/md-disable-bcache.patch][4.8]]
    [[file:4.9/md-disable-bcache.patch][4.9]]
    [[file:4.11/md-disable-bcache.patch][4.11]]
* [  3.14         ] net: gianfar: do not try to cleanup TX packets if they are not done
  + [[file:3.14/net-gianfar-do-not-try-to-cleanup-TX-packets-if-they.patch][3.14]]
  - 3.18
* [  3.14         ] rt,sched,numa: Move task_numa_free() to __put_task_struct(), which -rt offloads
  + [[file:3.14/rt-sched-numa-Move-task_numa_free-to-__put_task_stru.patch][3.14]]
  - 3.18
* [  3.14         ] Revert "x86: Disable IST stacks for debug/int 3/stack fault for PREEMPT_RT"
  + [[file:3.14/Revert-x86-Disable-IST-stacks-for-debug-int-3-stack-.patch][3.14]]
  - 3.18
* [  3.14         ] disable lazy preempt on x86-64
  + [[file:3.14/disable-lazy-preempt-on-x86-64.patch][3.14]]
  - 3.18
* [  3.14         ] sparc64: convert ctx_alloc_lock raw_spinlock_t
  + [[file:3.14/0003-sparc64-convert-ctx_alloc_lock-raw_spinlock_t.patch][3.14]]
  - 3.18
* [  3.14         ] ipv6: some ipv6 statistic counters failed to disable bh
  + [[file:3.14/ipv6-some-ipv6-statistic-counters-failed-to-disable-.patch][3.14]]
  - 3.18
* [  3.14         ] sched: Adjust p->sched_reset_on_fork when nothing else changes
  + [[file:3.14/sched-Adjust-p-sched_reset_on_fork-when-nothing-else.patch][3.14]]
  - 3.18
* [  3.14         ] sched: Consider pi boosting in setscheduler()
  + [[file:3.14/sched-Consider-pi-boosting-in-setscheduler.patch][3.14]]
  - 3.18
* [  3.14         ] sparc64: convert spinlock_t to raw_spinlock_t in mmu_context_t
  + [[file:3.14/0002-sparc64-convert-spinlock_t-to-raw_spinlock_t-in-mmu_.patch][3.14]]
  - 3.18
* [  3.14 -   3.18] net: ip_send_unicast_reply: add missing local serialization
  + [[file:3.14/net-ip_send_unicast_reply-add-missing-local-serializ.patch][3.14]]
  m [[file:3.18/net-ip_send_unicast_reply-add-missing-local-serializ.patch][3.18]]
  - 4.0
* [  3.14 -   3.18] sched: Fix broken setscheduler()
  + [[file:3.14/sched-Fix-broken-setscheduler.patch][3.14]]
    [[file:3.18/sched-Fix-broken-setscheduler.patch][3.18]]
  - 4.0
* [  3.14 -   3.18] bad return value in __mutex_lock_check_stamp
  + [[file:3.14/rtmutex-ww-bad-return-value-in-__mutex_lock_check_stamp.patch][3.14]]
    [[file:3.18/rtmutex-ww-bad-return-value-in-__mutex_lock_check_stamp.patch][3.18]]
  - 4.0
* [  3.14 -    4.0] kernel/hrtimer: be non-freezeable in cpu_chill()
  + [[file:3.14/kernel-hrtimer-be-non-freezeable-in-cpu_chill.patch][3.14]]
    [[file:3.18/kernel-hrtimer-be-non-freezeable-in-cpu_chill.patch][3.18]]
    [[file:4.0/kernel-hrtimer-be-non-freezeable-in-cpu_chill.patch][4.0]]
  - 4.1
* [  3.14 -    4.0] sched: dont calculate hweight in update_migrate_disable()
  + [[file:3.14/sched-dont-calculate-hweight-in-update_migrate_disab.patch][3.14]]
    [[file:3.18/sched-dont-calculate-hweight-in-update_migrate_disab.patch][3.18]]
    [[file:4.0/sched-dont-calculate-hweight-in-update_migrate_disab.patch][4.0]]
  - 4.1
* [  3.14 -    4.0] API cleanup - use local_lock not __local_lock for soft
  + [[file:3.14/API-cleanup-use-local_lock-not-__local_lock-for-soft.patch][3.14]]
    [[file:3.18/API-cleanup-use-local_lock-not-__local_lock-for-soft.patch][3.18]]
  M [[file:4.0/API-cleanup-use-local_lock-not-__local_lock-for-soft.patch][4.0]]
  - 4.1
* [  3.14 -    4.0] softirq: make migrate disable/enable conditioned on softirq_nestcnt transition
  + [[file:3.14/softirq-make-migrate-disable-enable-conditioned-on-softirq_n.patch][3.14]]
    [[file:3.18/softirq-make-migrate-disable-enable-conditioned-on-softirq_n.patch][3.18]]
    [[file:4.0/softirq-make-migrate-disable-enable-conditioned-on-softirq_n.patch][4.0]]
  - 4.1
* [  3.14 -    4.0] irq_work: allow certain work in hard irq context
  + [[file:3.14/irq_work-allow-certain-work-in-hard-irq-context.patch][3.14]]
  M [[file:3.18/irq_work-allow-certain-work-in-hard-irq-context.patch][3.18]]
  M [[file:4.0/irq_work-allow-certain-work-in-hard-irq-context.patch][4.0]]
  - 4.1
* [  3.14 -    4.0] seqlock: consolidate spin_lock/unlock waiting with spin_unlock_wait
  + [[file:3.14/seqlock-consolidate-spin_lock-unlock-waiting-with-sp.patch][3.14]]
    [[file:3.18/seqlock-consolidate-spin_lock-unlock-waiting-with-sp.patch][3.18]]
    [[file:4.0/seqlock-consolidate-spin_lock-unlock-waiting-with-sp.patch][4.0]]
  - 4.1
* [  3.14 -    4.0] timer/rt: Always raise the softirq if there's irq_work to be done
  + [[file:3.14/timer-rt-Always-raise-the-softirq-if-there-s-irq_wor.patch][3.14]]
    [[file:3.18/timer-rt-Always-raise-the-softirq-if-there-s-irq_wor.patch][3.18]]
    [[file:4.0/timer-rt-Always-raise-the-softirq-if-there-s-irq_wor.patch][4.0]]
  - 4.1
* [  3.14 -    4.0] migrate_disable pushd down in rt_spin_trylock_irqsave
  + [[file:3.14/migrate_disable-pushd-down-in-rt_spin_trylock_irqsav.patch][3.14]]
    [[file:3.18/migrate_disable-pushd-down-in-rt_spin_trylock_irqsav.patch][3.18]]
    [[file:4.0/migrate_disable-pushd-down-in-rt_spin_trylock_irqsav.patch][4.0]]
  - 4.1
* [  3.14 -    4.0] write_lock migrate_disable pushdown to rt_write_lock
  + [[file:3.14/write_lock-migrate_disable-pushdown-to-rt_write_lock.patch][3.14]]
    [[file:3.18/write_lock-migrate_disable-pushdown-to-rt_write_lock.patch][3.18]]
    [[file:4.0/write_lock-migrate_disable-pushdown-to-rt_write_lock.patch][4.0]]
  - 4.1
* [  3.14 -    4.0] migrate_disable pushd down in rt_write_trylock_irqsave
  + [[file:3.14/migrate_disable-pushd-down-in-rt_write_trylock_irqsa.patch][3.14]]
    [[file:3.18/migrate_disable-pushd-down-in-rt_write_trylock_irqsa.patch][3.18]]
    [[file:4.0/migrate_disable-pushd-down-in-rt_write_trylock_irqsa.patch][4.0]]
  - 4.1
* [  3.14 -    4.0] allow preemption in recursive migrate_disable call
  + [[file:3.14/allow-preemption-in-recursive-migrate_disable-call.patch][3.14]]
    [[file:3.18/allow-preemption-in-recursive-migrate_disable-call.patch][3.18]]
    [[file:4.0/allow-preemption-in-recursive-migrate_disable-call.patch][4.0]]
  - 4.1
* [  3.14 -    4.0] rt: Make cpu_chill() use hrtimer instead of msleep()
  + [[file:3.14/rt-Make-cpu_chill-use-hrtimer-instead-of-msleep.patch][3.14]]
    [[file:3.18/rt-Make-cpu_chill-use-hrtimer-instead-of-msleep.patch][3.18]]
    [[file:4.0/rt-Make-cpu_chill-use-hrtimer-instead-of-msleep.patch][4.0]]
  - 4.1
* [  3.14 -    4.0] rt: Cleanup of unnecessary do while 0 in read/write _lock()
  + [[file:3.14/rt-Cleanup-of-unnecessary-do-while-0-in-read-write-_.patch][3.14]]
    [[file:3.18/rt-Cleanup-of-unnecessary-do-while-0-in-read-write-_.patch][3.18]]
    [[file:4.0/rt-Cleanup-of-unnecessary-do-while-0-in-read-write-_.patch][4.0]]
  - 4.1
* [  3.14 -    4.0] migrate_disable pushd down in atomic_dec_and_spin_lock
  + [[file:3.14/migrate_disable-pushd-down-in-atomic_dec_and_spin_lo.patch][3.14]]
    [[file:3.18/migrate_disable-pushd-down-in-atomic_dec_and_spin_lo.patch][3.18]]
    [[file:4.0/migrate_disable-pushd-down-in-atomic_dec_and_spin_lo.patch][4.0]]
  - 4.1
* [  3.14 -    4.0] read_lock migrate_disable pushdown to rt_read_lock
  + [[file:3.14/read_lock-migrate_disable-pushdown-to-rt_read_lock.patch][3.14]]
  m [[file:3.18/read_lock-migrate_disable-pushdown-to-rt_read_lock.patch][3.18]]
    [[file:4.0/read_lock-migrate_disable-pushdown-to-rt_read_lock.patch][4.0]]
  - 4.1
* [  3.14 -    4.0] timer: Raise softirq if there's irq_work
  + [[file:3.14/timer-Raise-softirq-if-there-s-irq_work.patch][3.14]]
    [[file:3.18/timer-Raise-softirq-if-there-s-irq_work.patch][3.18]]
    [[file:4.0/timer-Raise-softirq-if-there-s-irq_work.patch][4.0]]
  - 4.1
* [  3.14 -    4.0] timers: do not raise softirq unconditionally
  + [[file:3.14/timers-do-not-raise-softirq-unconditionally.patch][3.14]]
    [[file:3.18/timers-do-not-raise-softirq-unconditionally.patch][3.18]]
    [[file:4.0/timers-do-not-raise-softirq-unconditionally.patch][4.0]]
  - 4.1
* [  3.14 -    4.0] rtmutex: use a trylock for waiter lock in trylock
  + [[file:3.14/rtmutex-use-a-trylock-for-waiter-lock-in-trylock.patch][3.14]]
  M [[file:3.18/rtmutex-use-a-trylock-for-waiter-lock-in-trylock.patch][3.18]]
    [[file:4.0/rtmutex-use-a-trylock-for-waiter-lock-in-trylock.patch][4.0]]
  - 4.1
* [  3.14 -    4.0] condition migration_disable on lock acquisition
  + [[file:3.14/condition-migration_disable-on-lock-acquisition.patch][3.14]]
    [[file:3.18/condition-migration_disable-on-lock-acquisition.patch][3.18]]
    [[file:4.0/condition-migration_disable-on-lock-acquisition.patch][4.0]]
  - 4.1
* [  3.14 -    4.0] use local spin_locks in local_lock
  + [[file:3.14/use-local-spin_locks-in-local_lock.patch][3.14]]
    [[file:3.18/use-local-spin_locks-in-local_lock.patch][3.18]]
  m [[file:4.0/use-local-spin_locks-in-local_lock.patch][4.0]]
  - 4.1
* [  3.14 -    4.1] net: gianfar: Do not disable interrupts
  + [[file:3.14/net-gianfar-do-not-disable-interrupts.patch][3.14]]
  M [[file:3.18/net-gianfar-do-not-disable-interrupts.patch][3.18]]
    [[file:4.0/net-gianfar-do-not-disable-interrupts.patch][4.0]]
    [[file:4.1/net-gianfar-do-not-disable-interrupts.patch][4.1]]
  - 4.4
* [  3.14 -   4.11] fs: jbd2: pull your plug when waiting for space
  + [[file:3.14/fs-jbd2-pull-your-plug-when-waiting-for-space.patch][3.14]]
  m [[file:3.18/fs-jbd2-pull-your-plug-when-waiting-for-space.patch][3.18]]
    [[file:4.0/fs-jbd2-pull-your-plug-when-waiting-for-space.patch][4.0]]
    [[file:4.1/fs-jbd2-pull-your-plug-when-waiting-for-space.patch][4.1]]
    [[file:4.4/fs-jbd2-pull-your-plug-when-waiting-for-space.patch][4.4]]
    [[file:4.6/fs-jbd2-pull-your-plug-when-waiting-for-space.patch][4.6]]
    [[file:4.8/fs-jbd2-pull-your-plug-when-waiting-for-space.patch][4.8]]
    [[file:4.9/fs-jbd2-pull-your-plug-when-waiting-for-space.patch][4.9]]
    [[file:4.11/fs-jbd2-pull-your-plug-when-waiting-for-space.patch][4.11]]
* [  3.14 -   4.11] cpu_chill: Add a UNINTERRUPTIBLE hrtimer_nanosleep
  + [[file:3.14/cpu_chill-Add-a-UNINTERRUPTIBLE-hrtimer_nanosleep.patch][3.14]]
    [[file:3.18/cpu_chill-Add-a-UNINTERRUPTIBLE-hrtimer_nanosleep.patch][3.18]]
    [[file:4.0/cpu_chill-Add-a-UNINTERRUPTIBLE-hrtimer_nanosleep.patch][4.0]]
    [[file:4.1/cpu_chill-Add-a-UNINTERRUPTIBLE-hrtimer_nanosleep.patch][4.1]]
  m [[file:4.4/cpu_chill-Add-a-UNINTERRUPTIBLE-hrtimer_nanosleep.patch][4.4]]
    [[file:4.6/cpu_chill-Add-a-UNINTERRUPTIBLE-hrtimer_nanosleep.patch][4.6]]
    [[file:4.8/cpu_chill-Add-a-UNINTERRUPTIBLE-hrtimer_nanosleep.patch][4.8]]
    [[file:4.9/cpu_chill-Add-a-UNINTERRUPTIBLE-hrtimer_nanosleep.patch][4.9]]
    [[file:4.11/cpu_chill-Add-a-UNINTERRUPTIBLE-hrtimer_nanosleep.patch][4.11]]
* [  3.14 -   4.11] leds: trigger: disable CPU trigger on -RT
  + [[file:3.14/leds-trigger-disable-CPU-trigger-on-RT.patch][3.14]]
    [[file:3.18/leds-trigger-disable-CPU-trigger-on-RT.patch][3.18]]
    [[file:4.0/leds-trigger-disable-CPU-trigger-on-RT.patch][4.0]]
    [[file:4.1/leds-trigger-disable-CPU-trigger-on-RT.patch][4.1]]
    [[file:4.4/leds-trigger-disable-CPU-trigger-on-RT.patch][4.4]]
    [[file:4.6/leds-trigger-disable-CPU-trigger-on-RT.patch][4.6]]
    [[file:4.8/leds-trigger-disable-CPU-trigger-on-RT.patch][4.8]]
    [[file:4.9/leds-trigger-disable-CPU-trigger-on-RT.patch][4.9]]
    [[file:4.11/leds-trigger-disable-CPU-trigger-on-RT.patch][4.11]]
* [  3.14 -   4.11] sparc64: use generic rwsem spinlocks rt
  + [[file:3.14/0001-sparc64-use-generic-rwsem-spinlocks-rt.patch][3.14]]
    [[file:3.18/0001-sparc64-use-generic-rwsem-spinlocks-rt.patch][3.18]]
    [[file:4.0/0001-sparc64-use-generic-rwsem-spinlocks-rt.patch][4.0]]
    [[file:4.1/sparc64-use-generic-rwsem-spinlocks-rt.patch][4.1]]
    [[file:4.4/sparc64-use-generic-rwsem-spinlocks-rt.patch][4.4]]
    [[file:4.6/sparc64-use-generic-rwsem-spinlocks-rt.patch][4.6]]
    [[file:4.8/sparc64-use-generic-rwsem-spinlocks-rt.patch][4.8]]
    [[file:4.9/sparc64-use-generic-rwsem-spinlocks-rt.patch][4.9]]
    [[file:4.11/sparc64-use-generic-rwsem-spinlocks-rt.patch][4.11]]
* [  3.14 -   4.11] rcutree/rcu_bh_qs: Disable irq while calling rcu_preempt_qs()
  + [[file:3.14/rcutree-rcu_bh_qs-disable-irq-while-calling-rcu_pree.patch][3.14]]
  m [[file:3.18/rcutree-rcu_bh_qs-disable-irq-while-calling-rcu_pree.patch][3.18]]
    [[file:4.0/rcutree-rcu_bh_qs-disable-irq-while-calling-rcu_pree.patch][4.0]]
    [[file:4.1/rcutree-rcu_bh_qs-disable-irq-while-calling-rcu_pree.patch][4.1]]
    [[file:4.4/rcutree-rcu_bh_qs-disable-irq-while-calling-rcu_pree.patch][4.4]]
    [[file:4.6/rcutree-rcu_bh_qs-disable-irq-while-calling-rcu_pree.patch][4.6]]
    [[file:4.8/rcutree-rcu_bh_qs-disable-irq-while-calling-rcu_pree.patch][4.8]]
    [[file:4.9/rcutree-rcu_bh_qs-disable-irq-while-calling-rcu_pree.patch][4.9]]
    [[file:4.11/rcutree-rcu_bh_qs-disable-irq-while-calling-rcu_pree.patch][4.11]]
* [  3.14 -   4.11] cpu hotplug: Document why PREEMPT_RT uses a spinlock
  + [[file:3.14/cpu-hotplug-Document-why-PREEMPT_RT-uses-a-spinlock.patch][3.14]]
    [[file:3.18/cpu-hotplug-Document-why-PREEMPT_RT-uses-a-spinlock.patch][3.18]]
    [[file:4.0/cpu-hotplug-Document-why-PREEMPT_RT-uses-a-spinlock.patch][4.0]]
    [[file:4.1/cpu-hotplug-Document-why-PREEMPT_RT-uses-a-spinlock.patch][4.1]]
    [[file:4.4/cpu-hotplug-Document-why-PREEMPT_RT-uses-a-spinlock.patch][4.4]]
    [[file:4.6/cpu-hotplug-Document-why-PREEMPT_RT-uses-a-spinlock.patch][4.6]]
    [[file:4.8/cpu-hotplug-Document-why-PREEMPT_RT-uses-a-spinlock.patch][4.8]]
    [[file:4.9/cpu-hotplug-Document-why-PREEMPT_RT-uses-a-spinlock.patch][4.9]]
    [[file:4.11/cpu-hotplug-Document-why-PREEMPT_RT-uses-a-spinlock.patch][4.11]]
* [  3.14 -   4.11] cpu_down: move migrate_enable() back
  + [[file:3.14/cpu_down_move_migrate_enable_back.patch][3.14]]
    [[file:3.18/cpu_down_move_migrate_enable_back.patch][3.18]]
    [[file:4.0/cpu_down_move_migrate_enable_back.patch][4.0]]
    [[file:4.1/cpu_down_move_migrate_enable_back.patch][4.1]]
    [[file:4.4/cpu_down_move_migrate_enable_back.patch][4.4]]
  m [[file:4.6/cpu_down_move_migrate_enable_back.patch][4.6]]
    [[file:4.8/cpu_down_move_migrate_enable_back.patch][4.8]]
    [[file:4.9/cpu_down_move_migrate_enable_back.patch][4.9]]
  m [[file:4.11/cpu_down_move_migrate_enable_back.patch][4.11]]
* [  3.14 -   4.11] arm/unwind: use a raw_spin_lock
  + [[file:3.14/arm-unwind-use_raw_lock.patch][3.14]]
    [[file:3.18/arm-unwind-use_raw_lock.patch][3.18]]
    [[file:4.0/arm-unwind-use_raw_lock.patch][4.0]]
    [[file:4.1/arm-unwind-use_raw_lock.patch][4.1]]
    [[file:4.4/arm-unwind-use_raw_lock.patch][4.4]]
    [[file:4.6/arm-unwind-use_raw_lock.patch][4.6]]
    [[file:4.8/arm-unwind-use_raw_lock.patch][4.8]]
    [[file:4.9/arm-unwind-use_raw_lock.patch][4.9]]
    [[file:4.11/arm-unwind-use_raw_lock.patch][4.11]]
* [  3.14 -   4.11] block: mq: use cpu_light()
  + [[file:3.14/block-mq-use-cpu_light.patch][3.14]]
  M [[file:3.18/block-mq-use-cpu_light.patch][3.18]]
    [[file:4.0/block-mq-use-cpu_light.patch][4.0]]
    [[file:4.1/block-mq-use-cpu_light.patch][4.1]]
  M [[file:4.4/block-mq-use-cpu_light.patch][4.4]]
  M [[file:4.6/block-mq-use-cpu_light.patch][4.6]]
    [[file:4.8/block-mq-use-cpu_light.patch][4.8]]
    [[file:4.9/block-mq-use-cpu_light.patch][4.9]]
    [[file:4.11/block-mq-use-cpu_light.patch][4.11]]
* [  3.14 -   4.11] crypto: Reduce preempt disabled regions, more algos
  + [[file:3.14/crypto-Reduce-preempt-disabled-regions-more-algos.patch][3.14]]
    [[file:3.18/crypto-Reduce-preempt-disabled-regions-more-algos.patch][3.18]]
    [[file:4.0/crypto-Reduce-preempt-disabled-regions-more-algos.patch][4.0]]
    [[file:4.1/crypto-Reduce-preempt-disabled-regions-more-algos.patch][4.1]]
    [[file:4.4/crypto-Reduce-preempt-disabled-regions-more-algos.patch][4.4]]
    [[file:4.6/crypto-Reduce-preempt-disabled-regions-more-algos.patch][4.6]]
    [[file:4.8/crypto-Reduce-preempt-disabled-regions-more-algos.patch][4.8]]
    [[file:4.9/crypto-Reduce-preempt-disabled-regions-more-algos.patch][4.9]]
    [[file:4.11/crypto-Reduce-preempt-disabled-regions-more-algos.patch][4.11]]
* [  3.14 -   4.11] net: sched: Use msleep() instead of yield()
  + [[file:3.14/net-sched-dev_deactivate_many-use-msleep-1-instead-o.patch][3.14]]
    [[file:3.18/net-sched-dev_deactivate_many-use-msleep-1-instead-o.patch][3.18]]
    [[file:4.0/net-sched-dev_deactivate_many-use-msleep-1-instead-o.patch][4.0]]
    [[file:4.1/net-sched-dev_deactivate_many-use-msleep-1-instead-o.patch][4.1]]
    [[file:4.4/net-sched-dev_deactivate_many-use-msleep-1-instead-o.patch][4.4]]
    [[file:4.6/net-sched-dev_deactivate_many-use-msleep-1-instead-o.patch][4.6]]
    [[file:4.8/net-sched-dev_deactivate_many-use-msleep-1-instead-o.patch][4.8]]
    [[file:4.9/net-sched-dev_deactivate_many-use-msleep-1-instead-o.patch][4.9]]
    [[file:4.11/net-sched-dev_deactivate_many-use-msleep-1-instead-o.patch][4.11]]
* [  3.14 -   4.11] rcu: Eliminate softirq processing from rcutree
  + [[file:3.14/rcu-Eliminate-softirq-processing-from-rcutree.patch][3.14]]
  m [[file:3.18/rcu-Eliminate-softirq-processing-from-rcutree.patch][3.18]]
  M [[file:4.0/rcu-Eliminate-softirq-processing-from-rcutree.patch][4.0]]
    [[file:4.1/rcu-Eliminate-softirq-processing-from-rcutree.patch][4.1]]
  M [[file:4.4/rcu-Eliminate-softirq-processing-from-rcutree.patch][4.4]]
  m [[file:4.6/rcu-Eliminate-softirq-processing-from-rcutree.patch][4.6]]
    [[file:4.8/rcu-Eliminate-softirq-processing-from-rcutree.patch][4.8]]
    [[file:4.9/rcu-Eliminate-softirq-processing-from-rcutree.patch][4.9]]
  M [[file:4.11/rcu-Eliminate-softirq-processing-from-rcutree.patch][4.11]]
* [  3.14 -   4.11] percpu_ida: Use local locks
  + [[file:3.14/percpu_ida-use-locklocks.patch][3.14]]
    [[file:3.18/percpu_ida-use-locklocks.patch][3.18]]
    [[file:4.0/percpu_ida-use-locklocks.patch][4.0]]
    [[file:4.1/percpu_ida-use-locklocks.patch][4.1]]
    [[file:4.4/percpu_ida-use-locklocks.patch][4.4]]
    [[file:4.6/percpu_ida-use-locklocks.patch][4.6]]
    [[file:4.8/percpu_ida-use-locklocks.patch][4.8]]
    [[file:4.9/percpu_ida-use-locklocks.patch][4.9]]
    [[file:4.11/percpu_ida-use-locklocks.patch][4.11]]
* [  3.14 -   4.11] rcu: make RCU_BOOST default on RT
  + [[file:3.14/rcu-make-RCU_BOOST-default-on-RT.patch][3.14]]
    [[file:3.18/rcu-make-RCU_BOOST-default-on-RT.patch][3.18]]
    [[file:4.0/rcu-make-RCU_BOOST-default-on-RT.patch][4.0]]
    [[file:4.1/rcu-make-RCU_BOOST-default-on-RT.patch][4.1]]
  m [[file:4.4/rcu-make-RCU_BOOST-default-on-RT.patch][4.4]]
  M [[file:4.6/rcu-make-RCU_BOOST-default-on-RT.patch][4.6]]
    [[file:4.8/rcu-make-RCU_BOOST-default-on-RT.patch][4.8]]
    [[file:4.9/rcu-make-RCU_BOOST-default-on-RT.patch][4.9]]
    [[file:4.11/rcu-make-RCU_BOOST-default-on-RT.patch][4.11]]
* [  3.18         ] disable preempt lazy on x86-64 {C::bug::compile::config_err::config::disable preempt lazy}
  + [[file:3.18/disable-preempt-lazy-on-x86-64.patch][3.18]] {MOD::arch/x86}
  - 4.0
* [  3.18 -    4.0] Revert "timers: do not raise softirq unconditionally"{C::bug::softirq::time::softirq::revert hrtimer}
  + [[file:3.18/Revert-timers-do-not-raise-softirq-unconditionally.patch][3.18]] {MOD::include/linux,kernel/time}
    [[file:4.0/Revert-timers-do-not-raise-softirq-unconditionally.patch][4.0]]
  - 4.1
* [  3.18 -    4.0] Revert "migrate_disable pushd down in atomic_dec_and_spin_lock"{C::bug::data_err::migration::migration::reorder migrate_disable???}
  + [[file:3.18/Revert-migrate_disable-pushd-down-in-atomic_dec_and_.patch][3.18]]
    [[file:4.0/Revert-migrate_disable-pushd-down-in-atomic_dec_and_.patch][4.0]]
  - 4.1
* [  3.18 -    4.0] timer: do not spin_trylock() on UP {C::feature::debuginfo::do not spin_trylock}
  + [[file:3.18/timer-do-not-spin_trylock-on-UP.patch][3.18]]
    [[file:4.0/timer-do-not-spin_trylock-on-UP.patch][4.0]]
  - 4.1
* [  3.18 -    4.0] rwlock: disable migration before taking a lock {C::bug::crash::migration::migration::reorder migration_disable}
  + [[file:3.18/rwlock-disable-migration-before-taking-a-lock.patch][3.18]]
    [[file:4.0/rwlock-disable-migration-before-taking-a-lock.patch][4.0]]
  - 4.1
* [  3.18 -    4.0] sched: Do not clear PF_NO_SETAFFINITY flag in select_fallback_rq() {C::bug::crash::migration::semantics::do not clear PF_NO_SETAFFINITY}
  + [[file:3.18/sched-do-not-clear-pf_no_setaffinity-flag-in-select_fallback_rq.patch][3.18]]
    [[file:4.0/sched-do-not-clear-pf_no_setaffinity-flag-in-select_fallback_rq.patch][4.0]]
  - 4.1
* [  3.18 -    4.0] rwsem-rt: Do not allow readers to nest{C::feature::rtsupport::rwsems in rt-preempt do not nest}
  + [[file:3.18/rwsem-rt-Do-not-allow-readers-to-nest.patch][3.18]]
    [[file:4.0/rwsem-rt-Do-not-allow-readers-to-nest.patch][4.0]]
  - 4.1
* [  3.18 -    4.1] gpio: omap: use raw locks for locking{C::feature::rtsupport::replace with raw}
  + [[file:3.18/gpio-omap-use-raw-locks-for-locking.patch][3.18]]
  M [[file:4.0/gpio-omap-use-raw-locks-for-locking.patch][4.0]]
  m [[file:4.1/gpio-omap-use-raw-locks-for-locking.patch][4.1]]
  - 4.4
* [  3.18 -    4.8] stomp-machine: create lg_global_trylock_relax() primitive {C::feature::rtsupport::replace with lg_global_trylock_relax()}
  + [[file:3.18/stomp-machine-create-lg_global_trylock_relax-primiti.patch][3.18]]
    [[file:4.0/stomp-machine-create-lg_global_trylock_relax-primiti.patch][4.0]]
    [[file:4.1/stomp-machine-create-lg_global_trylock_relax-primiti.patch][4.1]]
    [[file:4.4/stomp-machine-create-lg_global_trylock_relax-primiti.patch][4.4]]
    [[file:4.6/stomp-machine-create-lg_global_trylock_relax-primiti.patch][4.6]]
  m [[file:4.8/stomp-machine-create-lg_global_trylock_relax-primiti.patch][4.8]]
  - 4.9
* [  3.18 -    4.8] blk-mq: revert raw locks, post pone notifier to POST_DEAD {C::performance::preempt::replaced raw}
  + [[file:3.18/blk-mq-revert-raw-locks-post-pone-notifier-to-POST_D.patchto-POST_D.patch][3.18]]
  m [[file:4.0/blk-mq-revert-raw-locks-post-pone-notifier-to-POST_D.patchto-POST_D.patch][4.0]]
    [[file:4.1/blk-mq-revert-raw-locks-post-pone-notifier-to-POST_D.patchto-POST_D.patch][4.1]]
    [[file:4.4/blk-mq-revert-raw-locks-post-pone-notifier-to-POST_D.patchto-POST_D.patch][4.4]]
    [[file:4.6/blk-mq-revert-raw-locks-post-pone-notifier-to-POST_D.patchto-POST_D.patch][4.6]]
    [[file:4.8/blk-mq-revert-raw-locks-post-pone-notifier-to-POST_D.patchto-POST_D.patch][4.8]]
  - 4.9
* [  3.18 -    4.8] stomp-machine: use lg_global_trylock_relax() to dead with stop_cpus_lock lglock {C::performance::preempt::replace with lg_global_trylock_relax() and add other code}
  + [[file:3.18/stomp-machine-use-lg_global_trylock_relax-to-dead-wi.patch][3.18]]
    [[file:4.0/stomp-machine-use-lg_global_trylock_relax-to-dead-wi.patch][4.0]]
    [[file:4.1/stomp-machine-use-lg_global_trylock_relax-to-dead-wi.patch][4.1]]
  M [[file:4.4/stomp-machine-use-lg_global_trylock_relax-to-dead-wi.patch][4.4]]
  M [[file:4.6/stomp-machine-use-lg_global_trylock_relax-to-dead-wi.patch][4.6]]
    [[file:4.8/stomp-machine-use-lg_global_trylock_relax-to-dead-wi.patch][4.8]]
  - 4.9
* [  3.18 -   4.11] workqueue: Prevent deadlock/stall on RT {C::bug::deadlock::deadlock::preempt::add preempt_enable/disable pairs ,call worker cord unconditionally}
  + [[file:3.18/workqueue-prevent-deadlock-stall.patch][3.18]]
    [[file:4.0/workqueue-prevent-deadlock-stall.patch][4.0]]
    [[file:4.1/workqueue-prevent-deadlock-stall.patch][4.1]]
    [[file:4.4/workqueue-prevent-deadlock-stall.patch][4.4]]
    [[file:4.6/workqueue-prevent-deadlock-stall.patch][4.6]]
    [[file:4.8/workqueue-prevent-deadlock-stall.patch][4.8]]
    [[file:4.9/workqueue-prevent-deadlock-stall.patch][4.9]]
    [[file:4.11/workqueue-prevent-deadlock-stall.patch][4.11]]
* [  3.18 -   4.11] mm/workingset: Do not protect workingset_shadow_nodes with irq off {C::maintain::refactor::replaced with local_lock,rename fun()}
  + [[file:3.18/mm-workingset-do-not-protect-workingset_shadow_nodes.patch][3.18]]
  M [[file:4.0/mm-workingset-do-not-protect-workingset_shadow_nodes.patch][4.0]]
    [[file:4.1/mm-workingset-do-not-protect-workingset_shadow_nodes.patch][4.1]]
    [[file:4.4/mm-workingset-do-not-protect-workingset_shadow_nodes.patch][4.4]]
  M [[file:4.6/mm-workingset-do-not-protect-workingset_shadow_nodes.patch][4.6]]
  M [[file:4.8/mm-workingset-do-not-protect-workingset_shadow_nodes.patch][4.8]]
  m [[file:4.9/mm-workingset-do-not-protect-workingset_shadow_nodes.patch][4.9]]
  M [[file:4.11/mm-workingset-do-not-protect-workingset_shadow_nodes.patch][4.11]]
* [  3.18 -   4.11] block/mq: don't complete requests via IPI {C::feature::rtsupport::add completion into workqueue}
  + [[file:3.18/block-mq-don-t-complete-requests-via-IPI.patch][3.18]]
  M [[file:4.0/block-mq-don-t-complete-requests-via-IPI.patch][4.0]]
  M [[file:4.1/block-mq-don-t-complete-requests-via-IPI.patch][4.1]]
    [[file:4.4/block-mq-don-t-complete-requests-via-IPI.patch][4.4]]
    [[file:4.6/block-mq-don-t-complete-requests-via-IPI.patch][4.6]]
  m [[file:4.8/block-mq-don-t-complete-requests-via-IPI.patch][4.8]]
  m [[file:4.9/block-mq-don-t-complete-requests-via-IPI.patch][4.9]]
  M [[file:4.11/block-mq-don-t-complete-requests-via-IPI.patch][4.11]]
* [  3.18 -   4.11] block/mq: do not invoke preempt_disable() {C::performance::preempt::replaceed with migrate_disable() and get_cpu_light()}
  + [[file:3.18/block-mq-drop-preempt-disable.patch][3.18]]
  M [[file:4.0/block-mq-drop-preempt-disable.patch][4.0]]
    [[file:4.1/block-mq-drop-preempt-disable.patch][4.1]]
  m [[file:4.4/block-mq-drop-preempt-disable.patch][4.4]]
    [[file:4.6/block-mq-drop-preempt-disable.patch][4.6]]
    [[file:4.8/block-mq-drop-preempt-disable.patch][4.8]]
  m [[file:4.9/block-mq-drop-preempt-disable.patch][4.9]]
  m [[file:4.11/block-mq-drop-preempt-disable.patch][4.11]]
* [  3.18 -   4.11] mm/memcontrol: Replace local_irq_disable with local locks {C::performance::mutex::Replace local_irq_disable with local locks}
  + [[file:3.18/mm-memcontrol-do_not_disable_irq.patch][3.18]]
  m [[file:4.0/mm-memcontrol-do_not_disable_irq.patch][4.0]]
  M [[file:4.1/mm-memcontrol-do_not_disable_irq.patch][4.1]]
  M [[file:4.4/mm-memcontrol-do_not_disable_irq.patch][4.4]]
  M [[file:4.6/mm-memcontrol-do_not_disable_irq.patch][4.6]]
  m [[file:4.8/mm-memcontrol-do_not_disable_irq.patch][4.8]]
    [[file:4.9/mm-memcontrol-do_not_disable_irq.patch][4.9]]
  m [[file:4.11/mm-memcontrol-do_not_disable_irq.patch][4.11]]
* [  3.18 -   4.11] cgroups: use simple wait in css_release() {C::bug::crash::deadlock::mutex::add simple_wait_queue}
  + [[file:3.18/cgroups-use-simple-wait-in-css_release.patch][3.18]]
    [[file:4.0/cgroups-use-simple-wait-in-css_release.patch][4.0]]
    [[file:4.1/cgroups-use-simple-wait-in-css_release.patch][4.1]]
  m [[file:4.4/cgroups-use-simple-wait-in-css_release.patch][4.4]]
    [[file:4.6/cgroups-use-simple-wait-in-css_release.patch][4.6]]
  M [[file:4.8/cgroups-use-simple-wait-in-css_release.patch][4.8]]
    [[file:4.9/cgroups-use-simple-wait-in-css_release.patch][4.9]]
  m [[file:4.11/cgroups-use-simple-wait-in-css_release.patch][4.11]]
* [  3.18 -   4.11] block: blk-mq: Use swait {C::bug::crash::deadlock::mutex::replace with swait}
  + [[file:3.18/block-blk-mq-use-swait.patch][3.18]]
  M [[file:4.0/block-blk-mq-use-swait.patch][4.0]]
  m [[file:4.1/block-blk-mq-use-swait.patch][4.1]]
  M [[file:4.4/block-blk-mq-use-swait.patch][4.4]]
  M [[file:4.6/block-blk-mq-use-swait.patch][4.6]]
    [[file:4.8/block-blk-mq-use-swait.patch][4.8]]
    [[file:4.9/block-blk-mq-use-swait.patch][4.9]]
  M [[file:4.11/block-blk-mq-use-swait.patch][4.11]]
* [  3.18 -   4.11] work-simple: Simple work queue implemenation{C::feature::rtsupport::simple work queue implemenation}
  + [[file:3.18/work-simple-Simple-work-queue-implemenation.patch][3.18]]
    [[file:4.0/work-simple-Simple-work-queue-implemenation.patch][4.0]]
    [[file:4.1/work-simple-Simple-work-queue-implemenation.patch][4.1]]
  m [[file:4.4/work-simple-Simple-work-queue-implemenation.patch][4.4]]
  M [[file:4.6/work-simple-Simple-work-queue-implemenation.patch][4.6]]
  M [[file:4.8/work-simple-Simple-work-queue-implemenation.patch][4.8]]
    [[file:4.9/work-simple-Simple-work-queue-implemenation.patch][4.9]]
  m [[file:4.11/work-simple-Simple-work-queue-implemenation.patch][4.11]]
* [   4.0         ] rtmutex.c: Fix incorrect waiter check{C::bug::data_err::err_var::semantics::fix waiter check}
  + [[file:4.0/rtmutex.c-Fix-incorrect-waiter-check.patch][4.0]]
  - 4.1
* [   4.0         ] Revert "rwsem-rt: Do not allow readers to nest"{C::feature::rtsupport::do not allow readers nest}
  + [[file:4.0/Revert-rwsem-rt-Do-not-allow-readers-to-nest.patch][4.0]]
  - 4.1
* [   4.0         ] locking: ww_mutex: fix ww_mutex vs self-deadlock{C::feature::rtsupport::add ww_mutex}
  + [[file:4.0/locking-ww_mutex-fix-ww_mutex-vs-self-deadlock.patch][4.0]]
  - 4.1
* [   4.0         ] rt, nohz_full: fix nohz_full for PREEMPT_RT_FULL{C::feature::rtsupport::fix nohz_full}
  + [[file:4.0/rt-nohz_full-fix-nohz_full-for-PREEMPT_RT_FULL.patch][4.0]]
  - 4.1
* [   4.0         ] rt,locking: fix __ww_mutex_lock_interruptible() lockdep annotation{C::maintain::refactor::replace with mutex_acquir_nest()}
  + [[file:4.0/rtmutex-ww_mutex_fix_ww_mutex_lock_interruptible_lockdep_annotation.patch][4.0]]
  - 4.1
* [   4.0         ] xfs: Disable percpu SB on PREEMPT_RT_FULL {C::bug::livelock::livelock::config::add config}
  + [[file:4.0/xfs-Disable-percpu-SB-on-PREEMPT_RT_FULL.patch][4.0]]
  - 4.1
* [   4.0         ] rtmutex: enable deadlock detection in ww_mutex_lock functions{C::feature::check::correct potential deadlock}
  + [[file:4.0/rtmutex-enable-deadlock-detection-in-ww_mutex_lock-f.patch][4.0]]
  - 4.1
* [   4.0         ] irq_work: Hide access to hirq_work_list in PREEMPT_RT_FULL{C::bug::compile::compiling_err::syntax::add #ifdef}
  + [[file:4.0/irq_work-Hide-access-to-hirq_work_list-in-PREEMPT_RT.patch][4.0]]
  - 4.1
* [   4.0         ] irq_work: Delegate non-immediate irq work to ksoftirqd{C::bug::deadlock::deadlock::softirq::delegate non-immediate irq work to ksoftirqd}
  + [[file:4.0/irq_work_Delegate_non-immediate_irq_work_to_ksoftirqd.patch][4.0]]
  - 4.1
* [   4.0         ] kernel/irq_work: fix no_hz deadlock{C::bug::deadlock::deadlock::irq::upstream}
  + [[file:4.0/kernel-irq_work-fix-no_hz-deadlock.patch][4.0]]
  - 4.1
* [   4.0 -    4.1] sched/preempt, mm/kmap: Explicitly disable/enable preemption in kmap_atomic_*{C::performance::preempt::add preempt disable/enable pairs}
  + [[file:4.0/0004-mm-explicitly-disable-enable-preemption-in-kmap_atom.patch][4.0]]
    [[file:4.1/0004-mm-explicitly-disable-enable-preemption-in-kmap_atom.patch][4.1]]
  - 4.4
* [   4.0 -    4.1] sched/preempt, arm/futex: Disable preemption in UP futex_atomic_op_inuser() expl{}{C::performance::preempt::add preempt disable/enable pairs}
  + [[file:4.0/0011-arm-futex-UP-futex_atomic_op_inuser-relies-on-disabl.patch][4.0]]
    [[file:4.1/0011-arm-futex-UP-futex_atomic_op_inuser-relies-on-disabl.patch][4.1]]
  - 4.4
* [   4.0 -    4.1] arm64: Mark PMU interrupt IRQF_NO_THREAD{C::feature::arch::add IRQF_NO_THREAD}
  + [[file:4.0/0001-arm64-Mark-PMU-interrupt-IRQF_NO_THREAD.patch][4.0]]
    [[file:4.1/0001-arm64-Mark-PMU-interrupt-IRQF_NO_THREAD.patch][4.1]]
  - 4.4
* [   4.0 -    4.1] sched/preempt, arm/futex: Disable preemption in UP futex_atomic_cmpxchg_inatomic{C::feature::rtsupport::explicit preempt disable/enable}
  + [[file:4.0/0010-arm-futex-UP-futex_atomic_cmpxchg_inatomic-relies-on.patch][4.0]]
    [[file:4.1/0010-arm-futex-UP-futex_atomic_cmpxchg_inatomic-relies-on.patch][4.1]]
  - 4.4
* [   4.0 -    4.1] mm/fault, drm/i915: Use pagefault_disabled() to check for disabled pagefaults{C::maintain::refactor::replace with disabled pagefaults}
  + [[file:4.0/0007-drm-i915-use-pagefault_disabled-to-check-for-disable.patch][4.0]]
    [[file:4.1/0007-drm-i915-use-pagefault_disabled-to-check-for-disable.patch][4.1]]
  - 4.4
* [   4.0 -    4.1] sched/preempt, MIPS: Properly lock access to the FPU{}{C::maintain::refactor::combination codes}
  + [[file:4.0/0013-mips-properly-lock-access-to-the-fpu.patch][4.0]]
    [[file:4.1/0013-mips-properly-lock-access-to-the-fpu.patch][4.1]]
  - 4.4
* [   4.0 -    4.1] sched/preempt, mm/kmap, MIPS: Disable preemption in kmap_coherent() explicitly{C::feature::rtsupport::explicit preempt disable/enable }
  + [[file:4.0/0005-mips-kmap_coherent-relies-on-disabled-preemption.patch][4.0]]
    [[file:4.1/0005-mips-kmap_coherent-relies-on-disabled-preemption.patch][4.1]]
  - 4.4
* [   4.0 -    4.1] sched/preempt, futex: Update comments to clarify that preemption doesn't have to{C::maintain::donothing::update comments}
  + [[file:4.0/0012-futex-clarify-that-preemption-doesn-t-have-to-be-dis.patch][4.0]]
    [[file:4.1/0012-futex-clarify-that-preemption-doesn-t-have-to-be-dis.patch][4.1]]
  - 4.4
* [   4.0 -    4.1] sched/preempt, futex: Disable preemption in UP futex_atomic_cmpxchg_inatomic() e{C::feature::rtsupport::explicit preempt disable/enable}
  + [[file:4.0/0009-futex-UP-futex_atomic_cmpxchg_inatomic-relies-on-dis.patch][4.0]]
    [[file:4.1/0009-futex-UP-futex_atomic_cmpxchg_inatomic-relies-on-dis.patch][4.1]]
  - 4.4
* [   4.0 -    4.1] sched/preempt, mm/fault: Count pagefault_disable() levels in pagefault_disabled{C::feature::statistics::add a separate counter to count pagefault_disable() calls}
  + [[file:4.0/0001-uaccess-count-pagefault_disable-levels-in-pagefault_.patch][4.0]]
    [[file:4.1/0001-uaccess-count-pagefault_disable-levels-in-pagefault_.patch][4.1]]
  - 4.4
* [   4.0 -    4.1] mm, uaccess: trigger might_sleep() in might_fault() with disabled pagefaults{C::bug::deadlock::semantics::semantics::add makro to call __might_faults}
  + [[file:4.0/0002-mm-uaccess-trigger-might_sleep-in-might_fault-with-d.patch][4.0]]
    [[file:4.1/0002-mm-uaccess-trigger-might_sleep-in-might_fault-with-d.patch][4.1]]
  - 4.4
* [   4.0 -    4.1] ARM: cmpxchg: define __HAVE_ARCH_CMPXCHG for armv6 and later{C::performance::hardware::add define}
  + [[file:4.0/ARM-cmpxchg-define-__HAVE_ARCH_CMPXCHG-for-armv6-and.patch][4.0]]
    [[file:4.1/ARM-cmpxchg-define-__HAVE_ARCH_CMPXCHG-for-armv6-and.patch][4.1]]
  - 4.4
* [   4.0 -    4.1] mmc: sdhci: don't provide hard irq handler{C::performance::irq::push irq handler into the threaded mode}
  + [[file:4.0/mmc-sdhci-don-t-provide-hard-irq-handler.patch][4.0]]
    [[file:4.1/mmc-sdhci-don-t-provide-hard-irq-handler.patch][4.1]]
  - 4.4
* [   4.0 -    4.1] mm/fault, arch: Use pagefault_disable() to check for disabled pagefaults in the {C::feature::rtsupport::use faulthandler_disable() replaced in_atomic()}
  + [[file:4.0/0006-mm-use-pagefault_disable-to-check-for-disabled-pagef.patch][4.0]]
    [[file:4.1/0006-mm-use-pagefault_disable-to-check-for-disabled-pagef.patch][4.1]]
  - 4.4
* [   4.0 -    4.1] sched/preempt, futex: Disable preemption in UP futex_atomic_op_inuser() explicit{C::feature::rtsupport::add preempt_disable/enable ensure mutual exclusion}
  + [[file:4.0/0008-futex-UP-futex_atomic_op_inuser-relies-on-disabled-p.patch][4.0]]
    [[file:4.1/0008-futex-UP-futex_atomic_op_inuser-relies-on-disabled-p.patch][4.1]]
  - 4.4
* [   4.0 -    4.1] sched/preempt, mm/fault: Decouple preemption from the page fault logic{C::maintain::refactor::remove code}
  + [[file:4.0/0014-uaccess-decouple-preemption-from-the-pagefault-logic.patch][4.0]]
    [[file:4.1/0014-uaccess-decouple-preemption-from-the-pagefault-logic.patch][4.1]]
  - 4.4
* [   4.0 -    4.1] sched/preempt, uaccess: Update comments to clarify that preemption doesn't have {C::maintain::donothing::add comments}
  + [[file:4.0/0003-uaccess-clarify-that-uaccess-may-only-sleep-if-pagef.patch][4.0]]
    [[file:4.1/0003-uaccess-clarify-that-uaccess-may-only-sleep-if-pagef.patch][4.1]]
  - 4.4
* [   4.0 -    4.1] arm64: Allow forced irq threading{C::feature::arch::add IRQ_FORCED_THREADING config in arm64}
  + [[file:4.0/0002-arm64-Allow-forced-irq-threading.patch][4.0]]
    [[file:4.1/0002-arm64-Allow-forced-irq-threading.patch][4.1]]
  - 4.4
* [   4.0 -    4.4] KVM: use simple waitqueue for vcpu->wq {C::performance::preempt::use simple waitqueue for vcpu}
  + [[file:4.0/KVM-use-simple-waitqueue-for-vcpu-wq.patch][4.0]]
  m [[file:4.1/KVM-use-simple-waitqueue-for-vcpu-wq.patch][4.1]]
  M [[file:4.4/KVM-use-simple-waitqueue-for-vcpu-wq.patch][4.4]]
  - 4.6
* [   4.0 -    4.4] block/mq: drop per ctx cpu_lock{C::bug::crash::atomicity::mutex::remove per ctx cpu_lock}
  + [[file:4.0/block-mq-drop-per-ctx-cpu_lock.patch][4.0]]
    [[file:4.1/block-mq-drop-per-ctx-cpu_lock.patch][4.1]]
  M [[file:4.4/block-mq-drop-per-ctx-cpu_lock.patch][4.4]]
  - 4.6
* [   4.0 -   4.11] sunrpc: Make svc_xprt_do_enqueue() use get_cpu_light(){C::bug::deadlock::deadlock::preempt::conver the get_cpu() to get_cpu_light()}
  + [[file:4.0/sunrpc-make-svc_xprt_do_enqueue-use-get_cpu_light.patch][4.0]]
    [[file:4.1/sunrpc-make-svc_xprt_do_enqueue-use-get_cpu_light.patch][4.1]]
    [[file:4.4/sunrpc-make-svc_xprt_do_enqueue-use-get_cpu_light.patch][4.4]]
    [[file:4.6/sunrpc-make-svc_xprt_do_enqueue-use-get_cpu_light.patch][4.6]]
    [[file:4.8/sunrpc-make-svc_xprt_do_enqueue-use-get_cpu_light.patch][4.8]]
    [[file:4.9/sunrpc-make-svc_xprt_do_enqueue-use-get_cpu_light.patch][4.9]]
    [[file:4.11/sunrpc-make-svc_xprt_do_enqueue-use-get_cpu_light.patch][4.11]]
* [   4.0 -   4.11] hotplug: Use set_cpus_allowed_ptr() in sync_unplug_thread(){C::bug::crash::err_access::semantics::rename fun}
  + [[file:4.0/hotplug-Use-set_cpus_allowed_ptr-in-sync_unplug_thre.patch][4.0]]
    [[file:4.1/hotplug-Use-set_cpus_allowed_ptr-in-sync_unplug_thre.patch][4.1]]
    [[file:4.4/hotplug-Use-set_cpus_allowed_ptr-in-sync_unplug_thre.patch][4.4]]
    [[file:4.6/hotplug-Use-set_cpus_allowed_ptr-in-sync_unplug_thre.patch][4.6]]
    [[file:4.8/hotplug-Use-set_cpus_allowed_ptr-in-sync_unplug_thre.patch][4.8]]
    [[file:4.9/hotplug-Use-set_cpus_allowed_ptr-in-sync_unplug_thre.patch][4.9]]
    [[file:4.11/hotplug-Use-set_cpus_allowed_ptr-in-sync_unplug_thre.patch][4.11]]
* [   4.0 -   4.11] cpufreq: drop K8's driver from beeing selected{C::bug::crash::err_var::config::add config}
  + [[file:4.0/cpufreq-drop-K8-s-driver-from-beeing-selected.patch][4.0]]
    [[file:4.1/cpufreq-drop-K8-s-driver-from-beeing-selected.patch][4.1]]
    [[file:4.4/cpufreq-drop-K8-s-driver-from-beeing-selected.patch][4.4]]
    [[file:4.6/cpufreq-drop-K8-s-driver-from-beeing-selected.patch][4.6]]
    [[file:4.8/cpufreq-drop-K8-s-driver-from-beeing-selected.patch][4.8]]
    [[file:4.9/cpufreq-drop-K8-s-driver-from-beeing-selected.patch][4.9]]
    [[file:4.11/cpufreq-drop-K8-s-driver-from-beeing-selected.patch][4.11]]
* [   4.0 -   4.11] slub: Disable SLUB_CPU_PARTIAL{C::bug::deadlock::deadlock::config::add config}
  + [[file:4.0/slub-disable-SLUB_CPU_PARTIAL.patch][4.0]]
    [[file:4.1/slub-disable-SLUB_CPU_PARTIAL.patch][4.1]]
    [[file:4.4/slub-disable-SLUB_CPU_PARTIAL.patch][4.4]]
    [[file:4.6/slub-disable-SLUB_CPU_PARTIAL.patch][4.6]]
    [[file:4.8/slub-disable-SLUB_CPU_PARTIAL.patch][4.8]]
    [[file:4.9/slub-disable-SLUB_CPU_PARTIAL.patch][4.9]]
    [[file:4.11/slub-disable-SLUB_CPU_PARTIAL.patch][4.11]]
* [   4.0 -   4.11] fs/aio: simple simple work{C::bug::deadlock::deadlock::preempt::replace with swork}
  + [[file:4.0/fs-aio-simple-simple-work.patch][4.0]]
  m [[file:4.1/fs-aio-simple-simple-work.patch][4.1]]
    [[file:4.4/fs-aio-simple-simple-work.patch][4.4]]
    [[file:4.6/fs-aio-simple-simple-work.patch][4.6]]
  M [[file:4.8/fs-aio-simple-simple-work.patch][4.8]]
    [[file:4.9/fs-aio-simple-simple-work.patch][4.9]]
  m [[file:4.11/fs-aio-simple-simple-work.patch][4.11]]
* [   4.0 -   4.11] x86: UV: raw_spinlock conversion{C::feature::rtsupport::rename raw spin lock}
  + [[file:4.0/x86-UV-raw_spinlock-conversion.patch][4.0]]
    [[file:4.1/x86-UV-raw_spinlock-conversion.patch][4.1]]
    [[file:4.4/x86-UV-raw_spinlock-conversion.patch][4.4]]
    [[file:4.6/x86-UV-raw_spinlock-conversion.patch][4.6]]
  M [[file:4.8/x86-UV-raw_spinlock-conversion.patch][4.8]]
  m [[file:4.9/x86-UV-raw_spinlock-conversion.patch][4.9]]
  M [[file:4.11/x86-UV-raw_spinlock-conversion.patch][4.11]]
* [   4.0 -   4.11] lockdep: selftest: fix warnings due to missing PREEMPT_RT conditionals{C::bug::compile::compiling_err::config::add ifndef}
  + [[file:4.0/lockdep-selftest-fix-warnings-due-to-missing-PREEMPT.patch][4.0]]
    [[file:4.1/lockdep-selftest-fix-warnings-due-to-missing-PREEMPT.patch][4.1]]
    [[file:4.4/lockdep-selftest-fix-warnings-due-to-missing-PREEMPT.patch][4.4]]
    [[file:4.6/lockdep-selftest-fix-warnings-due-to-missing-PREEMPT.patch][4.6]]
    [[file:4.8/lockdep-selftest-fix-warnings-due-to-missing-PREEMPT.patch][4.8]]
    [[file:4.9/lockdep-selftest-fix-warnings-due-to-missing-PREEMPT.patch][4.9]]
    [[file:4.11/lockdep-selftest-fix-warnings-due-to-missing-PREEMPT.patch][4.11]]
* [   4.0 -   4.11] arch/arm64: Add lazy preempt support{C::feature::arch::add lazy preempt support for arm64}
  + [[file:4.0/arch-arm64-Add-lazy-preempt-support.patch][4.0]]
  M [[file:4.1/arch-arm64-Add-lazy-preempt-support.patch][4.1]]
  m [[file:4.4/arch-arm64-Add-lazy-preempt-support.patch][4.4]]
  m [[file:4.6/arch-arm64-Add-lazy-preempt-support.patch][4.6]]
  M [[file:4.8/arch-arm64-Add-lazy-preempt-support.patch][4.8]]
  M [[file:4.9/arch-arm64-Add-lazy-preempt-support.patch][4.9]]
  M [[file:4.11/arch-arm64-Add-lazy-preempt-support.patch][4.11]]
* [   4.0 -   4.11] sas-ata/isci: dont't disable interrupts in qc_issue handler{C::bug::deadlock::deadlock::irq::use loacl_irq_save_nort() do not disable irq}
  + [[file:4.0/sas-ata-isci-dont-t-disable-interrupts-in-qc_issue-h.patch][4.0]]
    [[file:4.1/sas-ata-isci-dont-t-disable-interrupts-in-qc_issue-h.patch][4.1]]
    [[file:4.4/sas-ata-isci-dont-t-disable-interrupts-in-qc_issue-h.patch][4.4]]
    [[file:4.6/sas-ata-isci-dont-t-disable-interrupts-in-qc_issue-h.patch][4.6]]
    [[file:4.8/sas-ata-isci-dont-t-disable-interrupts-in-qc_issue-h.patch][4.8]]
    [[file:4.9/sas-ata-isci-dont-t-disable-interrupts-in-qc_issue-h.patch][4.9]]
    [[file:4.11/sas-ata-isci-dont-t-disable-interrupts-in-qc_issue-h.patch][4.11]]
* [   4.0 -   4.11] thermal: Defer thermal wakups to threads{C::bug::crash::deadlock::sched::defer thermal wakups}
  + [[file:4.0/thermal-Defer-thermal-wakups-to-threads.patch][4.0]]
  M [[file:4.1/thermal-Defer-thermal-wakups-to-threads.patch][4.1]]
    [[file:4.4/thermal-Defer-thermal-wakups-to-threads.patch][4.4]]
    [[file:4.6/thermal-Defer-thermal-wakups-to-threads.patch][4.6]]
  M [[file:4.8/thermal-Defer-thermal-wakups-to-threads.patch][4.8]]
    [[file:4.9/thermal-Defer-thermal-wakups-to-threads.patch][4.9]]
  M [[file:4.11/thermal-Defer-thermal-wakups-to-threads.patch][4.11]]
* [   4.0 -   4.11] memcontrol: Prevent scheduling while atomic in cgroup code{C::bug::crash::atomicity::migration::replace with get/put_cpu_light()}
  + [[file:4.0/cgroups-scheduling-while-atomic-in-cgroup-code.patch][4.0]]
    [[file:4.1/cgroups-scheduling-while-atomic-in-cgroup-code.patch][4.1]]
    [[file:4.4/cgroups-scheduling-while-atomic-in-cgroup-code.patch][4.4]]
    [[file:4.6/cgroups-scheduling-while-atomic-in-cgroup-code.patch][4.6]]
  M [[file:4.8/cgroups-scheduling-while-atomic-in-cgroup-code.patch][4.8]]
    [[file:4.9/cgroups-scheduling-while-atomic-in-cgroup-code.patch][4.9]]
    [[file:4.11/cgroups-scheduling-while-atomic-in-cgroup-code.patch][4.11]]
* [   4.0 -   4.11] snd/pcm: fix snd_pcm_stream_lock*() irqs_disabled() splats{C::bug::deadlock::deadlock::mutex::replace with nort lock}
  + [[file:4.0/snd-pcm-fix-snd_pcm_stream_lock-irqs_disabled-splats.patch][4.0]]
    [[file:4.1/snd-pcm-fix-snd_pcm_stream_lock-irqs_disabled-splats.patch][4.1]]
    [[file:4.4/snd-pcm-fix-snd_pcm_stream_lock-irqs_disabled-splats.patch][4.4]]
    [[file:4.6/snd-pcm-fix-snd_pcm_stream_lock-irqs_disabled-splats.patch][4.6]]
    [[file:4.8/snd-pcm-fix-snd_pcm_stream_lock-irqs_disabled-splats.patch][4.8]]
    [[file:4.9/snd-pcm-fix-snd_pcm_stream_lock-irqs_disabled-splats.patch][4.9]]
    [[file:4.11/snd-pcm-fix-snd_pcm_stream_lock-irqs_disabled-splats.patch][4.11]]
* [   4.0 -   4.11] ARM: enable irq in translation/section permission fault handlers{C::bug::deadlock::deadlock::irq::enable irq}
  + [[file:4.0/ARM-enable-irq-in-translation-section-permission-fau.patch][4.0]]
    [[file:4.1/ARM-enable-irq-in-translation-section-permission-fau.patch][4.1]]
    [[file:4.4/ARM-enable-irq-in-translation-section-permission-fau.patch][4.4]]
    [[file:4.6/ARM-enable-irq-in-translation-section-permission-fau.patch][4.6]]
    [[file:4.8/ARM-enable-irq-in-translation-section-permission-fau.patch][4.8]]
    [[file:4.9/ARM-enable-irq-in-translation-section-permission-fau.patch][4.9]]
    [[file:4.11/ARM-enable-irq-in-translation-section-permission-fau.patch][4.11]]
* [   4.0 -   4.11] powerpc/kvm: Disable in-kernel MPIC emulation for PREEMPT_RT_FULL{C::bug::irq::irq::config::add !PREEMPT_RT_FULL config}
  + [[file:4.0/powerpc-kvm-Disable-in-kernel-MPIC-emulation-for-PRE.patch][4.0]]
    [[file:4.1/powerpc-kvm-Disable-in-kernel-MPIC-emulation-for-PRE.patch][4.1]]
    [[file:4.4/powerpc-kvm-Disable-in-kernel-MPIC-emulation-for-PRE.patch][4.4]]
    [[file:4.6/powerpc-kvm-Disable-in-kernel-MPIC-emulation-for-PRE.patch][4.6]]
    [[file:4.8/powerpc-kvm-Disable-in-kernel-MPIC-emulation-for-PRE.patch][4.8]]
    [[file:4.9/powerpc-kvm-Disable-in-kernel-MPIC-emulation-for-PRE.patch][4.9]]
    [[file:4.11/powerpc-kvm-Disable-in-kernel-MPIC-emulation-for-PRE.patch][4.11]]
* [   4.0 -   4.11] x86/mce: use swait queue for mce wakeups{C::bug::deadlock::deadlock::preempt::use swait queue for mce}
  + [[file:4.0/x86-mce-use-swait-queue-for-mce-wakeups.patch][4.0]]
    [[file:4.1/x86-mce-use-swait-queue-for-mce-wakeups.patch][4.1]]
    [[file:4.4/x86-mce-use-swait-queue-for-mce-wakeups.patch][4.4]]
    [[file:4.6/x86-mce-use-swait-queue-for-mce-wakeups.patch][4.6]]
  M [[file:4.8/x86-mce-use-swait-queue-for-mce-wakeups.patch][4.8]]
  m [[file:4.9/x86-mce-use-swait-queue-for-mce-wakeups.patch][4.9]]
  m [[file:4.11/x86-mce-use-swait-queue-for-mce-wakeups.patch][4.11]]
* [   4.0 -   4.11] KVM: lapic: mark LAPIC timer handler as irqsafe{C::performance::hrtimer::lapic timer handler}
  + [[file:4.0/KVM-lapic-mark-LAPIC-timer-handler-as-irqsafe.patch][4.0]]
    [[file:4.1/KVM-lapic-mark-LAPIC-timer-handler-as-irqsafe.patch][4.1]]
  M [[file:4.4/KVM-lapic-mark-LAPIC-timer-handler-as-irqsafe.patch][4.4]]
  m [[file:4.6/KVM-lapic-mark-LAPIC-timer-handler-as-irqsafe.patch][4.6]]
    [[file:4.8/KVM-lapic-mark-LAPIC-timer-handler-as-irqsafe.patch][4.8]]
    [[file:4.9/KVM-lapic-mark-LAPIC-timer-handler-as-irqsafe.patch][4.9]]
    [[file:4.11/KVM-lapic-mark-LAPIC-timer-handler-as-irqsafe.patch][4.11]]
* [   4.0 -   4.11] sched/deadline: dl_task_timer has to be irqsafe{C::feature::timer::add init timer->irqsafe}
  + [[file:4.0/sched-deadline-dl_task_timer-has-to-be-irqsafe.patch][4.0]] 
    [[file:4.1/sched-deadline-dl_task_timer-has-to-be-irqsafe.patch][4.1]]
    [[file:4.4/sched-deadline-dl_task_timer-has-to-be-irqsafe.patch][4.4]]
    [[file:4.6/sched-deadline-dl_task_timer-has-to-be-irqsafe.patch][4.6]]
    [[file:4.8/sched-deadline-dl_task_timer-has-to-be-irqsafe.patch][4.8]]
    [[file:4.9/sched-deadline-dl_task_timer-has-to-be-irqsafe.patch][4.9]]
  m [[file:4.11/sched-deadline-dl_task_timer-has-to-be-irqsafe.patch][4.11]]
* [   4.1         ] futex: Implement lockless wakeups{C::feature::lockless::implement lockless wakeups}
  + [[file:4.1/0002-futex-Implement-lockless-wakeups.patch][4.1]]
  - 4.4
* [   4.1         ] sched: Implement lockless wake-queues{C::feature::lockless::add new wake_list to delay the futex wakeups}
  + [[file:4.1/0001-sched-Implement-lockless-wake-queues.patch][4.1]]
  - 4.4
* [   4.1         ] futex: avoid double wake up in PI futex wait / wake on -RT{C::performance::mutex::avoid double wake up}
  + [[file:4.1/futex-avoid-double-wake-up-in-PI-futex-wait-wake-on-.patch][4.1]]
  - 4.4
* [   4.1         ] mm/slub: move slab initialization into irq enabled region{C::performance::mm::move slab initialization into irq enabled region}
  + [[file:4.1/mm-slub-move-slab-initialization-into-irq-enabled-region.patch][4.1]]
  - 4.4
* [   4.1         ] ASoC: Intel: sst: use ; instead of , at the of a C statement{C::maintain::donothing}
  + [[file:4.1/ASoC-Intel-sst-use-instead-of-at-the-of-a-C-statemen.patch][4.1]]
  - 4.4
* [   4.1         ] ipc/mqueue: Implement lockless pipelined wakeups{C::feature::lockless::lockless pipelined wakeup}
  + [[file:4.1/0004-ipc-mqueue-Implement-lockless-pipelined-wakeups.patch][4.1]]
  - 4.4
* [   4.1 -   4.11] Intrduce migrate_disable() + cpu_light(){C::feature::rtsupport::add preemptible region}
  + [[file:4.1/introduce_migrate_disable_cpu_light.patch][4.1]]
  M [[file:4.4/introduce_migrate_disable_cpu_light.patch][4.4]]
  M [[file:4.6/introduce_migrate_disable_cpu_light.patch][4.6]]
  m [[file:4.8/introduce_migrate_disable_cpu_light.patch][4.8]]
  m [[file:4.9/introduce_migrate_disable_cpu_light.patch][4.9]]
    [[file:4.11/introduce_migrate_disable_cpu_light.patch][4.11]]
* [   4.1 -   4.11] i915: bogus warning from i915 when running on PREEMPT_RT{C::feature::debuginfo::remove warnning}
  + [[file:4.1/i915-bogus-warning-from-i915-when-running-on-PREEMPT.patch][4.1]]
  m [[file:4.4/i915-bogus-warning-from-i915-when-running-on-PREEMPT.patch][4.4]]
    [[file:4.6/i915-bogus-warning-from-i915-when-running-on-PREEMPT.patch][4.6]]
  m [[file:4.8/i915-bogus-warning-from-i915-when-running-on-PREEMPT.patch][4.8]]
    [[file:4.9/i915-bogus-warning-from-i915-when-running-on-PREEMPT.patch][4.9]]
  m [[file:4.11/i915-bogus-warning-from-i915-when-running-on-PREEMPT.patch][4.11]]
* [   4.1 -   4.11] irqwork: push most work into softirq context{C::bug::irq::irq::irq::add IRQ_WORK_HARD_IRQ,and push most work into softirq context}
  + [[file:4.1/irqwork-push_most_work_into_softirq_context.patch][4.1]]
  m [[file:4.4/irqwork-push_most_work_into_softirq_context.patch][4.4]]
  M [[file:4.6/irqwork-push_most_work_into_softirq_context.patch][4.6]]
  m [[file:4.8/irqwork-push_most_work_into_softirq_context.patch][4.8]]
    [[file:4.9/irqwork-push_most_work_into_softirq_context.patch][4.9]]
    [[file:4.11/irqwork-push_most_work_into_softirq_context.patch][4.11]]
* [   4.1 -   4.11] powerpc: ps3/device-init.c - adapt to completions using swait vs wait{C::bug::compile::compiling_err::syntax::using swait}
  + [[file:4.1/powerpc-ps3-device-init.c-adapt-to-completions-using.patch][4.1]]
    [[file:4.4/powerpc-ps3-device-init.c-adapt-to-completions-using.patch][4.4]]
    [[file:4.6/powerpc-ps3-device-init.c-adapt-to-completions-using.patch][4.6]]
    [[file:4.8/powerpc-ps3-device-init.c-adapt-to-completions-using.patch][4.8]]
    [[file:4.9/powerpc-ps3-device-init.c-adapt-to-completions-using.patch][4.9]]
    [[file:4.11/powerpc-ps3-device-init.c-adapt-to-completions-using.patch][4.11]]
* [   4.4         ] ARM: OMAP2: Drop the concept of certain power domains not being able to lose context {C::feature::hardware::drop the concept of some power domains code}
  + [[file:4.4/0009-ARM-OMAP2-Drop-the-concept-of-certain-power-domains-.patch][4.4]]
  - 4.6
* [   4.4         ] mm/rmap: retry lock check in anon_vma_free(){C::feature::check::add retry lock check , msleep()}
  + [[file:4.4/mm-rmap-retry-lock-check-in-anon_vma_free.patch_vma_free.patch][4.4]]
  - 4.6
* [   4.4 -    4.6] rtmutex: Use chainwalking control enum{C::bug::compile::compiling_err::semantics::add RT_MUTEX_MIN_CHAINWALK parameter to enable chainwalking control enum }
  + [[file:4.4/rtmutex-Use-chainwalking-control-enum.patch][4.4]]
  m [[file:4.6/rtmutex-Use-chainwalking-control-enum.patch][4.6]]
  - 4.8
* [   4.4 -    4.8] ipc/msg: Implement lockless pipelined wakeups{C::feature::lockless::lockless pipelined wakeups}
  + [[file:4.4/ipc-msg-Implement-lockless-pipelined-wakeups.patch][4.4]]
    [[file:4.6/ipc-msg-Implement-lockless-pipelined-wakeups.patch][4.6]]
    [[file:4.8/ipc-msg-Implement-lockless-pipelined-wakeups.patch][4.8]]
  - 4.9
* [   4.4 -    4.8] dump stack: don't disable preemption during trace{C::performance::preempt::Increase the preemptive region}
  + [[file:4.4/dump-stack-don-t-disable-preemption-during-trace.patch][4.4]]
  M [[file:4.6/dump-stack-don-t-disable-preemption-during-trace.patch][4.6]]
  m [[file:4.8/dump-stack-don-t-disable-preemption-during-trace.patch][4.8]]
  - 4.9
* [   4.4 -   4.11] arm64/xen: Make XEN depend on !RT{C::feature::arch::add !PREEMPT_RT_FULL config}
  + [[file:4.4/arm64-xen--Make-XEN-depend-on-non-rt.patch][4.4]]
  m [[file:4.6/arm64-xen--Make-XEN-depend-on-non-rt.patch][4.6]]
    [[file:4.8/arm64-xen--Make-XEN-depend-on-non-rt.patch][4.8]]
    [[file:4.9/arm64-xen--Make-XEN-depend-on-non-rt.patch][4.9]]
    [[file:4.11/arm64-xen--Make-XEN-depend-on-non-rt.patch][4.11]]
* [   4.4 -   4.11] latency_hist: Update sched_wakeup probe{C::maintain::refactor::remove success argument}
  + [[file:4.4/latency_hist-update-sched_wakeup-probe.patch][4.4]]
    [[file:4.6/latency_hist-update-sched_wakeup-probe.patch][4.6]]
    [[file:4.8/latency_hist-update-sched_wakeup-probe.patch][4.8]]
    [[file:4.9/latency_hist-update-sched_wakeup-probe.patch][4.9]]
    [[file:4.11/latency_hist-update-sched_wakeup-probe.patch][4.11]]
* [   4.4 -   4.11] locking: locktorture: Do NOT include rwlock.h directly{C::bug::compile::compiling_err::syntax::remove header file}
  + [[file:4.4/locking-locktorture-Do-NOT-include-rwlock.h-directly.patch][4.4]]
    [[file:4.6/locking-locktorture-Do-NOT-include-rwlock.h-directly.patch][4.6]]
    [[file:4.8/locking-locktorture-Do-NOT-include-rwlock.h-directly.patch][4.8]]
    [[file:4.9/locking-locktorture-Do-NOT-include-rwlock.h-directly.patch][4.9]]
    [[file:4.11/locking-locktorture-Do-NOT-include-rwlock.h-directly.patch][4.11]]
* [   4.4 -   4.11] ARM: smp: Move clear_tasks_mm_cpumask() call to __cpu_die(){C::bug::deadlock::deadlock::semantics::Move clear_tasks_mm_cpumask() call to __cpu_die()}
  + [[file:4.4/rfc-arm-smp-__cpu_disable-fix-sleeping-function-called-from-invalid-context.patch][4.4]]
    [[file:4.6/rfc-arm-smp-__cpu_disable-fix-sleeping-function-called-from-invalid-context.patch][4.6]]
    [[file:4.8/rfc-arm-smp-__cpu_disable-fix-sleeping-function-called-from-invalid-context.patch][4.8]]
    [[file:4.9/rfc-arm-smp-__cpu_disable-fix-sleeping-function-called-from-invalid-context.patch][4.9]]
  m [[file:4.11/rfc-arm-smp-__cpu_disable-fix-sleeping-function-called-from-invalid-context.patch][4.11]]
* [   4.4 -   4.11] hrtimer: enfore 64byte alignment{C::maintain::refactor::enfore 64byte alignment}
  + [[file:4.4/hrtimer-enfore-64byte-alignment.patch][4.4]]
    [[file:4.6/hrtimer-enfore-64byte-alignment.patch][4.6]]
    [[file:4.8/hrtimer-enfore-64byte-alignment.patch][4.8]]
    [[file:4.9/hrtimer-enfore-64byte-alignment.patch][4.9]]
    [[file:4.11/hrtimer-enfore-64byte-alignment.patch][4.11]]
* [   4.4 -   4.11] rtmutex: trylock is okay on -RT{C::bug::deadlock::softirq::softirq::add #ifdef avoidding deadlock}
  + [[file:4.4/rtmutex-trylock-is-okay-on-RT.patch][4.4]]
    [[file:4.6/rtmutex-trylock-is-okay-on-RT.patch][4.6]]
  M [[file:4.8/rtmutex-trylock-is-okay-on-RT.patch][4.8]]
    [[file:4.9/rtmutex-trylock-is-okay-on-RT.patch][4.9]]
    [[file:4.11/rtmutex-trylock-is-okay-on-RT.patch][4.11]]
* [   4.4 -   4.11] pid.h: include atomic.h{C::bug::compile::compiling_err::semantics::add header file}
  + [[file:4.4/pid.h-include-atomic.h.patch][4.4]]
    [[file:4.6/pid.h-include-atomic.h.patch][4.6]]
    [[file:4.8/pid.h-include-atomic.h.patch][4.8]]
    [[file:4.9/pid.h-include-atomic.h.patch][4.9]]
  m [[file:4.11/pid.h-include-atomic.h.patch][4.11]]
* [   4.4 -   4.11] net/core/cpuhotplug: Drain input_pkt_queue lockless{C::bug::crash::uninit_var::memory::replace related function}
  + [[file:4.4/net-core-cpuhotplug-drain-input_pkt_queue-lockless.patch][4.4]]
    [[file:4.6/net-core-cpuhotplug-drain-input_pkt_queue-lockless.patch][4.6]]
    [[file:4.8/net-core-cpuhotplug-drain-input_pkt_queue-lockless.patch][4.8]]
    [[file:4.9/net-core-cpuhotplug-drain-input_pkt_queue-lockless.patch][4.9]]
    [[file:4.11/net-core-cpuhotplug-drain-input_pkt_queue-lockless.patch][4.11]]
* [   4.4 -   4.11] irqwork: Move irq safe work to irq context{C::bug::deadlock::irq::irq::Move irq safe work to irq context}
  + [[file:4.4/irqwork-Move-irq-safe-work-to-irq-context.patch][4.4]]
    [[file:4.6/irqwork-Move-irq-safe-work-to-irq-context.patch][4.6]]
  m [[file:4.8/irqwork-Move-irq-safe-work-to-irq-context.patch][4.8]]
    [[file:4.9/irqwork-Move-irq-safe-work-to-irq-context.patch][4.9]]
    [[file:4.11/irqwork-Move-irq-safe-work-to-irq-context.patch][4.11]]
* [   4.4 -   4.11] x86/signal: delay calling signals on 32bit{C::bug::deadlock::semantics::semantics::remove compiling condition}
  + [[file:4.4/x86-signal-delay-calling-signals-on-32bit.patch][4.4]]
    [[file:4.6/x86-signal-delay-calling-signals-on-32bit.patch][4.6]]
    [[file:4.8/x86-signal-delay-calling-signals-on-32bit.patch][4.8]]
    [[file:4.9/x86-signal-delay-calling-signals-on-32bit.patch][4.9]]
    [[file:4.11/x86-signal-delay-calling-signals-on-32bit.patch][4.11]]
* [   4.4 -   4.11] rbtree: don't include the rcu header{C::bug::compile::compiling_err::syntax::move RCU header from header file into c file}
  + [[file:4.4/rtmutex_dont_include_rcu.patch][4.4]]
    [[file:4.6/rtmutex_dont_include_rcu.patch][4.6]]
  M [[file:4.8/rtmutex_dont_include_rcu.patch][4.8]]
    [[file:4.9/rtmutex_dont_include_rcu.patch][4.9]]
    [[file:4.11/rtmutex_dont_include_rcu.patch][4.11]]
* [   4.6         ] sched: use tsk_cpus_allowed() instead of accessing ->cpus_allowed{C::maintain::refactor::use tsk_cpus_allowed() instead of cpus_allowed()}
  + [[file:4.6/sched-use-tsk_cpus_allowed-instead-of-accessing-cpus.patch][4.6]]
  - 4.8
* [   4.6         ] ARM: imx: always use TWD on IMX6Q{C::feature::hardware::add config to support TWD for UP of imx  }
  + [[file:4.6/ARM-imx-always-use-TWD-on-IMX6Q.patch][4.6]]
  - 4.8
* [   4.6         ] crypto/ccp: remove rwlocks_types.h{C::maintain::refactor::remove rwlocks_types.h}
  + [[file:4.6/crypto-ccp-remove-rwlocks_types.h.patch][4.6]]
  - 4.8
* [   4.6         ] infiniband/ulp/ipoib: remove pkey_mutex{C::maintain::refactor::remove pkey_mutex}
  + [[file:4.6/infiniband-ulp-ipoib-remove-pkey_mutex.patch][4.6]]
  - 4.8
* [   4.6         ] rcu: disable more spots of rcu_bh{C::performance::smallsize::add #ifndef to teduce unnecessary code compile}
  + [[file:4.6/rcu-disable-more-spots-of-rcu_bh.patch][4.6]]
  - 4.8
* [   4.6         ] arm+arm64: lazy-preempt: add TIF_NEED_RESCHED_LAZY to _TIF_WORK_MASK{C::feature::check::add TIF_NEED_RESCHED_LAZY to _TIF_WORK_MASK for check}
  + [[file:4.6/arm-arm64-lazy-preempt-add-TIF_NEED_RESCHED_LAZY-to-.patch][4.6]]
  - 4.8
* [   4.6         ] preempt-lazy: Add the lazy-preemption check to preempt_schedule(){C::feature::check::Add the lazy-preemption check to preempt_schedule()}
  + [[file:4.6/preempt-lazy-check-preempt_schedule.patch][4.6]]
  - 4.8
* [   4.6         ] sched: provide a tsk_nr_cpus_allowed() helper{C::maintain::refactor::make task->nr_cpus_allowed encapsulated function }
  + [[file:4.6/sched-provide-a-tsk_nr_cpus_allowed-helper.patch][4.6]]
  - 4.8
* [   4.6         ] rcu/torture: Comment out rcu_bh ops on PREEMPT_RT_FULL{C::performance::smallsize::add #ifndef to not compiling rcu_bh on PREEMPT_RT_FULL}
  + [[file:4.6/rcutorture-comment-out-rcu_bh-ops-on-PREEMPT_RT_FULL.patch][4.6]]
  - 4.8
* [   4.6         ] rtmutex: push down migrate_disable() into rt_spin_lock(){C::performance::smallsize::push down migrate_disable() into rt_spin_lock() to save text size}
  + [[file:4.6/rtmutex-push-down-migrate_disable-into-rt_spin_lock.patch][4.6]]
  - 4.8
* [   4.6 -    4.8] locking/lglocks: Use preempt_enable/disable_nort() in lg_double_[un]lock{C::feature::rtsupport::replace with _nort()}
  + [[file:4.6/lockinglglocks_Use_preempt_enabledisable_nort()_in_lg_double_locklg_double_unlock.patch][4.6]]
    [[file:4.8/lockinglglocks_Use_preempt_enabledisable_nort.patch][4.8]]
  - 4.9
* [   4.6 -    4.8] mm/zsmalloc: Use get/put_cpu_light in zs_map_object()/zs_unmap_object(){C::performance::preempt::Use get/put_cpu_light }
  + [[file:4.6/mm-zsmalloc-Use-get-put_cpu_light-in-zs_map_object-z.patch][4.6]]
  M [[file:4.8/mm-zsmalloc-Use-get-put_cpu_light-in-zs_map_object-z.patch][4.8]]
  - 4.9
* [   4.6 -    4.8] net: Make synchronize_rcu_expedited() conditional on !RT_FULL{C::performance::preempt::forbid synchronize_rcu_expedited() on RT_FULL}
  + [[file:4.6/net__Make_synchronize-rcu_expedited_conditional-on-non-rt.patch][4.6]]
    [[file:4.8/net__Make_synchronize-rcu_expedited_conditional-on-non-rt.patch][4.8]]
  - 4.9
* [   4.6 -   4.11] mm: rt: Fix generic kmap_atomic for RT{C::bug::deadlock::deadlock::preempt::got converted to the _nort() variant}
  + [[file:4.6/mm--rt--Fix-generic-kmap_atomic-for-RT.patch][4.6]]
    [[file:4.8/mm--rt--Fix-generic-kmap_atomic-for-RT.patch][4.8]]
    [[file:4.9/mm--rt--Fix-generic-kmap_atomic-for-RT.patch][4.9]]
    [[file:4.11/mm--rt--Fix-generic-kmap_atomic-for-RT.patch][4.11]]
* [   4.6 -   4.11] net/core: protect users of napi_alloc_cache against reentrance{C::bug::leak::atomicity::mutex::uses a local lock}
  + [[file:4.6/net-core-protect-users-of-napi_alloc_cache-against-r.patch][4.6]]
    [[file:4.8/net-core-protect-users-of-napi_alloc_cache-against-r.patch][4.8]]
    [[file:4.9/net-core-protect-users-of-napi_alloc_cache-against-r.patch][4.9]]
  M [[file:4.11/net-core-protect-users-of-napi_alloc_cache-against-r.patch][4.11]]
* [   4.6 -   4.11] rt/locking: Reenable migration accross schedule{C::feature::sched::Reenable migration accross schedule}
  + [[file:4.6/rt-locking-Reenable-migration-accross-schedule.patch][4.6]]
  m [[file:4.8/rt-locking-Reenable-migration-accross-schedule.patch][4.8]]
    [[file:4.9/rt-locking-Reenable-migration-accross-schedule.patch][4.9]]
  m [[file:4.11/rt-locking-Reenable-migration-accross-schedule.patch][4.11]]
* [   4.6 -   4.11] net: move xmit_recursion to per-task variable on -RT{C::bug::data_err::err_var::memory::moves the counter to per task instead xmit_recursion}
  + [[file:4.6/net-move-xmit_recursion-to-per-task-variable-on-RT.patch][4.6]]
  M [[file:4.8/net-move-xmit_recursion-to-per-task-variable-on-RT.patch][4.8]]
    [[file:4.9/net-move-xmit_recursion-to-per-task-variable-on-RT.patch][4.9]]
  M [[file:4.11/net-move-xmit_recursion-to-per-task-variable-on-RT.patch][4.11]]
* [   4.6 -   4.11] iommu/amd: Use WARN_ON_NORT in __attach_device(){C::feature::debuginfo::use WARN_ON_NONRT() to remove warning}
  + [[file:4.6/iommu-amd--Use-WARN_ON_NORT.patch][4.6]]
    [[file:4.8/iommu-amd--Use-WARN_ON_NORT.patch][4.8]]
    [[file:4.9/iommu-amd--Use-WARN_ON_NORT.patch][4.9]]
    [[file:4.11/iommu-amd--Use-WARN_ON_NORT.patch][4.11]]
* [   4.6 -   4.11] tick/broadcast: Make broadcast hrtimer irqsafe{C::bug::irq::irq::irq::init bctimer.irqsafe}
  + [[file:4.6/tick-broadcast--Make-hrtimer-irqsafe.patch][4.6]]
    [[file:4.8/tick-broadcast--Make-hrtimer-irqsafe.patch][4.8]]
    [[file:4.9/tick-broadcast--Make-hrtimer-irqsafe.patch][4.9]]
    [[file:4.11/tick-broadcast--Make-hrtimer-irqsafe.patch][4.11]]
* [   4.6 -   4.11] rtmutex: Handle non enqueued waiters gracefully{C::bug::corrupt::semantics::mutex::add and change if_condition}
  + [[file:4.6/rtmutex--Handle-non-enqueued-waiters-gracefully.patch][4.6]]
    [[file:4.8/rtmutex--Handle-non-enqueued-waiters-gracefully.patch][4.8]]
    [[file:4.9/rtmutex--Handle-non-enqueued-waiters-gracefully.patch][4.9]]
  m [[file:4.11/rtmutex--Handle-non-enqueued-waiters-gracefully.patch][4.11]]
* [   4.6 -   4.11] KVM: arm/arm64: downgrade preempt_disable()d region to migrate_disable(){C::performance::preempt::add preemptible region}
  + [[file:4.6/KVM-arm-arm64-downgrade-preempt_disable-d-region-to-.patch][4.6]]
    [[file:4.8/KVM-arm-arm64-downgrade-preempt_disable-d-region-to-.patch][4.8]]
    [[file:4.9/KVM-arm-arm64-downgrade-preempt_disable-d-region-to-.patch][4.9]]
    [[file:4.11/KVM-arm-arm64-downgrade-preempt_disable-d-region-to-.patch][4.11]]
* [   4.6 -   4.11] drm,i915: Use local_lock/unlock_irq() in intel_pipe_update_start/end(){C::bug::deadlock::deadlock::irq::replace local_irq_enable with local_unlock_irq()}
  + [[file:4.6/drmi915_Use_local_lockunlock_irq()_in_intel_pipe_update_startend().patch][4.6]]
  m [[file:4.8/drmi915_Use_local_lockunlock_irq()_in_intel_pipe_update_startend().patch][4.8]]
  m [[file:4.9/drmi915_Use_local_lockunlock_irq()_in_intel_pipe_update_startend().patch][4.9]]
    [[file:4.11/drmi915_Use_local_lockunlock_irq()_in_intel_pipe_update_startend().patch][4.11]]
* [   4.6 -    4.9] sc16is7xx: Drop bogus use of IRQF_ONESHOT{C::bug::deadlock::deadlock::irq::remove IRQF_ONESHOT parameter}
  + [[file:4.6/sc16is7xx_Drop_bogus_use_of_IRQF_ONESHOT.patch][4.6]]
    [[file:4.8/sc16is7xx_Drop_bogus_use_of_IRQF_ONESHOT.patch][4.8]]
    [[file:4.9/sc16is7xx_Drop_bogus_use_of_IRQF_ONESHOT.patch][4.9]]
  - 4.11
* [   4.6 -   4.11] ptrace: don't open IRQs in ptrace_freeze_traced() too early{C::bug::crash::irq::irq::add flags parameter to delayed opening interrupt}
  + [[file:4.6/ptrace-don-t-open-IRQs-in-ptrace_freeze_traced-too-e.patch][4.6]]
    [[file:4.8/ptrace-don-t-open-IRQs-in-ptrace_freeze_traced-too-e.patch][4.8]]
    [[file:4.9/ptrace-don-t-open-IRQs-in-ptrace_freeze_traced-too-e.patch][4.9]]
    [[file:4.11/ptrace-don-t-open-IRQs-in-ptrace_freeze_traced-too-e.patch][4.11]]
* [   4.6 -   4.11] clockevents/drivers/timer-atmel-pit: fix double free_irq{C::bug::irq::irq::irq::add execution condition}
  + [[file:4.6/clockevents-drivers-timer-atmel-pit-fix-double-free_.patch][4.6]]
    [[file:4.8/clockevents-drivers-timer-atmel-pit-fix-double-free_.patch][4.8]]
    [[file:4.9/clockevents-drivers-timer-atmel-pit-fix-double-free_.patch][4.9]]
    [[file:4.11/clockevents-drivers-timer-atmel-pit-fix-double-free_.patch][4.11]]
* [   4.6 -   4.11] list_bl: fixup bogus lockdep warning{C::bug::deadlock::compiling_err::syntax::static inline -> macro}
  + [[file:4.6/list_bl-fixup-bogus-lockdep-warning.patch][4.6]]
    [[file:4.8/list_bl-fixup-bogus-lockdep-warning.patch][4.8]]
    [[file:4.9/list_bl-fixup-bogus-lockdep-warning.patch][4.9]]
    [[file:4.11/list_bl-fixup-bogus-lockdep-warning.patch][4.11]]
* [   4.6 -   4.11] trace/latency-hist: Consider new argument when probing the sched_switch tracer{C::feature::sched::add argument }
  + [[file:4.6/trace-latency-hist-Consider-new-argument-when-probin.patch][4.6]]
    [[file:4.8/trace-latency-hist-Consider-new-argument-when-probin.patch][4.8]]
    [[file:4.9/trace-latency-hist-Consider-new-argument-when-probin.patch][4.9]]
    [[file:4.11/trace-latency-hist-Consider-new-argument-when-probin.patch][4.11]]
* [   4.6 -   4.11] kernel: softirq: unlock with irqs on{C::bug::irq::migration::irq::add local_irq_enable/disable pairs for symmetrical status of interrupt}
  + [[file:4.6/kernel-softirq-unlock-with-irqs-on.patch][4.6]]
    [[file:4.8/kernel-softirq-unlock-with-irqs-on.patch][4.8]]
    [[file:4.9/kernel-softirq-unlock-with-irqs-on.patch][4.9]]
    [[file:4.11/kernel-softirq-unlock-with-irqs-on.patch][4.11]]
* [   4.6 -   4.11] drivers/block/zram: Replace bit spinlocks with rtmutex for -rt{C::bug::deadlock::deadlock::mutex::Replace bit spinlocks with rtmutex }
  + [[file:4.6/drivers-block-zram-Replace-bit-spinlocks-with-rtmute.patch][4.6]]
  m [[file:4.8/drivers-block-zram-Replace-bit-spinlocks-with-rtmute.patch][4.8]]
    [[file:4.9/drivers-block-zram-Replace-bit-spinlocks-with-rtmute.patch][4.9]]
  m [[file:4.11/drivers-block-zram-Replace-bit-spinlocks-with-rtmute.patch][4.11]]
* [   4.6 -   4.11] mm: backing-dev: don't disable IRQs in wb_congested_put(){C::bug::deadlock::deadlock::irq::repalce local_irq_save() with its variant _nort()}
  + [[file:4.6/mm-backing-dev-don-t-disable-IRQs-in-wb_congested_pu.patch][4.6]]
    [[file:4.8/mm-backing-dev-don-t-disable-IRQs-in-wb_congested_pu.patch][4.8]]
    [[file:4.9/mm-backing-dev-don-t-disable-IRQs-in-wb_congested_pu.patch][4.9]]
    [[file:4.11/mm-backing-dev-don-t-disable-IRQs-in-wb_congested_pu.patch][4.11]]
* [   4.6 -   4.11] trace: Use rcuidle version for preemptoff_hist trace point{C::bug::crash::atomicity::semantics::replace trace_preempt_off to rcuidle}
  + [[file:4.6/trace_Use_rcuidle_version_for_preemptoff_hist_trace_point.patch][4.6]]
    [[file:4.8/trace_Use_rcuidle_version_for_preemptoff_hist_trace_point.patch][4.8]]
    [[file:4.9/trace_Use_rcuidle_version_for_preemptoff_hist_trace_point.patch][4.9]]
    [[file:4.11/trace_Use_rcuidle_version_for_preemptoff_hist_trace_point.patch][4.11]]
* [   4.6 -   4.11] net: dev: always take qdisc's busylock in __dev_xmit_skb(){C::bug::hang::atomicity::mutex::take busylock}
  + [[file:4.6/net-dev-always-take-qdisc-s-busylock-in-__dev_xmit_s.patch][4.6]]
  m [[file:4.8/net-dev-always-take-qdisc-s-busylock-in-__dev_xmit_s.patch][4.8]]
    [[file:4.9/net-dev-always-take-qdisc-s-busylock-in-__dev_xmit_s.patch][4.9]]
    [[file:4.11/net-dev-always-take-qdisc-s-busylock-in-__dev_xmit_s.patch][4.11]]
* [   4.6 -   4.11] genirq: update irq_set_irqchip_state documentation{C::maintain::donothing::add comment}
  + [[file:4.6/genirq-update-irq_set_irqchip_state-documentation.patch][4.6]]
    [[file:4.8/genirq-update-irq_set_irqchip_state-documentation.patch][4.8]]
    [[file:4.9/genirq-update-irq_set_irqchip_state-documentation.patch][4.9]]
    [[file:4.11/genirq-update-irq_set_irqchip_state-documentation.patch][4.11]]
* [   4.6 -   4.11] arm: at91: do not disable/enable clocks in a row{C::feature::timer::do not disable/enable clock in a row}
  + [[file:4.6/at91_dont_enable_disable_clock.patch][4.6]]
    [[file:4.8/at91_dont_enable_disable_clock.patch][4.8]]
    [[file:4.9/at91_dont_enable_disable_clock.patch][4.9]]
    [[file:4.11/at91_dont_enable_disable_clock.patch][4.11]]
* [   4.6 -   4.11] net: provide a way to delegate processing a softirq to ksoftirqd{C::feature::rtsupport::provide a way raises the softirq in the ksoftird}
  + [[file:4.6/net-provide-a-way-to-delegate-processing-a-softirq-t.patch][4.6]]
    [[file:4.8/net-provide-a-way-to-delegate-processing-a-softirq-t.patch][4.8]]
    [[file:4.9/net-provide-a-way-to-delegate-processing-a-softirq-t.patch][4.9]]
  m [[file:4.11/net-provide-a-way-to-delegate-processing-a-softirq-t.patch][4.11]]
* [   4.6 -   4.11] latencyhist: disable jump-labels{C::bug::deadlock::config_err::config::add config}
  + [[file:4.6/latencyhist-disable-jump-labels.patch][4.6]]
    [[file:4.8/latencyhist-disable-jump-labels.patch][4.8]]
    [[file:4.9/latencyhist-disable-jump-labels.patch][4.9]]
    [[file:4.11/latencyhist-disable-jump-labels.patch][4.11]]
* [   4.6 -    4.9] kernel: migrate_disable() do fastpath in atomic & irqs-off{C::performance::irq::add irq_disable() condition for migrate_disable()}
  + [[file:4.6/kernel-migrate_disable-do-fastpath-in-atomic-irqs-of.patch][4.6]]
    [[file:4.8/kernel-migrate_disable-do-fastpath-in-atomic-irqs-of.patch][4.8]]
    [[file:4.9/kernel-migrate_disable-do-fastpath-in-atomic-irqs-of.patch][4.9]]
  - 4.11
* [   4.6 -   4.11] tty: serial: 8250: don't take the trylock during oops{C::feature::debuginfo::skip the trylock in the oops case}
  + [[file:4.6/tty-serial-8250-don-t-take-the-trylock-during-oops.patch][4.6]]
    [[file:4.8/tty-serial-8250-don-t-take-the-trylock-during-oops.patch][4.8]]
    [[file:4.9/tty-serial-8250-don-t-take-the-trylock-during-oops.patch][4.9]]
    [[file:4.11/tty-serial-8250-don-t-take-the-trylock-during-oops.patch][4.11]]
* [   4.6 -   4.11] softirq: split timer softirqs out of ksoftirqd{C::bug::crash::softirq::softirq::split timer softirqs out of ksoftirqd}
  + [[file:4.6/softirq-split-timer-softirqs-out-of-ksoftirqd.patch][4.6]]
    [[file:4.8/softirq-split-timer-softirqs-out-of-ksoftirqd.patch][4.8]]
  M [[file:4.9/softirq-split-timer-softirqs-out-of-ksoftirqd.patch][4.9]]
    [[file:4.11/softirq-split-timer-softirqs-out-of-ksoftirqd.patch][4.11]]
* [   4.6 -   4.11] kernel/perf: mark perf_cpu_context's timer as irqsafe{C::bug::crash::irq::irq::set irqsafe to remove warning info}
  + [[file:4.6/kernel-perf-mark-perf_cpu_context-s-timer-as-irqsafe.patch][4.6]]
    [[file:4.8/kernel-perf-mark-perf_cpu_context-s-timer-as-irqsafe.patch][4.8]]
    [[file:4.9/kernel-perf-mark-perf_cpu_context-s-timer-as-irqsafe.patch][4.9]]
    [[file:4.11/kernel-perf-mark-perf_cpu_context-s-timer-as-irqsafe.patch][4.11]]
* [   4.6 -   4.11] drm,radeon,i915: Use preempt_disable/enable_rt() where recommended{}{C::bug::deadlock::preempt::preempt::add preempt_disable/enable_rt() where recommended}
  + [[file:4.6/drmradeoni915_Use_preempt_disableenable_rt()_where_recommended.patch][4.6]]
    [[file:4.8/drmradeoni915_Use_preempt_disableenable_rt()_where_recommended.patch][4.8]]
    [[file:4.9/drmradeoni915_Use_preempt_disableenable_rt()_where_recommended.patch][4.9]]
    [[file:4.11/drmradeoni915_Use_preempt_disableenable_rt()_where_recommended.patch][4.11]]
* [   4.8         ] mm: filemap: fix mapping->nrpages double accounting in fuse{C::bug::data_err::semantics::semantics::remove nrpages}
  + [[file:4.8/mm-filemap-fix-mapping-nrpages-double-accounting-in-.patch][4.8]]
  - 4.9
* [   4.8         ] lockdep: Quiet gcc about dangerous __builtin_return_address() operations{C::feature::debuginfo::add config }
  + [[file:4.8/lockdep-Quiet-gcc-about-dangerous-__builtin_return_a.patch][4.8]]
  - 4.9
* [   4.8         ] jbd2: Fix lockdep annotation in add_transaction_credits(){C::bug::hang::semantics::order::move function into unlocked places}
  + [[file:4.8/jbd2-Fix-lockdep-annotation-in-add_transaction_credi.patch][4.8]]
  - 4.9
* [   4.8         ] Using BUG_ON() as an assert() is _never_ acceptable{C::feature::debuginfo::replace VM_BUG_ON() with VM_BUG_ON()_ONCE()}
  + [[file:4.8/Using-BUG_ON-as-an-assert-is-_never_-acceptable.patch][4.8]]
  - 4.9
* [   4.8         ] mm: filemap: don't plant shadow entries without radix tree node{C::bug::leak::err_var::memory}
  + [[file:4.8/mm-filemap-don-t-plant-shadow-entries-without-radix-.patch][4.8]]
  - 4.9
* [   4.8 -   4.11] rbtree: include rcu.h because we use it{C::bug::compile::compiling_err::semantics::add header file}
  + [[file:4.8/rbtree-include-rcu.h-because-we-use-it.patch][4.8]]
    [[file:4.9/rbtree-include-rcu.h-because-we-use-it.patch][4.9]]
  M [[file:4.11/rbtree-include-rcu.h-because-we-use-it.patch][4.11]]
* [   4.8 -   4.11] iommu/iova: don't disable preempt around this_cpu_ptr(){C::performance::preempt::don't disable preempt around this_cpu_ptr}
  + [[file:4.8/iommu-iova-don-t-disable-preempt-around-this_cpu_ptr.patch][4.8]]
    [[file:4.9/iommu-iova-don-t-disable-preempt-around-this_cpu_ptr.patch][4.9]]
    [[file:4.11/iommu-iova-don-t-disable-preempt-around-this_cpu_ptr.patch][4.11]]
* [   4.8 -   4.11] mm/memcontrol: mem_cgroup_migrate() - replace another local_irq_disable() w. loc{C::maintain::refactor::replace another local_irq_disable()}
  + [[file:4.8/mm-memcontrol-mem_cgroup_migrate-replace-another-loc.patch][4.8]]
    [[file:4.9/mm-memcontrol-mem_cgroup_migrate-replace-another-loc.patch][4.9]]
    [[file:4.11/mm-memcontrol-mem_cgroup_migrate-replace-another-loc.patch][4.11]]
* [   4.8 -   4.11] net: add a lock around icmp_sk(){C::feature::rtsupport::add lock avoid missing serialization in -RT}
  + [[file:4.8/net-add-a-lock-around-icmp_sk.patch][4.8]]
    [[file:4.9/net-add-a-lock-around-icmp_sk.patch][4.9]]
  M [[file:4.11/net-add-a-lock-around-icmp_sk.patch][4.11]]
* [   4.8 -   4.11] fs/dcache: init in_lookup_hashtable{C::bug::data_err::uninit_var::memory::init in_lookup_hashtable}
  + [[file:4.8/fs-dcache-init-in_lookup_hashtable.patch][4.8]]
    [[file:4.9/fs-dcache-init-in_lookup_hashtable.patch][4.9]]
    [[file:4.11/fs-dcache-init-in_lookup_hashtable.patch][4.11]]
* [   4.8 -   4.11] fs/dcache: use swait_queue instead of waitqueue{C::feature::rtsupport::swait_queue instead of waitqueue}
  + [[file:4.8/fs-dcache-use-swait_queue-instead-of-waitqueue.patch][4.8]]
    [[file:4.9/fs-dcache-use-swait_queue-instead-of-waitqueue.patch][4.9]]
    [[file:4.11/fs-dcache-use-swait_queue-instead-of-waitqueue.patch][4.11]]
* [   4.8 -   4.11] net/Qdisc: use a seqlock instead seqcount{C::feature::rtsupport::use a seqlock instead seqcount}
  + [[file:4.8/net-Qdisc-use-a-seqlock-instead-seqcount.patch][4.8]]
  m [[file:4.9/net-Qdisc-use-a-seqlock-instead-seqcount.patch][4.9]]
  m [[file:4.11/net-Qdisc-use-a-seqlock-instead-seqcount.patch][4.11]]
* [   4.8 -   4.11] mm: perform lru_add_drain_all() remotely{C::bug::hang::sched::semantics::grabbing swapvec_lock}
  + [[file:4.8/mm-perform-lru_add_drain_all-remotely.patch][4.8]]
    [[file:4.9/mm-perform-lru_add_drain_all-remotely.patch][4.9]]
  M [[file:4.11/mm-perform-lru_add_drain_all-remotely.patch][4.11]]
* [   4.8 -   4.11] net: add back the missing serialization in ip_send_unicast_reply(){C::bug::crash::atomicity::mutex::add old lock}
  + [[file:4.8/net-add-back-the-missing-serialization-in-ip_send_un.patch][4.8]]
    [[file:4.9/net-add-back-the-missing-serialization-in-ip_send_un.patch][4.9]]
  m [[file:4.11/net-add-back-the-missing-serialization-in-ip_send_un.patch][4.11]]
* [   4.8 -   4.11] timer: make the base lock raw{C::feature::timer::replace with raw}
  + [[file:4.8/timer-make-the-base-lock-raw.patch][4.8]]
    [[file:4.9/timer-make-the-base-lock-raw.patch][4.9]]
  m [[file:4.11/timer-make-the-base-lock-raw.patch][4.11]]
* [   4.8 -    4.9] kernel/futex: don't deboost too early{C::bug::livelock::livelock::order::do unlock without deboost and deboost after wake up waiter}
  + [[file:4.8/kernel-futex-don-t-deboost-too-early.patch][4.8]]
    [[file:4.9/kernel-futex-don-t-deboost-too-early.patch][4.9]]
  - 4.11
* [   4.8 -   4.11] iommu/vt-d: don't disable preemption while accessing deferred_flush(){C::performance::preempt::don't disable preemption while accessing deferred_flush()}
  + [[file:4.8/iommu-vt-d-don-t-disable-preemption-while-accessing-.patch][4.8]]
    [[file:4.9/iommu-vt-d-don-t-disable-preemption-while-accessing-.patch][4.9]]
    [[file:4.11/iommu-vt-d-don-t-disable-preemption-while-accessing-.patch][4.11]]
* [   4.8 -    4.9] gpu: don't check for the lock owner.{C::maintain::refactor::add condition to don't check for the lock owner}
  + [[file:4.8/gpu_don_t_check_for_the_lock_owner.patch][4.8]]
    [[file:4.9/gpu_don_t_check_for_the_lock_owner.patch][4.9]]
  - 4.11
* [   4.8 -   4.11] fs/nfs: turn rmdir_sem into a semaphore{C::feature::rtsupport::turn rmdir_sem into a semaphore}
  + [[file:4.8/fs-nfs-turn-rmdir_sem-into-a-semaphore.patch][4.8]]
    [[file:4.9/fs-nfs-turn-rmdir_sem-into-a-semaphore.patch][4.9]]
    [[file:4.11/fs-nfs-turn-rmdir_sem-into-a-semaphore.patch][4.11]]
* [   4.8 -   4.11] kernel/printk: Don't try to print from IRQ/NMI region{C::feature::debuginfo::Don't try to print from IRQ/NMI region}
  + [[file:4.8/kernel-printk-Don-t-try-to-print-from-IRQ-NMI-region.patch][4.8]]
    [[file:4.9/kernel-printk-Don-t-try-to-print-from-IRQ-NMI-region.patch][4.9]]
    [[file:4.11/kernel-printk-Don-t-try-to-print-from-IRQ-NMI-region.patch][4.11]]
* [   4.8 -    4.9] fs/dcache: include wait.h{C::bug::compile::compiling_err::syntax::include wait.h}
  + [[file:4.8/fs-dcache-include-wait.h.patch][4.8]]
    [[file:4.9/fs-dcache-include-wait.h.patch][4.9]]
  - 4.11
* [   4.8 -   4.11] locallock: add local_lock_on(){C::feature::rtsupport::add macro #define}
  + [[file:4.8/locallock-add-local_lock_on.patch][4.8]]
    [[file:4.9/locallock-add-local_lock_on.patch][4.9]]
    [[file:4.11/locallock-add-local_lock_on.patch][4.11]]
* [   4.9 -   4.11] locking/percpu-rwsem: Remove preempt_disable variants{C::bug::crash::preempt::preempt::remove preempt_disable variants}
  + [[file:4.9/peterz-percpu-rwsem-rt.patch][4.9]]
    [[file:4.11/peterz-percpu-rwsem-rt.patch][4.11]]
* [   4.9 -   4.11] net: Have __napi_schedule_irqoff() disable interrupts on {C::bug::crash::irq::irq::add config for RT}
  + [[file:4.9/net-Have-__napi_schedule_irqoff-disable-interrupts-o.patch][4.9]]
  m [[file:4.11/net-Have-__napi_schedule_irqoff-disable-interrupts-o.patch][4.11]]
* [   4.9 -   4.11] rxrpc: remove unused static variables{C::maintain::refactor::remove unused variable}
  + [[file:4.9/rxrpc-remove-unused-static-variables.patch][4.9]]
    [[file:4.11/rxrpc-remove-unused-static-variables.patch][4.11]]
* [   4.9 -   4.11] connector/cn_proc: Protect send_msg() with a local lock on RT{C::bug::deadlock::deadlock::preempt::repace with local lock}
  + [[file:4.9/connector-cn_proc-Protect-send_msg-with-a-local-lock.patch][4.9]]
    [[file:4.11/connector-cn_proc-Protect-send_msg-with-a-local-lock.patch][4.11]]
* [   4.9 -   4.11] drivers/zram: Don't disable preemption in zcomp_stream_get/put(){C::feature::rtsupport::Increase the preemptive area,fix lock order}
  + [[file:4.9/drivers-zram-Don-t-disable-preemption-in-zcomp_strea.patch][4.9]]
  M [[file:4.11/drivers-zram-Don-t-disable-preemption-in-zcomp_strea.patch][4.11]]
* [   4.9 -   4.11] NFSv4: replace seqcount_t with a seqlock_t{C::feature::rtsupport::replace with seqlock_t}
  + [[file:4.9/NFSv4-replace-seqcount_t-with-a-seqlock_t.patch][4.9]]
  m [[file:4.11/NFSv4-replace-seqcount_t-with-a-seqlock_t.patch][4.11]]
* [   4.9         ] btrfs: drop trace_btrfs_all_work_done() from normal_work_helper(){C::bug::crash::semantics::semantics::remove trace events}
  + [[file:4.9/btrfs-drop-trace_btrfs_all_work_done-from-normal_wor.patch][4.9]]
  - 4.11
* [   4.9 -   4.11] kernel/sched: move stack + kprobe clean up to __put_task_struct(){C::feature::sched::move stack + kprobe clean up to __put_task_struct() to preempt enable region}
  + [[file:4.9/kernel-sched-move-stack-kprobe-clean-up-to-__put_tas.patch][4.9]]
    [[file:4.11/kernel-sched-move-stack-kprobe-clean-up-to-__put_tas.patch][4.11]]
* [   4.9 -   4.11] ftrace: Fix trace header alignment{C::maintain::refactor}
  + [[file:4.9/ftrace-Fix-trace-header-alignment.patch][4.9]]
    [[file:4.11/ftrace-Fix-trace-header-alignment.patch][4.11]]
* [   4.9         ] locking/percpu-rwsem: use swait for the wating writer{C::feature::rtsupport::replace with swait}
  + [[file:4.9/locking-percpu-rwsem-use-swait-for-the-wating-writer.patch][4.9]]
  - 4.11
* [   4.9 -   4.11] arm: include definition for cpumask_t{C::maintain::refactor::add header }
  + [[file:4.9/arm-include-definition-for-cpumask_t.patch][4.9]]
    [[file:4.11/arm-include-definition-for-cpumask_t.patch][4.11]]
* [   4.9         ] rcu: update: make RCU_EXPEDITE_BOOT default{C::maintain::refactor::change config to make RCU_EXPEDITE_BOOT default}
  + [[file:4.9/rcu-update-make-RCU_EXPEDITE_BOOT-default.patch][4.9]]
  - 4.11
* [   4.9         ] btrfs: swap free() and trace point in run_ordered_work(){C::bug::crash::err_var::memory::reorder}
  + [[file:4.9/btrfs-swap-free-and-trace-point-in-run_ordered_work.patch][4.9]]
  - 4.11
* [   4.9 -   4.11] rcu: enable rcu_normal_after_boot by default for RT{C::feature::rtsupport::rcu_normal_after_boot by default}
  + [[file:4.9/rcu-enable-rcu_normal_after_boot-by-default-for-RT.patch][4.9]]
    [[file:4.11/rcu-enable-rcu_normal_after_boot-by-default-for-RT.patch][4.11]]
* [   4.9         ] x86/apic: get rid of "warning: 'acpi_ioapic_lock' defined but not used"{C::bug::compile::compiling_err::config::add #ifdef to remove warning}
  + [[file:4.9/x86-apic-get-rid-of-warning-acpi_ioapic_lock-defined.patch][4.9]]
  - 4.11
* [   4.9 -   4.11] mm/zsmalloc: copy with get_cpu_var() and locking{C::feature::rtsupport::replace with get_lock_var() and mutex lock}
  + [[file:4.9/mm_zsmalloc_copy_with_get_cpu_var_and_locking.patch][4.9]]
    [[file:4.11/mm_zsmalloc_copy_with_get_cpu_var_and_locking.patch][4.11]]
* [   4.9 -   4.11] arm: kprobe: replace patch_lock to raw lock{C::bug::deadlock::deadlock::irq::replace with raw lock}
  + [[file:4.9/arm-kprobe-replace-patch_lock-to-raw-lock.patch][4.9]]
    [[file:4.11/arm-kprobe-replace-patch_lock-to-raw-lock.patch][4.11]]
* [  4.11         ] sched/clock: Fix early boot preempt assumption in __set_sched_clock_stable{C::bug::crash::preempt::irq::disabling irqs}
  + [[file:4.11/0001-sched-clock-Fix-early-boot-preempt-assumption-in-__s.patch][4.11]]
* [  4.11         ] sched/core: Enable might_sleep() and smp_processor_id() checks early{C::feature::check::enable might_sleep()and smp_processor_id() checks early}
  + [[file:4.11/0017-sched-core-Enable-might_sleep-and-smp_processor_id-c.patch][4.11]]
* [  4.11         ] sched: Remove TASK_ALL{C::maintain::refactor::remove unused code}
  + [[file:4.11/sched-Remove-TASK_ALL.patch][4.11]]
* [  4.11         ] ia64/topology: Remove cpus_allowed manipulation{C::feature::hotplug::remove cpus_allowed manipulation}
  + [[file:4.11/0001-ia64-topology-Remove-cpus_allowed-manipulation.patch][4.11]]
* [  4.11         ] random: avoid preempt_disable()ed section{C::feature::rtsupport::replace get_cpu_var() with local_locks}
  + [[file:4.11/random-avoid-preempt_disable-ed-section.patch][4.11]]
* [  4.11         ] futex: Clarify mark_wake_futex memory barrier usage{C::maintain::donothing::add comment}
  + [[file:4.11/0003-futex-Clarify-mark_wake_futex-memory-barrier-usage.patch][4.11]]
* [  4.11         ] x86/smp: Adjust system_state check{C::feature::check::change condition of "if" to adjust system_state check}
  + [[file:4.11/0004-x86-smp-Adjust-system_state-check.patch][4.11]]
* [  4.11         ] drm/i915: init spinlock properly on -RT{C::feature::rtsupport::add #ifdef for rt-lock init }
  + [[file:4.11/drm-i915-init-spinlock-properly-on-RT.patch][4.11]]
* [  4.11         ] powerpc/smp: Replace open coded task affinity logic{C::feature::hotplug::replace with work_on_cpu_safe()}
  + [[file:4.11/0005-powerpc-smp-Replace-open-coded-task-affinity-logic.patch][4.11]]
* [  4.11         ] sched/deadline/rtmutex: Dont miss the dl_runtime/dl_period update{C::feature::rtsupport::add !dl_prio() condition to force deadline task not out}
  + [[file:4.11/0003-sched-deadline-rtmutex-Dont-miss-the-dl_runtime-dl_p.patch][4.11]]
* [  4.11         ] futex,rt_mutex: Provide futex specific rt_mutex API{C::feature::rtsupport::provide futex specific rt_mutex API}
  + [[file:4.11/0004-futex-rt_mutex-Provide-futex-specific-rt_mutex-API.patch][4.11]]
* [  4.11         ] futex: Remove rt_mutex_deadlock_account_*(){C::maintain::refactor::remove unused code}
  + [[file:4.11/0003-futex-Remove-rt_mutex_deadlock_account_.patch][4.11]]
* [  4.11         ] mm: Adjust system_state check{C::feature::check::change condition of "if" to adjust system_state check}
  + [[file:4.11/0008-mm-Adjust-system_state-check.patch][4.11]]
* [  4.11         ] cpuset: Convert callback_lock to raw_spinlock_t{C::bug::deadlock::deadlock::mutex::replace with raw}
  + [[file:4.11/cpuset-Convert-callback_lock-to-raw_spinlock_t.patch][4.11]]
* [  4.11         ] printk: Adjust system_state checks{C::feature::check::change condition of "if" to adjust system_state check}
  + [[file:4.11/0014-printk-Adjust-system_state-checks.patch][4.11]]
* [  4.11         ] lockdep: Fix compilation error for !CONFIG_MODULES and !CONFIG_SMP{C::bug::compile::compiling_err::semantics::add function to fix compiling_err}
  + [[file:4.11/lockdep-Fix-compilation-error-for-CONFIG_MODULES-and.patch][4.11]]
* [  4.11         ] async: Adjust system_state checks{C::feature::check::change condition of "if" to adjust system_state check}
  + [[file:4.11/0012-async-Adjust-system_state-checks.patch][4.11]]
* [  4.11         ] cpu/hotplug: Use stop_machine_cpuslocked() in takedown_cpu(){C::feature::hotplug::replace with _cpuslocked() avoid nested}
  + [[file:4.11/0017-cpu-hotplug-Use-stop_machine_cpuslocked-in-takedown_.patch][4.11]]
* [  4.11         ] arm64: Adjust system_state check{C::feature::check::change condition of "if" to adjust system_state check}
  + [[file:4.11/0003-arm64-Adjust-system_state-check.patch][4.11]]
* [  4.11         ] futex: Fix small (and harmless looking) inconsistencies{C::bug::crash::semantics::semantics::Change variable type,add comment}
  + [[file:4.11/0002-futex-Fix-small-and-harmless-looking-inconsistencies.patch][4.11]]
* [  4.11         ] ACPI/processor: Use cpu_hotplug_disable() instead of get_online_cpus(){C::feature::hotplug::Use cpu_hotplug_disable() instead of get_online_cpus()}
  + [[file:4.11/0022-ACPI-processor-Use-cpu_hotplug_disable-instead-of-ge.patch][4.11]]
* [  4.11         ] s390/kernel: Use stop_machine_cpuslocked(){C::feature::hotplug::replace with _cpuslocked() avoid nested}
  + [[file:4.11/0015-s390-kernel-Use-stop_machine_cpuslocked.patch][4.11]]
* [  4.11         ] perf/x86/intel: Drop get_online_cpus() in intel_snb_check_microcode(){C::feature::hotplug::reorder get_online_cpus() for protection,refactor *_online_cpus}
  + [[file:4.11/0019-perf-x86-intel-Drop-get_online_cpus-in-intel_snb_che.patch][4.11]]
* [  4.11         ] char/random: don't print that the init is done{C::bug::deadlock::deadlock::semantics::remove or delay printf info}
  + [[file:4.11/char-random-don-t-print-that-the-init-is-done.patch][4.11]]
* [  4.11         ] rwsem/rt: Lift single reader restriction{C::feature::rtsupport::restricts the number of reads to one}
  + [[file:4.11/rwsem-rt-Lift-single-reader-restriction.patch][4.11]]
* [  4.11         ] kprobes: Cure hotplug lock ordering issues{C::feature::hotplug::reorder lock}
  + [[file:4.11/0025-kprobes-Cure-hotplug-lock-ordering-issues.patch][4.11]]
* [  4.11         ] lockdep: Fix per-cpu static objects{C::bug::leak::semantics::semantics::redefining the canonical address}
  + [[file:4.11/lockdep-Fix-per-cpu-static-objects.patch][4.11]]
* [  4.11         ] ACPI/processor: Fix error handling in __acpi_processor_start(){C::feature::hotplug::add return info}
  + [[file:4.11/0007-ACPI-processor-Fix-error-handling-in-__acpi_processo.patch][4.11]]
* [  4.11         ] crypto: N2 - Replace racy task affinity logic{C::feature::hotplug::replace with work_on_cpu_safe()}
  + [[file:4.11/0013-crypto-N2-Replace-racy-task-affinity-logic.patch][4.11]]
* [  4.11         ] Revert "random: invalidate batched entropy after crng init"{C::bug::crash::deadlock::semantics::revert random}
  + [[file:4.11/Revert-random-invalidate-batched-entropy-after-crng-.patch][4.11]]
* [  4.11         ] sched/rtmutex/deadline: Fix a PI crash for deadline tasks{C::bug::crash::atomicity::mutex::add function and pointer}
  + [[file:4.11/0002-sched-rtmutex-deadline-Fix-a-PI-crash-for-deadline-t.patch][4.11]]
* [  4.11         ] rtmutex: Provide locked slowpath{C::feature::rtsupport::provide retmutex_slowlock}
  + [[file:4.11/rtmutex-Provide-locked-slowpath.patch][4.11]]
* [  4.11         ] acpi/processor: Prevent cpu hotplug deadlock{C::feature::hotplug::check per cpu thread and invoke function directly}
  + [[file:4.11/0031-acpi-processor-Prevent-cpu-hotplug-deadlock.patch][4.11]]
* [  4.11         ] arm: Adjust system_state check{C::feature::check::change condition to handle extra states}
  + [[file:4.11/0002-arm-Adjust-system_state-check.patch][4.11]]
* [  4.11         ] futex: Rework futex_lock_pi() to use rt_mutex_*_proxy_lock(){C::bug::livelock::atomicity::mutex::rework futex_lock_pi()}
  + [[file:4.11/0011-futex-Rework-futex_lock_pi-to-use-rt_mutex_-_proxy_l.patch][4.11]]
* [  4.11         ] _cpuslocked(){C::feature::hotplug::provide _cpuslocked}
  + [[file:4.11/0003-cpu-hotplug-Provide-cpuhp_setup-remove_state-_nocall.patch][4.11]]
* [  4.11         ] cpufreq/pasemi: Adjust system_state check{C::feature::hotplug::change condition to handle extra states}
  + [[file:4.11/0009-cpufreq-pasemi-Adjust-system_state-check.patch][4.11]]
* [  4.11         ] cpu/hotplug: Provide lockdep_assert_cpus_held(){C::feature::hotplug::add two function assert}
  + [[file:4.11/0002-cpu-hotplug-Provide-lockdep_assert_cpus_held.patch][4.11]]
* [  4.11         ] CPUFREQ: Loongson2: drop set_cpus_allowed_ptr(){C::performance::smallsize::remove code}
  + [[file:4.11/CPUFREQ-Loongson2-drop-set_cpus_allowed_ptr.patch][4.11]]
* [  4.11         ] timer/hrtimer: check properly for a running timer{C::feature::check::add check for running timer in RT enviroment}
  + [[file:4.11/timer-hrtimer-check-properly-for-a-running-timer.patch][4.11]]
* [  4.11         ] powerpc: Adjust system_state check{C::feature::check::change condition to handle extra states}
  + [[file:4.11/0006-powerpc-Adjust-system_state-check.patch][4.11]]
* [  4.11         ] cpu/hotplug: Convert hotplug locking to percpu rwsem{C::feature::hotplug::replace with percpu_rwsem}
  + [[file:4.11/0029-cpu-hotplug-Convert-hotplug-locking-to-percpu-rwsem.patch][4.11]]
* [  4.11         ] KVM/PPC/Book3S HV: Use cpuhp_setup_state_nocalls_cpuslocked(){C::feature::hotplug::use _cpuslocked() to avoid nested call,replace with cpus_read_lock()}
  + [[file:4.11/0010-KVM-PPC-Book3S-HV-Use-cpuhp_setup_state_nocalls_cpus.patch][4.11]]
* [  4.11         ] futex: Rework inconsistent rt_mutex/futex_q state{C::bug::deadlock::semantics::order::chang wake_futex_pi() to return -EAGAIN}
  + [[file:4.11/0007-futex-Rework-inconsistent-rt_mutex-futex_q-state.patch][4.11]]
* [  4.11         ] rtmutex: Fix PI chain order integrity{C::bug::corrupt::na::mutex::copy deadline,reorder it along prio}
  + [[file:4.11/0007-rtmutex-Fix-PI-chain-order-integrity.patch][4.11]]
* [  4.11         ] futex: workaround migrate_disable/enable in different context{C::feature::rtsupport::in automic/!atomic contex use respective migrate_disable/enable}
  + [[file:4.11/futex-workaround-migrate_disable-enable-in-different.patch][4.11]]
* [  4.11         ] sched,tracing: Update trace_sched_pi_setprio(){C::feature::sched::Update trace_sched_pi_setprio()}
  + [[file:4.11/0006-sched-tracing-Update-trace_sched_pi_setprio.patch][4.11]]
* [  4.11         ] rtmutex: Deboost before waking up the top waiter{C::bug::crash::semantics::semantics::Deboost before waking up the top waiter}
  + [[file:4.11/0001-rtmutex-Deboost-before-waking-up-the-top-waiter.patch][4.11]]
* [  4.11         ] x86/perf: Drop EXPORT of perf_check_microcode{C::feature::hotplug::remove export code}
  + [[file:4.11/0018-x86-perf-Drop-EXPORT-of-perf_check_microcode.patch][4.11]]
* [  4.11         ] hwtracing/coresight-etm4x: Use cpuhp_setup_state_nocalls_cpuslocked(){C::feature::hotplug::use _cpuslocked() to avoid nested call}
  + [[file:4.11/0012-hwtracing-coresight-etm4x-Use-cpuhp_setup_state_noca.patch][4.11]]
* [  4.11         ] init: Introduce SYSTEM_SCHEDULING state{C::feature::check::introduce SYSTEM_SCHEDULING state}
  + [[file:4.11/0016-init-Introduce-SYSTEM_SCHEDULING-state.patch][4.11]]
* [  4.11         ] lockdep: Handle statically initialized PER_CPU locks proper{C::bug::data_err::err_var::memory::hand back canonical adddress as the lock key,move the check into look_up_lock_class() }
  + [[file:4.11/lockdep-Handle-statically-initialized-PER_CPU-locks-.patch][4.11]]
* [  4.11         ] cpufreq/ia64: Replace racy task affinity logic{C::feature::hotplug::straight call smp function}
  + [[file:4.11/0009-cpufreq-ia64-Replace-racy-task-affinity-logic.patch][4.11]]
* [  4.11         ] rtmutex: Provide rt_mutex_lock_state(){C::feature::rtsupport::add rtmutex state function}
  + [[file:4.11/rtmutex-Provide-rt_mutex_lock_state.patch][4.11]]
* [  4.11         ] futex: Cleanup refcounting{C::feature::debuginfo::add WARN_ON_ONCE()}
  + [[file:4.11/0006-futex-Cleanup-refcounting.patch][4.11]]
* [  4.11         ] futex: Avoid freeing an active timer{C::bug::crash::semantics::semantics::add httimer_cancel()}
  + [[file:4.11/0001-futex-Avoid-freeing-an-active-timer.patch][4.11]]
* [  4.11         ] cpuhotplug: Link lock stacks for hotplug callbacks{C::feature::hotplug::add lockdep to detected deadlock}
  + [[file:4.11/0032-cpuhotplug-Link-lock-stacks-for-hotplug-callbacks.patch][4.11]]
* [  4.11         ] init: Pin init task to the boot CPU, initially{C::feature::check::Pin init task to the boot CPU}
  + [[file:4.11/0001-init-Pin-init-task-to-the-boot-CPU-initially.patch][4.11]]
* [  4.11         ] ACPI: Adjust system_state check{C::feature::check::change condition to handle extra states}
  + [[file:4.11/0007-ACPI-Adjust-system_state-check.patch][4.11]]
* [  4.11         ] cpu/hotplug: Add __cpuhp_state_add_instance_cpuslocked(){C::feature::hotplug::cpuslocked()}
  + [[file:4.11/0004-cpu-hotplug-Add-__cpuhp_state_add_instance_cpuslocke.patch][4.11]]
* [  4.11         ] futex: Change locking rules{C::feature::rtsupport::change locking rules}
  + [[file:4.11/0005-futex-Change-locking-rules.patch][4.11]]
* [  4.11         ] kernel: sched: Provide a pointer to the valid CPU mask{C::maintain::refactor::Provide a pointer to the valid CPU mask}
  + [[file:4.11/kernel-sched-Provide-a-pointer-to-the-valid-CPU-mask.patch][4.11]]
* [  4.11         ] iommu/vt-d: Adjust system_state checks{C::feature::check::change condition to handle extra states}
  + [[file:4.11/0010-iommu-vt-d-Adjust-system_state-checks.patch][4.11]]
* [  4.11         ] net/core: disable NET_RX_BUSY_POLL{C::performance::config::add config to disable NET_RX_BUSY_POLL in RT}
  + [[file:4.11/net_disable_NET_RX_BUSY_POLL.patch][4.11]]
* [  4.11         ] perf/x86/intel/cqm: Use cpuhp_setup_state_cpuslocked(){C::feature::hotplug::use _cpuslocked() to avoid nested call}
  + [[file:4.11/0013-perf-x86-intel-cqm-Use-cpuhp_setup_state_cpuslocked.patch][4.11]]
* [  4.11         ] perf/tracing/cpuhotplug: Fix locking order{C::feature::hotplug::introuce pmus_mutex}
  + [[file:4.11/0023-perf-tracing-cpuhotplug-Fix-locking-order.patch][4.11]]
* [  4.11         ] padata: Avoid nested calls to cpus_read_lock() in pcrypt_init_padata(){C::feature::hotplug::remove cpus_read_lock()}
  + [[file:4.11/0007-padata-Avoid-nested-calls-to-cpus_read_lock-in-pcryp.patch][4.11]]
* [  4.11         ] rtmutex: Plug preempt count leak in rt_mutex_futex_unlock(){C::maintain::refactor::remove unpaired preempt_disable}
  + [[file:4.11/0009-rtmutex-Plug-preempt-count-leak-in-rt_mutex_futex_un.patch][4.11]]
* [  4.11         ] cpufreq/sparc-us3: Replace racy task affinity logic{C::feature::hotplug::straight call smp function}
  + [[file:4.11/0011-cpufreq-sparc-us3-Replace-racy-task-affinity-logic.patch][4.11]]
* [  4.11         ] rtmutex: Make lock_killable work{C::bug::compile::semantics::semantics::call function unconditionaly}
  + [[file:4.11/rtmutex-Make-lock_killable-work.patch][4.11]]
* [  4.11         ] workqueue: Provide work_on_cpu_safe(){C::feature::hotplug::Provide work_on_cpu_safe()}
  + [[file:4.11/0002-workqueue-Provide-work_on_cpu_safe.patch][4.11]]
* [  4.11         ] cpufreq: Use cpuhp_setup_state_nocalls_cpuslocked(){C::feature::hotplug::use cpuslocked() to avoid nested call}
  + [[file:4.11/0009-cpufreq-Use-cpuhp_setup_state_nocalls_cpuslocked.patch][4.11]]
* [  4.11         ] arm: Prevent hotplug rwsem recursion{C::feature::hotplug::use _cpuslocked() to check avoid recursion}
  + [[file:4.11/0027-arm-Prevent-hotplug-rwsem-recursion.patch][4.11]]
* [  4.11         ] radix-tree: use local locks{}{C::feature::rtsupport::add local_lock() for RT}
  + [[file:4.11/radix-tree-use-local-locks.patch][4.11]]
* [  4.11         ] MAINTAINERS: Add FUTEX SUBSYSTEM{C::maintain::donothing:: Add FUTEX SUBSYSTEM to MAINTAINERS}
  + [[file:4.11/0004-MAINTAINERS-Add-FUTEX-SUBSYSTEM.patch][4.11]]
* [  4.11         ] delayacct: use raw_spinlocks{C::feature::rtsupport::replace with raw}
  + [[file:4.11/delayacct-use-raw_spinlocks.patch][4.11]]
* [  4.11         ] futex/rtmutex: Cure RT double blocking issue{C::bug::crash::semantics::semantics::clearing task->pi_blocked_on}
  + [[file:4.11/futex-rtmutex-Cure-RT-double-blocking-issue.patch][4.11]]
* [  4.11         ] sched: Provide is_percpu_thread() helper{C::feature::hotplug::provide a helper for check}
  + [[file:4.11/0030-sched-Provide-is_percpu_thread-helper.patch][4.11]]
* [  4.11         ] rtmutex: Clean up{C::feature::rtsupport::update comments and code}
  + [[file:4.11/0004-rtmutex-Clean-up.patch][4.11]]
* [  4.11         ] futex: Drop hb->lock before enqueueing on the rtmutex{C::bug::deadlock::atomicity::mutex::drop hb->lock after acquiring wait_lock}
  + [[file:4.11/0013-futex-Drop-hb-lock-before-enqueueing-on-the-rtmutex.patch][4.11]]
* [  4.11         ] softirq: wake the timer softirq if needed{C::bug::softirq::softirq::softirq::the timer softirq if needed}
  + [[file:4.11/softirq-wake-the-timer-softirq-if-needed.patch][4.11]]
* [  4.11         ] futex: Futex_unlock_pi() determinism{C::bug::rtlatency::time::mutex::Futex_unlock_pi() determinism}
  + [[file:4.11/0012-futex-Futex_unlock_pi-determinism.patch][4.11]]
* [  4.11         ] rtmutex: Fix more prio comparisons{C::feature::sched::Fix more prio comparisons}
  + [[file:4.11/0008-rtmutex-Fix-more-prio-comparisons.patch][4.11]]
* [  4.11         ] PCI: Replace the racy recursion prevention{C::feature::hotplug::Replace the racy recursion prevention}
  + [[file:4.11/0021-PCI-Replace-the-racy-recursion-prevention.patch][4.11]]
* [  4.11         ] kernel/sched/core: add migrate_disable(){C::feature::rtsupport::add migrate_disable()}
  + [[file:4.11/add_migrate_disable.patch][4.11]]
* [  4.11         ] ACPI/processor: Replace racy task affinity logic{C::feature::hotplug::using work_on_cpu_safe()}
  + [[file:4.11/0008-ACPI-processor-Replace-racy-task-affinity-logic.patch][4.11]]
* [  4.11         ] powerpc/powernv: Use stop_machine_cpuslocked(){C::feature::hotplug::Use stop_machine_cpuslocked()to avoid nested calls}
  + [[file:4.11/0016-powerpc-powernv-Use-stop_machine_cpuslocked.patch][4.11]]
* [  4.11         ] ARM/hw_breakpoint: Use cpuhp_setup_state_cpuslocked(){C::feature::hotplug::Use cpuhp_setup_state__cpuslocked() to avoid nested calls}
  + [[file:4.11/0014-ARM-hw_breakpoint-Use-cpuhp_setup_state_cpuslocked.patch][4.11]]
* [  4.11         ] sparc/sysfs: Replace racy task affinity logic{C::feature::hotplug::replace with work_on_cpu()}
  + [[file:4.11/0006-sparc-sysfs-Replace-racy-task-affinity-logic.patch][4.11]]
* [  4.11         ] futex: Use smp_store_release() in mark_wake_futex(){C::feature::other::merge code}
  + [[file:4.11/0002-futex-Use-smp_store_release-in-mark_wake_futex.patch][4.11]]
* [  4.11         ] sched: Prevent task state corruption by spurious lock wakeup{C::bug::corrupt::semantics::semantics::replace TASK_ALL argument with TASK_UNINTERRUPTIBLE}
  + [[file:4.11/sched-Prevent-task-state-corruption-by-spurious-lock.patch][4.11]]
* [  4.11         ] hwtracing/coresight-etm3x: Use cpuhp_setup_state_nocalls_cpuslocked(){C::feature::hotplug::Use cpuhp_setup_state_nocalls_cpuslocked() to avoid nested calls}
  + [[file:4.11/0011-hwtracing-coresight-etm3x-Use-cpuhp_setup_state_noca.patch][4.11]]
* [  4.11         ] ia64/sn/hwperf: Replace racy task affinity logic{C::feature::hotplug::using work_on_cpu_safe()}
  + [[file:4.11/0004-ia64-sn-hwperf-Replace-racy-task-affinity-logic.patch][4.11]]
* [  4.11         ] stop_machine: Provide stop_machine_cpuslocked(){C::feature::hotplug::Provide stop_machine_cpuslocked() to avoid nested calls}
  + [[file:4.11/0005-stop_machine-Provide-stop_machine_cpuslocked.patch][4.11]]
* [  4.11         ] x86/mtrr: Remove get_online_cpus() from mtrr_save_state(){C::feature::hotplug::remove pointless function}
  + [[file:4.11/0008-x86-mtrr-Remove-get_online_cpus-from-mtrr_save_state.patch][4.11]]
* [  4.11         ] futex: Pull rt_mutex_futex_unlock() out from under hb->lock{C::bug::crash::semantics::mutex::Pull rt_mutex_futex_unlock() out from under hb->lock}
  + [[file:4.11/0008-futex-Pull-rt_mutex_futex_unlock-out-from-under-hb-l.patch][4.11]]
* [  4.11         ] PCI: Use cpu_hotplug_disable() instead of get_online_cpus(){C::bug::deadlock::order::hardware::replace with cpu_hotplug_disable()}
  + [[file:4.11/0020-PCI-Use-cpu_hotplug_disable-instead-of-get_online_cp.patch][4.11]]
* [  4.11         ] futex,rt_mutex: Fix rt_mutex_cleanup_proxy_lock(){C::bug::crash::semantics::mutex::add try_to_take_rt_mutex(),reorder code}
  + [[file:4.11/futex-rt_mutex-Fix-rt_mutex_cleanup_proxy_lock.patch][4.11]]
* [  4.11         ] futex,rt_mutex: Introduce rt_mutex_init_waiter(){C::maintain::refactor::Organize the code as a helper}
  + [[file:4.11/0009-futex-rt_mutex-Introduce-rt_mutex_init_waiter.patch][4.11]]
* [  4.11         ] extable: Adjust system_state checks{C::feature::check::change condition to handle extra states}
  + [[file:4.11/0013-extable-Adjust-system_state-checks.patch][4.11]]
* [  4.11         ] lock(){C::feature::hotplug::rename function}
  + [[file:4.11/0001-cpu-hotplug-Provide-cpus_read-write_-un-lock.patch][4.11]]
* [  4.11         ] cpufreq/sh: Replace racy task affinity logic{C::feature::hotplug::replace with work_on_cpu()}
  + [[file:4.11/0010-cpufreq-sh-Replace-racy-task-affinity-logic.patch][4.11]]
* [  4.11         ] futex,rt_mutex: Restructure rt_mutex_finish_proxy_lock(){C::feature::rtsupport::refactor lock()}
  + [[file:4.11/0010-futex-rt_mutex-Restructure-rt_mutex_finish_proxy_loc.patch][4.11]]
* [  4.11         ] arm64: Prevent cpu hotplug rwsem recursion{C::feature::hotplug::replace with _cpuslocked() to check lock}
  + [[file:4.11/0026-arm64-Prevent-cpu-hotplug-rwsem-recursion.patch][4.11]]
* [  4.11         ] net/core: remove explicit do_softirq() from busy_poll_stop(){C::performance::smallsize::remove unnecessary code}
  + [[file:4.11/net-core-remove-explicit-do_softirq-from-busy_poll_s.patch][4.11]]
* [  4.11         ] cpufreq/sparc-us2e: Replace racy task affinity logic{C::feature::hotplug::replace with straight forward smp function call}
  + [[file:4.11/0012-cpufreq-sparc-us2e-Replace-racy-task-affinity-logic.patch][4.11]]
* [  4.11         ] futex: Cleanup variable names for futex_top_waiter(){C::maintain::refactor::rename var}
  + [[file:4.11/0001-futex-Cleanup-variable-names-for-futex_top_waiter.patch][4.11]]
* [  4.11         ] jump_label: Reorder hotplug lock and jump_label_lock{C::feature::hotplug::remove some lock,reorder lock, add some lock}
  + [[file:4.11/0024-jump_label-Reorder-hotplug-lock-and-jump_label_lock.patch][4.11]]
* [  4.11         ] mm/vmscan: Adjust system_state checks{C::feature::check::change condition to handle extra states}
  + [[file:4.11/0015-mm-vmscan-Adjust-system_state-checks.patch][4.11]]
* [  4.11         ] padata: Make padata_alloc() static{C::feature::hotplug::Make padata_alloc() static}
  + [[file:4.11/0006-padata-Make-padata_alloc-static.patch][4.11]]
* [  4.11         ] ia64/salinfo: Replace racy task affinity logic{C::feature::hotplug::replace with work_on_cpu_safe()}
  + [[file:4.11/0003-ia64-salinfo-Replace-racy-task-affinity-logic.patch][4.11]]
* [  4.11         ] sched/rtmutex: Refactor rt_mutex_setprio(){C::feature::rtsupport::refactor mutex function}
  + [[file:4.11/0005-sched-rtmutex-Refactor-rt_mutex_setprio.patch][4.11]]
* [  4.11         ] metag: Adjust system_state check{C::feature::check::change condition to handle extra states}
  + [[file:4.11/0005-metag-Adjust-system_state-check.patch][4.11]]
* [  4.11         ] s390: Prevent hotplug rwsem recursion{C::feature::hotplug::use stop_machine_cpuslocked() to contain a lockdep}
  + [[file:4.11/0028-s390-Prevent-hotplug-rwsem-recursion.patch][4.11]]
