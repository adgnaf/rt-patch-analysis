---
 include/linux/hrtimer.h |    4 ++++
 kernel/hrtimer.c        |   22 ++++++++++++++++++++++
 2 files changed, 26 insertions(+)

Index: linux-2.6.25.4-rt1/include/linux/hrtimer.h
===================================================================
--- linux-2.6.25.4-rt1.orig/include/linux/hrtimer.h	2008-05-17 08:26:42.000000000 -0400
+++ linux-2.6.25.4-rt1/include/linux/hrtimer.h	2008-05-17 08:27:01.000000000 -0400
@@ -314,6 +314,10 @@ static inline u64 hrtimer_forward_now(st
 	return hrtimer_forward(timer, timer->base->get_time(), interval);
 }
 
+/* Overrun count: */
+extern unsigned long
+hrtimer_overrun(struct hrtimer *timer, ktime_t now, ktime_t interval);
+
 /* Precise sleep: */
 extern long hrtimer_nanosleep(struct timespec *rqtp,
 			      struct timespec __user *rmtp,
Index: linux-2.6.25.4-rt1/kernel/hrtimer.c
===================================================================
--- linux-2.6.25.4-rt1.orig/kernel/hrtimer.c	2008-05-17 08:26:54.000000000 -0400
+++ linux-2.6.25.4-rt1/kernel/hrtimer.c	2008-05-17 08:27:01.000000000 -0400
@@ -723,6 +723,28 @@ u64 hrtimer_forward(struct hrtimer *time
 }
 EXPORT_SYMBOL_GPL(hrtimer_forward);
 
+unsigned long
+hrtimer_overrun(struct hrtimer *timer, ktime_t now, ktime_t interval)
+{
+	unsigned long orun = 1;
+	ktime_t delta;
+
+	delta = ktime_sub(now, timer->expires);
+
+	if (delta.tv64 < 0)
+		return 0;
+
+	if (interval.tv64 < timer->base->resolution.tv64)
+		interval.tv64 = timer->base->resolution.tv64;
+
+	if (unlikely(delta.tv64 >= interval.tv64))
+		orun = ktime_divns(delta, ktime_to_ns(interval)) + 1;
+
+	return orun;
+}
+EXPORT_SYMBOL_GPL(hrtimer_overrun);
+
+
 /*
  * enqueue_hrtimer - internal function to (re)start a timer
  *
