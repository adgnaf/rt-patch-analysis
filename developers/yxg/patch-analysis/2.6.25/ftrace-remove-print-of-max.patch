printk from trace irqsoff can cause bugs with locks. Simply don't print there.

Signed-off-by: Steven Rostedt <srostedt@redhat.com>
---
 kernel/trace/trace_irqsoff.c |   16 ----------------
 1 file changed, 16 deletions(-)

Index: linux-2.6.25.4-rt1/kernel/trace/trace_irqsoff.c
===================================================================
--- linux-2.6.25.4-rt1.orig/kernel/trace/trace_irqsoff.c	2008-05-17 08:26:52.000000000 -0400
+++ linux-2.6.25.4-rt1/kernel/trace/trace_irqsoff.c	2008-05-17 08:26:53.000000000 -0400
@@ -165,22 +165,6 @@ check_critical_timing(struct trace_array
 
 	update_max_tr_single(tr, current, cpu);
 
-	if (!runqueue_is_locked()) {
-		if (tracing_thresh) {
-			printk(KERN_INFO "(%16s-%-5d|#%d): %lu us critical"
-			       " section violates %lu us threshold.\n",
-			       current->comm, current->pid,
-			       raw_smp_processor_id(),
-			       latency, nsecs_to_usecs(tracing_thresh));
-		} else {
-			printk(KERN_INFO "(%16s-%-5d|#%d): new %lu us"
-			       " maximum-latency critical section.\n",
-			       current->comm, current->pid,
-			       raw_smp_processor_id(),
-			       latency);
-		}
-	}
-
 	max_sequence++;
 
 out_unlock:
