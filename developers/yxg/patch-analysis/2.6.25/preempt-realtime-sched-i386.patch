---
 arch/x86/kernel/entry_32.S   |   11 +++++++----
 arch/x86/kernel/process_32.c |    4 +++-
 2 files changed, 10 insertions(+), 5 deletions(-)

Index: linux-2.6.25.4-rt1/arch/x86/kernel/entry_32.S
===================================================================
--- linux-2.6.25.4-rt1.orig/arch/x86/kernel/entry_32.S	2008-05-17 08:27:15.000000000 -0400
+++ linux-2.6.25.4-rt1/arch/x86/kernel/entry_32.S	2008-05-17 08:27:33.000000000 -0400
@@ -265,14 +265,18 @@ END(ret_from_exception)
 #ifdef CONFIG_PREEMPT
 ENTRY(resume_kernel)
 	DISABLE_INTERRUPTS(CLBR_ANY)
+	cmpl $0, kernel_preemption
+	jz restore_nocheck
 	cmpl $0,TI_preempt_count(%ebp)	# non-zero preempt_count ?
 	jnz restore_nocheck
 need_resched:
 	movl TI_flags(%ebp), %ecx	# need_resched set ?
 	testb $_TIF_NEED_RESCHED, %cl
-	jz restore_all
+	jz restore_nocheck
 	testl $IF_MASK,PT_EFLAGS(%esp)	# interrupts off (exception path) ?
-	jz restore_all
+	jz restore_nocheck
+	DISABLE_INTERRUPTS(CLBR_ANY)
+
 	call preempt_schedule_irq
 	jmp need_resched
 END(resume_kernel)
@@ -485,12 +489,11 @@ work_pending:
 	testl $(_TIF_NEED_RESCHED|_TIF_NEED_RESCHED_DELAYED), %ecx
 	jz work_notifysig
 work_resched:
-	call schedule
 	LOCKDEP_SYS_EXIT
 	DISABLE_INTERRUPTS(CLBR_ANY)	# make sure we don't miss an interrupt
+	call __schedule
 					# setting need_resched or sigpending
 					# between sampling and the iret
-	TRACE_IRQS_OFF
 	movl TI_flags(%ebp), %ecx
 	andl $_TIF_WORK_MASK, %ecx	# is there any work to be done other
 					# than syscall tracing?
Index: linux-2.6.25.4-rt1/arch/x86/kernel/process_32.c
===================================================================
--- linux-2.6.25.4-rt1.orig/arch/x86/kernel/process_32.c	2008-05-17 08:27:32.000000000 -0400
+++ linux-2.6.25.4-rt1/arch/x86/kernel/process_32.c	2008-05-17 08:27:33.000000000 -0400
@@ -209,10 +209,12 @@ void cpu_idle(void)
 			idle();
 			start_critical_timings();
 		}
+		local_irq_disable();
 		tick_nohz_restart_sched_tick();
 		__preempt_enable_no_resched();
-		schedule();
+		__schedule();
 		preempt_disable();
+		local_irq_enable();
 	}
 }
 
