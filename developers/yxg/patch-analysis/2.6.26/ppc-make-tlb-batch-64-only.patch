From r.schwebel@pengutronix.de Fri Jan 11 21:04:50 2008
Date: Sat, 12 Jan 2008 00:01:22 +0100
From: Robert Schwebel <r.schwebel@pengutronix.de>
To: Steven Rostedt <rostedt@goodmis.org>
Cc: linux-rt-users@vger.kernel.org
Subject: [patch 2.6.24-rc7-rt1-pre1] per_cpu__ppc64_tlb_batch is only for
    64 bit

    [ The following text is in the "iso-8859-15" character set. ]
    [ Your display is set for the "iso-8859-1" character set.  ]
    [ Some special characters may be displayed incorrectly. ]

Fix the following compile error for powerpc32:

arch/powerpc/kernel/process.c: In function '__switch_to':
arch/powerpc/kernel/process.c:355: error: 'per_cpu__ppc64_tlb_batch' undeclared (first use in this function)

Not sure what the code actually does, but as it was not there in -rc5,
somebody else might find something ...

Signed-off-by: Robert Schwebel <r.schwebel@pengutronix.de>

---
 arch/powerpc/kernel/process.c |   10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

Index: linux-2.6.26/arch/powerpc/kernel/process.c
===================================================================
--- linux-2.6.26.orig/arch/powerpc/kernel/process.c
+++ linux-2.6.26/arch/powerpc/kernel/process.c
@@ -269,10 +269,10 @@ struct task_struct *__switch_to(struct t
 	struct thread_struct *new_thread, *old_thread;
 	unsigned long flags;
 	struct task_struct *last;
-#ifdef CONFIG_PREEMPT_RT
+#if defined(CONFIG_PPC64) && defined (CONFIG_PREEMPT_RT)
 	struct ppc64_tlb_batch *batch;
 	int hadbatch;
-#endif /* #ifdef CONFIG_PREEMPT_RT */
+#endif
 
 #ifdef CONFIG_SMP
 	/* avoid complexity of lazy save/restore of fpu
@@ -349,7 +349,6 @@ struct task_struct *__switch_to(struct t
 		old_thread->accum_tb += (current_tb - start_tb);
 		new_thread->start_tb = current_tb;
 	}
-#endif
 
 #ifdef CONFIG_PREEMPT_RT
 	batch = &__get_cpu_var(ppc64_tlb_batch);
@@ -361,6 +360,7 @@ struct task_struct *__switch_to(struct t
 		batch->active = 0;
 	}
 #endif /* #ifdef CONFIG_PREEMPT_RT */
+#endif
 
 	local_irq_save(flags);
 
@@ -378,12 +378,12 @@ struct task_struct *__switch_to(struct t
 
 	local_irq_restore(flags);
 
-#ifdef CONFIG_PREEMPT_RT
+#if defined(CONFIG_PPC64) && defined(CONFIG_PREEMPT_RT)
 	if (hadbatch) {
 		batch = &__get_cpu_var(ppc64_tlb_batch);
 		batch->active = 1;
 	}
-#endif /* #ifdef CONFIG_PREEMPT_RT */
+#endif
 
 	return last;
 }
