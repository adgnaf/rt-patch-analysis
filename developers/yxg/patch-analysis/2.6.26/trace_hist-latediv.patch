---
 kernel/trace/trace_hist.c |   22 +++++++++++++---------
 1 file changed, 13 insertions(+), 9 deletions(-)

Index: linux-2.6.26/kernel/trace/trace_hist.c
===================================================================
--- linux-2.6.26.orig/kernel/trace/trace_hist.c
+++ linux-2.6.26/kernel/trace/trace_hist.c
@@ -37,7 +37,6 @@ enum {
 struct hist_data {
 	atomic_t hist_mode; /* 0 log, 1 don't log */
 	unsigned long min_lat;
-	unsigned long avg_lat;
 	unsigned long max_lat;
 	unsigned long long beyond_hist_bound_samples;
 	unsigned long long accumulate_lat;
@@ -70,7 +69,6 @@ static char *wakeup_latency_hist_dir = "
 void notrace latency_hist(int latency_type, int cpu, unsigned long latency)
 {
 	struct hist_data *my_hist;
-	unsigned long long total_samples;
 
 	if ((cpu < 0) || (cpu >= NR_CPUS) || (latency_type < INTERRUPT_LATENCY)
 			|| (latency_type > WAKEUP_LATENCY) || (latency < 0))
@@ -117,11 +115,8 @@ void notrace latency_hist(int latency_ty
 	else if (latency > my_hist->max_lat)
 		my_hist->max_lat = latency;
 
-	total_samples = my_hist->total_samples++;
+	my_hist->total_samples++;
 	my_hist->accumulate_lat += latency;
-	if (likely(total_samples))
-		my_hist->avg_lat = (unsigned long)
-		    div64_u64(my_hist->accumulate_lat, total_samples);
 	return;
 }
 
@@ -135,16 +130,26 @@ static void *l_start(struct seq_file *m,
 		return NULL;
 
 	if (index == 0) {
+		char avgstr[32];
+
 		atomic_dec(&my_hist->hist_mode);
+		if (likely(my_hist->total_samples)) {
+			unsigned long avg = (unsigned long)
+			    div64_u64(my_hist->accumulate_lat,
+			    my_hist->total_samples);
+			sprintf(avgstr, "%lu", avg);
+		} else
+			strcpy(avgstr, "<undef>");
+
 		seq_printf(m, "#Minimum latency: %lu microseconds.\n"
-			   "#Average latency: %lu microseconds.\n"
+			   "#Average latency: %s microseconds.\n"
 			   "#Maximum latency: %lu microseconds.\n"
 			   "#Total samples: %llu\n"
 			   "#There are %llu samples greater or equal"
 			   " than %d microseconds\n"
 			   "#usecs\t%16s\n"
 			   , my_hist->min_lat
-			   , my_hist->avg_lat
+			   , avgstr
 			   , my_hist->max_lat
 			   , my_hist->total_samples
 			   , my_hist->beyond_hist_bound_samples
@@ -220,7 +225,6 @@ static void hist_reset(struct hist_data 
 	hist->max_lat = 0UL;
 	hist->total_samples = 0ULL;
 	hist->accumulate_lat = 0ULL;
-	hist->avg_lat = 0UL;
 
 	atomic_inc(&hist->hist_mode);
 }
