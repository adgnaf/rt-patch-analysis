---
 drivers/ide/ide-floppy.c   |    4 ++--
 drivers/ide/ide-io.c       |    4 ++--
 drivers/ide/ide-iops.c     |   20 ++++++++++----------
 drivers/ide/ide-lib.c      |    8 +++-----
 drivers/ide/ide-probe.c    |    8 ++++----
 drivers/ide/ide-taskfile.c |    6 +++---
 drivers/ide/pci/alim15x3.c |   12 ++++++------
 drivers/ide/pci/hpt366.c   |    4 ++--
 8 files changed, 32 insertions(+), 34 deletions(-)

Index: linux-2.6.26/drivers/ide/ide-floppy.c
===================================================================
--- linux-2.6.26.orig/drivers/ide/ide-floppy.c
+++ linux-2.6.26/drivers/ide/ide-floppy.c
@@ -1171,9 +1171,9 @@ static int idefloppy_get_format_progress
 		unsigned long flags;
 		u8 stat;
 
-		local_irq_save(flags);
+		local_irq_save_nort(flags);
 		stat = ide_read_status(drive);
-		local_irq_restore(flags);
+		local_irq_restore_nort(flags);
 
 		progress_indication = ((stat & SEEK_STAT) == 0) ? 0 : 0x10000;
 	}
Index: linux-2.6.26/drivers/ide/ide-io.c
===================================================================
--- linux-2.6.26.orig/drivers/ide/ide-io.c
+++ linux-2.6.26/drivers/ide/ide-io.c
@@ -1036,7 +1036,7 @@ static void ide_do_request (ide_hwgroup_
 	ide_get_lock(ide_intr, hwgroup);
 
 	/* caller must own ide_lock */
-	BUG_ON(!irqs_disabled());
+	BUG_ON_NONRT(!irqs_disabled());
 
 	while (!hwgroup->busy) {
 		hwgroup->busy = 1;
@@ -1302,7 +1302,7 @@ void ide_timer_expiry (unsigned long dat
 			disable_irq(hwif->irq);
 			/* local CPU only,
 			 * as if we were handling an interrupt */
-			local_irq_disable();
+			local_irq_disable_nort();
 			if (hwgroup->polling) {
 				startstop = handler(drive);
 			} else if (drive_is_ready(drive)) {
Index: linux-2.6.26/drivers/ide/ide-iops.c
===================================================================
--- linux-2.6.26.orig/drivers/ide/ide-iops.c
+++ linux-2.6.26/drivers/ide/ide-iops.c
@@ -256,7 +256,7 @@ static void ata_input_data(ide_drive_t *
 		unsigned long uninitialized_var(flags);
 
 		if ((io_32bit & 2) && !mmio) {
-			local_irq_save(flags);
+			local_irq_save_nort(flags);
 			ata_vlb_sync(io_ports->nsect_addr);
 		}
 
@@ -266,7 +266,7 @@ static void ata_input_data(ide_drive_t *
 			insl(data_addr, buf, len / 4);
 
 		if ((io_32bit & 2) && !mmio)
-			local_irq_restore(flags);
+			local_irq_restore_nort(flags);
 
 		if ((len & 3) >= 2) {
 			if (mmio)
@@ -299,7 +299,7 @@ static void ata_output_data(ide_drive_t 
 		unsigned long uninitialized_var(flags);
 
 		if ((io_32bit & 2) && !mmio) {
-			local_irq_save(flags);
+			local_irq_save_nort(flags);
 			ata_vlb_sync(io_ports->nsect_addr);
 		}
 
@@ -309,7 +309,7 @@ static void ata_output_data(ide_drive_t 
 			outsl(data_addr, buf, len / 4);
 
 		if ((io_32bit & 2) && !mmio)
-			local_irq_restore(flags);
+			local_irq_restore_nort(flags);
 
 		if ((len & 3) >= 2) {
 			if (mmio)
@@ -537,12 +537,12 @@ static int __ide_wait_stat(ide_drive_t *
 				if (!(stat & BUSY_STAT))
 					break;
 
-				local_irq_restore(flags);
+				local_irq_restore_nort(flags);
 				*rstat = stat;
 				return -EBUSY;
 			}
 		}
-		local_irq_restore(flags);
+		local_irq_restore_nort(flags);
 	}
 	/*
 	 * Allow status to settle, then read it again.
@@ -711,17 +711,17 @@ int ide_driveid_update(ide_drive_t *driv
 		printk("%s: CHECK for good STATUS\n", drive->name);
 		return 0;
 	}
-	local_irq_save(flags);
+	local_irq_save_nort(flags);
 	SELECT_MASK(drive, 0);
 	id = kmalloc(SECTOR_WORDS*4, GFP_ATOMIC);
 	if (!id) {
-		local_irq_restore(flags);
+		local_irq_restore_nort(flags);
 		return 0;
 	}
 	hwif->input_data(drive, NULL, id, SECTOR_SIZE);
 	(void)ide_read_status(drive);	/* clear drive IRQ */
-	local_irq_enable();
-	local_irq_restore(flags);
+	local_irq_enable_nort();
+	local_irq_restore_nort(flags);
 	ide_fix_driveid(id);
 	if (id) {
 		drive->id->dma_ultra = id->dma_ultra;
Index: linux-2.6.26/drivers/ide/ide-lib.c
===================================================================
--- linux-2.6.26.orig/drivers/ide/ide-lib.c
+++ linux-2.6.26/drivers/ide/ide-lib.c
@@ -438,14 +438,15 @@ int ide_set_xfer_rate(ide_drive_t *drive
 
 static void ide_dump_opcode(ide_drive_t *drive)
 {
+	unsigned long flags;
 	struct request *rq;
 	ide_task_t *task = NULL;
 
-	spin_lock(&ide_lock);
+	spin_lock_irqsave(&ide_lock, flags);
 	rq = NULL;
 	if (HWGROUP(drive))
 		rq = HWGROUP(drive)->rq;
-	spin_unlock(&ide_lock);
+	spin_unlock_irqrestore(&ide_lock, flags);
 	if (!rq)
 		return;
 
@@ -543,10 +544,8 @@ static void ide_dump_atapi_error(ide_dri
 
 u8 ide_dump_status(ide_drive_t *drive, const char *msg, u8 stat)
 {
-	unsigned long flags;
 	u8 err = 0;
 
-	local_irq_save(flags);
 	printk("%s: %s: status=0x%02x { ", drive->name, msg, stat);
 	if (stat & BUSY_STAT)
 		printk("Busy ");
@@ -569,7 +568,6 @@ u8 ide_dump_status(ide_drive_t *drive, c
 			ide_dump_atapi_error(drive, err);
 	}
 	ide_dump_opcode(drive);
-	local_irq_restore(flags);
 	return err;
 }
 
Index: linux-2.6.26/drivers/ide/ide-probe.c
===================================================================
--- linux-2.6.26.orig/drivers/ide/ide-probe.c
+++ linux-2.6.26/drivers/ide/ide-probe.c
@@ -127,7 +127,7 @@ static inline void do_identify (ide_driv
 	hwif->input_data(drive, NULL, id, SECTOR_SIZE);
 
 	drive->id_read = 1;
-	local_irq_enable();
+	local_irq_enable_nort();
 #ifdef DEBUG
 	printk(KERN_INFO "%s: dumping identify data\n", drive->name);
 	ide_dump_identify((u8 *)id);
@@ -316,14 +316,14 @@ static int actual_try_to_identify (ide_d
 		unsigned long flags;
 
 		/* local CPU only; some systems need this */
-		local_irq_save(flags);
+		local_irq_save_nort(flags);
 		/* drive returned ID */
 		do_identify(drive, cmd);
 		/* drive responded with ID */
 		rc = 0;
 		/* clear drive IRQ */
 		(void)ide_read_status(drive);
-		local_irq_restore(flags);
+		local_irq_restore_nort(flags);
 	} else {
 		/* drive refused ID */
 		rc = 2;
@@ -796,7 +796,7 @@ static int ide_probe_port(ide_hwif_t *hw
 			rc = 0;
 	}
 
-	local_irq_restore(flags);
+	local_irq_restore_nort(flags);
 
 	/*
 	 * Use cached IRQ number. It might be (and is...) changed by probe
Index: linux-2.6.26/drivers/ide/ide-taskfile.c
===================================================================
--- linux-2.6.26.orig/drivers/ide/ide-taskfile.c
+++ linux-2.6.26/drivers/ide/ide-taskfile.c
@@ -270,7 +270,7 @@ static void ide_pio_sector(ide_drive_t *
 	offset %= PAGE_SIZE;
 
 #ifdef CONFIG_HIGHMEM
-	local_irq_save(flags);
+	local_irq_save_nort(flags);
 #endif
 	buf = kmap_atomic(page, KM_BIO_SRC_IRQ) + offset;
 
@@ -290,7 +290,7 @@ static void ide_pio_sector(ide_drive_t *
 
 	kunmap_atomic(buf, KM_BIO_SRC_IRQ);
 #ifdef CONFIG_HIGHMEM
-	local_irq_restore(flags);
+	local_irq_restore_nort(flags);
 #endif
 }
 
@@ -482,7 +482,7 @@ static ide_startstop_t pre_task_out_intr
 	}
 
 	if (!drive->unmask)
-		local_irq_disable();
+		local_irq_disable_nort();
 
 	ide_set_handler(drive, &task_out_intr, WAIT_WORSTCASE, NULL);
 	ide_pio_datablock(drive, rq, 1);
Index: linux-2.6.26/drivers/ide/pci/alim15x3.c
===================================================================
--- linux-2.6.26.orig/drivers/ide/pci/alim15x3.c
+++ linux-2.6.26/drivers/ide/pci/alim15x3.c
@@ -92,7 +92,7 @@ static void ali_set_pio_mode(ide_drive_t
 		if (r_clc >= 16)
 			r_clc = 0;
 	}
-	local_irq_save(flags);
+	local_irq_save_nort(flags);
 	
 	/* 
 	 * PIO mode => ATA FIFO on, ATAPI FIFO off
@@ -114,7 +114,7 @@ static void ali_set_pio_mode(ide_drive_t
 	
 	pci_write_config_byte(dev, port, s_clc);
 	pci_write_config_byte(dev, port+drive->select.b.unit+2, (a_clc << 4) | r_clc);
-	local_irq_restore(flags);
+	local_irq_restore_nort(flags);
 }
 
 /**
@@ -225,7 +225,7 @@ static unsigned int __devinit init_chips
 
 	isa_dev = pci_get_device(PCI_VENDOR_ID_AL, PCI_DEVICE_ID_AL_M1533, NULL);
 
-	local_irq_save(flags);
+	local_irq_save_nort(flags);
 
 	if (m5229_revision < 0xC2) {
 		/*
@@ -316,7 +316,7 @@ out:
 	}
 	pci_dev_put(north);
 	pci_dev_put(isa_dev);
-	local_irq_restore(flags);
+	local_irq_restore_nort(flags);
 	return 0;
 }
 
@@ -378,7 +378,7 @@ static u8 __devinit ali_cable_detect(ide
 	unsigned long flags;
 	u8 cbl = ATA_CBL_PATA40, tmpbyte;
 
-	local_irq_save(flags);
+	local_irq_save_nort(flags);
 
 	if (m5229_revision >= 0xC2) {
 		/*
@@ -399,7 +399,7 @@ static u8 __devinit ali_cable_detect(ide
 		}
 	}
 
-	local_irq_restore(flags);
+	local_irq_restore_nort(flags);
 
 	return cbl;
 }
Index: linux-2.6.26/drivers/ide/pci/hpt366.c
===================================================================
--- linux-2.6.26.orig/drivers/ide/pci/hpt366.c
+++ linux-2.6.26/drivers/ide/pci/hpt366.c
@@ -1326,7 +1326,7 @@ static int __devinit init_dma_hpt366(ide
 
 	dma_old = inb(base + 2);
 
-	local_irq_save(flags);
+	local_irq_save_nort(flags);
 
 	dma_new = dma_old;
 	pci_read_config_byte(dev, hwif->channel ? 0x4b : 0x43, &masterdma);
@@ -1337,7 +1337,7 @@ static int __devinit init_dma_hpt366(ide
 	if (dma_new != dma_old)
 		outb(dma_new, base + 2);
 
-	local_irq_restore(flags);
+	local_irq_restore_nort(flags);
 
 	printk(KERN_INFO "    %s: BM-DMA at 0x%04lx-0x%04lx\n",
 			 hwif->name, base, base + 7);
