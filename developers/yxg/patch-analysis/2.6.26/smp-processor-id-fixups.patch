---
 include/linux/netpoll.h |    2 +-
 kernel/hrtimer.c        |    5 ++++-
 kernel/workqueue.c      |    2 +-
 3 files changed, 6 insertions(+), 3 deletions(-)

Index: linux-2.6.26/include/linux/netpoll.h
===================================================================
--- linux-2.6.26.orig/include/linux/netpoll.h
+++ linux-2.6.26/include/linux/netpoll.h
@@ -77,7 +77,7 @@ static inline void *netpoll_poll_lock(st
 	rcu_read_lock(); /* deal with race on ->npinfo */
 	if (dev && dev->npinfo) {
 		spin_lock(&napi->poll_lock);
-		napi->poll_owner = smp_processor_id();
+		napi->poll_owner = raw_smp_processor_id();
 		return napi;
 	}
 	return NULL;
Index: linux-2.6.26/kernel/hrtimer.c
===================================================================
--- linux-2.6.26.orig/kernel/hrtimer.c
+++ linux-2.6.26/kernel/hrtimer.c
@@ -1409,7 +1409,10 @@ void hrtimer_interrupt(struct clock_even
 
 static void run_hrtimer_softirq(struct softirq_action *h)
 {
-	run_hrtimer_pending(&__get_cpu_var(hrtimer_bases));
+	struct hrtimer_cpu_base *cpu_base;
+
+	cpu_base = &per_cpu(hrtimer_bases, raw_smp_processor_id());
+	run_hrtimer_pending(cpu_base);
 }
 
 #endif	/* CONFIG_HIGH_RES_TIMERS */
Index: linux-2.6.26/kernel/workqueue.c
===================================================================
--- linux-2.6.26.orig/kernel/workqueue.c
+++ linux-2.6.26/kernel/workqueue.c
@@ -185,7 +185,7 @@ static void delayed_work_timer_fn(unsign
 	struct cpu_workqueue_struct *cwq = get_wq_data(&dwork->work);
 	struct workqueue_struct *wq = cwq->wq;
 
-	__queue_work(wq_per_cpu(wq, smp_processor_id()), &dwork->work);
+	__queue_work(wq_per_cpu(wq, raw_smp_processor_id()), &dwork->work);
 }
 
 /**
