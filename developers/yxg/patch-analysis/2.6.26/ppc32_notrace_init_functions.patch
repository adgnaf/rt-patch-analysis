Subject: don't trace early init functions for ppc32
By: Luotao Fu <l.fu@pengutronix.de>
  If the latency tracer is turned on in the kernel config, _mcount calls are
  added automatically to every function call during compiling since -pg
  compiling flag is set. _mcount() checks first the variable mcount_enabled.
  (see implementation of _mcount() in arch/powerpc/kernel/entry_32.S) This will
  stuck forever if _mcount is called before mcount_enabled is initialized. Hence
  we mark some init functions as notrace, so that _mcount calls are not added to
  these functions.

Signed-off-by: Luotao Fu <l.fu@pengutronix.de>

---
 arch/powerpc/kernel/cputable.c |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

Index: linux-2.6.26/arch/powerpc/kernel/cputable.c
===================================================================
--- linux-2.6.26.orig/arch/powerpc/kernel/cputable.c
+++ linux-2.6.26/arch/powerpc/kernel/cputable.c
@@ -1541,7 +1541,7 @@ static struct cpu_spec __initdata cpu_sp
 
 static struct cpu_spec the_cpu_spec;
 
-struct cpu_spec * __init identify_cpu(unsigned long offset, unsigned int pvr)
+notrace struct cpu_spec * __init identify_cpu(unsigned long offset, unsigned int pvr)
 {
 	struct cpu_spec *s = cpu_specs;
 	struct cpu_spec *t = &the_cpu_spec;
@@ -1588,7 +1588,7 @@ struct cpu_spec * __init identify_cpu(un
 	return NULL;
 }
 
-void do_feature_fixups(unsigned long value, void *fixup_start, void *fixup_end)
+notrace void do_feature_fixups(unsigned long value, void *fixup_start, void *fixup_end)
 {
 	struct fixup_entry {
 		unsigned long	mask;
