Subject: clockevents: Allow build w/o run-tine usage for migration purposes

Migration aid to allow preparatory patches which introduce not yet
used parts of clock events code.

Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

---
 include/linux/clockchips.h |    8 ++++++--
 kernel/time/Kconfig        |    5 +++++
 kernel/time/Makefile       |    2 +-
 kernel/time/clockevents.c  |    3 ++-
 4 files changed, 14 insertions(+), 4 deletions(-)

Index: linux-2.6.23-rt1/kernel/time/Kconfig
===================================================================
--- linux-2.6.23-rt1.orig/kernel/time/Kconfig	2007-10-11 15:58:16.000000000 -0400
+++ linux-2.6.23-rt1/kernel/time/Kconfig	2007-10-11 15:59:48.000000000 -0400
@@ -23,3 +23,8 @@ config HIGH_RES_TIMERS
 	  hardware is not capable then this option only increases
 	  the size of the kernel image.
 
+config GENERIC_CLOCKEVENTS_BUILD
+	bool
+	default y
+	depends on GENERIC_CLOCKEVENTS || GENERIC_CLOCKEVENTS_MIGR
+
Index: linux-2.6.23-rt1/kernel/time/Makefile
===================================================================
--- linux-2.6.23-rt1.orig/kernel/time/Makefile	2007-10-11 15:58:16.000000000 -0400
+++ linux-2.6.23-rt1/kernel/time/Makefile	2007-10-11 15:59:48.000000000 -0400
@@ -1,6 +1,6 @@
 obj-y += timekeeping.o ntp.o clocksource.o jiffies.o timer_list.o
 
-obj-$(CONFIG_GENERIC_CLOCKEVENTS)		+= clockevents.o
+obj-$(CONFIG_GENERIC_CLOCKEVENTS_BUILD)		+= clockevents.o
 obj-$(CONFIG_GENERIC_CLOCKEVENTS)		+= tick-common.o
 obj-$(CONFIG_GENERIC_CLOCKEVENTS_BROADCAST)	+= tick-broadcast.o
 obj-$(CONFIG_TICK_ONESHOT)			+= tick-oneshot.o
Index: linux-2.6.23-rt1/include/linux/clockchips.h
===================================================================
--- linux-2.6.23-rt1.orig/include/linux/clockchips.h	2007-10-11 15:59:48.000000000 -0400
+++ linux-2.6.23-rt1/include/linux/clockchips.h	2007-10-11 15:59:48.000000000 -0400
@@ -8,7 +8,7 @@
 #ifndef _LINUX_CLOCKCHIPS_H
 #define _LINUX_CLOCKCHIPS_H
 
-#ifdef CONFIG_GENERIC_CLOCKEVENTS
+#ifdef CONFIG_GENERIC_CLOCKEVENTS_BUILD
 
 #include <linux/clocksource.h>
 #include <linux/cpumask.h>
@@ -126,9 +126,13 @@ extern int clockevents_register_notifier
 extern int clockevents_program_event(struct clock_event_device *dev,
 				     ktime_t expires, ktime_t now);
 
+#ifdef CONFIG_GENERIC_CLOCKEVENTS
 extern void clockevents_notify(unsigned long reason, void *arg);
-
 #else
+# define clockevents_notify(reason, arg) do { } while (0)
+#endif
+
+#else /* CONFIG_GENERIC_CLOCKEVENTS_BUILD */
 
 #define clockevents_notify(reason, arg) do { } while (0)
 
Index: linux-2.6.23-rt1/kernel/time/clockevents.c
===================================================================
--- linux-2.6.23-rt1.orig/kernel/time/clockevents.c	2007-10-11 15:58:16.000000000 -0400
+++ linux-2.6.23-rt1/kernel/time/clockevents.c	2007-10-11 15:59:48.000000000 -0400
@@ -194,6 +194,7 @@ void clockevents_exchange_device(struct 
 	local_irq_restore(flags);
 }
 
+#ifdef CONFIG_GENERIC_CLOCKEVENTS
 /**
  * clockevents_notify - notification about relevant events
  */
@@ -222,4 +223,4 @@ void clockevents_notify(unsigned long re
 	spin_unlock(&clockevents_lock);
 }
 EXPORT_SYMBOL_GPL(clockevents_notify);
-
+#endif
