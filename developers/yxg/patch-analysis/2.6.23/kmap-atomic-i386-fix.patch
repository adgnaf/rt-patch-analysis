---
 arch/i386/mm/highmem.c     |    2 +-
 include/asm-i386/highmem.h |    6 +++---
 2 files changed, 4 insertions(+), 4 deletions(-)

Index: linux-2.6.23-rt1/arch/i386/mm/highmem.c
===================================================================
--- linux-2.6.23-rt1.orig/arch/i386/mm/highmem.c	2007-10-11 16:01:10.000000000 -0400
+++ linux-2.6.23-rt1/arch/i386/mm/highmem.c	2007-10-11 16:01:11.000000000 -0400
@@ -3,9 +3,9 @@
 
 void *kmap(struct page *page)
 {
-	might_sleep();
 	if (!PageHighMem(page))
 		return page_address(page);
+	might_sleep();
 	return kmap_high(page);
 }
 
Index: linux-2.6.23-rt1/include/asm-i386/highmem.h
===================================================================
--- linux-2.6.23-rt1.orig/include/asm-i386/highmem.h	2007-10-11 16:00:49.000000000 -0400
+++ linux-2.6.23-rt1/include/asm-i386/highmem.h	2007-10-11 16:01:11.000000000 -0400
@@ -94,10 +94,10 @@ struct page *kmap_atomic_to_page(void *p
  * on PREEMPT_RT kmap_atomic() is a wrapper that uses kmap():
  */
 #ifdef CONFIG_PREEMPT_RT
-# define kmap_atomic_prot(page, type, prot)	kmap(page)
-# define kmap_atomic(page, type)	kmap(page)
+# define kmap_atomic_prot(page, type, prot)	({ pagefault_disable(); kmap(page); })
+# define kmap_atomic(page, type)	({ pagefault_disable(); kmap(page); })
 # define kmap_atomic_pfn(pfn, type)	kmap(pfn_to_page(pfn))
-# define kunmap_atomic(kvaddr, type)	kunmap_virt(kvaddr)
+# define kunmap_atomic(kvaddr, type)	do { pagefault_enable(); kunmap_virt(kvaddr); } while(0)
 # define kmap_atomic_to_page(kvaddr)	kmap_to_page(kvaddr)
 #else
 # define kmap_atomic_prot(page, type, prot)	__kmap_atomic_prot(page, type, prot)
