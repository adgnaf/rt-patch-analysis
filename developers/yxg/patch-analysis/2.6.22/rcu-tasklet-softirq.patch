From rostedt@goodmis.org Thu Jun  7 20:27:13 2007
Return-Path: <rostedt@goodmis.org>
X-Spam-Checker-Version: SpamAssassin 3.1.7-deb (2006-10-05) on debian
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=AWL autolearn=unavailable 
	version=3.1.7-deb
Received: from ms-smtp-01.nyroc.rr.com (ms-smtp-01.nyroc.rr.com
	[24.24.2.55]) by mail.tglx.de (Postfix) with ESMTP id 54F5565C065 for
	<tglx@linutronix.de>; Thu,  7 Jun 2007 20:27:13 +0200 (CEST)
Received: from gandalf.stny.rr.com (cpe-24-94-51-176.stny.res.rr.com
	[24.94.51.176]) by ms-smtp-01.nyroc.rr.com (8.13.6/8.13.6) with ESMTP id
	l57IQx5O029876; Thu, 7 Jun 2007 14:26:59 -0400 (EDT)
Received: from localhost ([127.0.0.1] helo=localhost.localdomain
	ident=rostedt) by gandalf.stny.rr.com with esmtp (Exim 4.63) (envelope-from
	<rostedt@goodmis.org>) id 1HwMhH-0003aS-Ab; Thu, 07 Jun 2007 14:26:59 -0400
Subject: [PATCH RT] convert RCU Preempt tasklet into softirq.
From: Steven Rostedt <rostedt@goodmis.org>
To: paulmck@linux.vnet.ibm.com
Cc: john stultz <johnstul@us.ibm.com>, Ingo Molnar <mingo@elte.hu>, Thomas Gleixner <tglx@linutronix.de>, Oleg Nesterov <oleg@tv-sign.ru>, LKML <linux-kernel@vger.kernel.org>, Dipankar Sarma <dipankar@in.ibm.com>, RT <linux-rt-users@vger.kernel.org>
In-Reply-To: <20070607161754.GA11941@linux.vnet.ibm.com>
References: <1181180051.18444.31.camel@localhost.localdomain>
	 <20070607041411.GB1783@linux.vnet.ibm.com>
	 <1181226138.18444.54.camel@localhost.localdomain>
	 <20070607161754.GA11941@linux.vnet.ibm.com>
Content-Type: text/plain
Date: Thu, 07 Jun 2007 14:26:59 -0400
Message-Id: <1181240819.10408.14.camel@localhost.localdomain>
Mime-Version: 1.0
X-Mailer: Evolution 2.6.3 
X-Virus-Scanned: Symantec AntiVirus Scan Engine
X-Evolution-Source: imap://tglx%40linutronix.de@localhost:8993/
Content-Transfer-Encoding: 8bit

Following Dipankar's lead, I converted the tasklet in rcupreempt.c into
a softirq.

I've compiled and booted with this patch, but ran no other tests.

Paul,  I'm disappointed, this was so trivial I didn't get a chance to
learn anything ;-)


Signed-off-by: Steven Rostedt <rostedt@goodmis.org>

---
 include/linux/rcupreempt.h |    4 +++-
 kernel/rcupreempt.c        |    7 +++----
 2 files changed, 6 insertions(+), 5 deletions(-)

Index: linux-rt.q/include/linux/rcupreempt.h
===================================================================
--- linux-rt.q.orig/include/linux/rcupreempt.h
+++ linux-rt.q/include/linux/rcupreempt.h
@@ -63,7 +63,9 @@ extern void rcu_check_callbacks(int cpu,
 extern void rcu_restart_cpu(int cpu);
 extern long rcu_batches_completed(void);
 
-extern void rcu_process_callbacks(unsigned long unused);
+struct softirq_action;
+
+extern void rcu_process_callbacks(struct softirq_action *unused);
 
 #endif /* __KERNEL__ */
 #endif /* __LINUX_RCUPREEMPT_H */
Index: linux-rt.q/kernel/rcupreempt.c
===================================================================
--- linux-rt.q.orig/kernel/rcupreempt.c
+++ linux-rt.q/kernel/rcupreempt.c
@@ -57,7 +57,6 @@
 struct rcu_data {
 	spinlock_t	lock;
 	long		completed;	/* Number of last completed batch. */
-	struct tasklet_struct rcu_tasklet;
 	struct rcu_head *nextlist;
 	struct rcu_head **nexttail;
 	struct rcu_head *waitlist;
@@ -255,7 +254,7 @@ void rcu_check_callbacks(int cpu, int us
 		spin_unlock_irqrestore(&rcu_data.lock, oldirq);
 	} else {
 		spin_unlock_irqrestore(&rcu_data.lock, oldirq);
-		tasklet_schedule(&rcu_data.rcu_tasklet);
+		raise_softirq(RCU_SOFTIRQ);
 	}
 }
 
@@ -279,7 +278,7 @@ void rcu_advance_callbacks(int cpu, int 
 	spin_unlock_irqrestore(&rcu_data.lock, oldirq);
 }
 
-void rcu_process_callbacks(unsigned long unused)
+void rcu_process_callbacks(struct softirq_action *unused)
 {
 	unsigned long flags;
 	struct rcu_head *next, *list;
@@ -367,7 +366,7 @@ void __init __rcu_init(void)
 	rcu_data.waittail = &rcu_data.waitlist;
 	rcu_data.donelist = NULL;
 	rcu_data.donetail = &rcu_data.donelist;
-	tasklet_init(&rcu_data.rcu_tasklet, rcu_process_callbacks, 0UL);
+	open_softirq(RCU_SOFTIRQ, rcu_process_callbacks, NULL);
 }
 
 /*
