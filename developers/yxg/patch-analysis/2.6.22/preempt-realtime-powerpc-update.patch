---
 arch/powerpc/Kconfig.debug         |    4 ++++
 arch/powerpc/kernel/idle.c         |    2 +-
 include/asm-powerpc/hw_irq.h       |    2 +-
 include/asm-powerpc/pmac_feature.h |    2 +-
 4 files changed, 7 insertions(+), 3 deletions(-)

Index: linux-rt.q/arch/powerpc/Kconfig.debug
===================================================================
--- linux-rt.q.orig/arch/powerpc/Kconfig.debug
+++ linux-rt.q/arch/powerpc/Kconfig.debug
@@ -2,6 +2,10 @@ menu "Kernel hacking"
 
 source "lib/Kconfig.debug"
 
+config TRACE_IRQFLAGS_SUPPORT
+	bool
+	default y
+
 config DEBUG_STACKOVERFLOW
 	bool "Check for stack overflows"
 	depends on DEBUG_KERNEL
Index: linux-rt.q/arch/powerpc/kernel/idle.c
===================================================================
--- linux-rt.q.orig/arch/powerpc/kernel/idle.c
+++ linux-rt.q/arch/powerpc/kernel/idle.c
@@ -100,7 +100,7 @@ void cpu_idle(void)
 
 		tick_nohz_restart_sched_tick();
 
-		preempt_enable_no_resched();
+		__preempt_enable_no_resched();
 		schedule();
 		preempt_disable();
 	}
Index: linux-rt.q/include/asm-powerpc/hw_irq.h
===================================================================
--- linux-rt.q.orig/include/asm-powerpc/hw_irq.h
+++ linux-rt.q/include/asm-powerpc/hw_irq.h
@@ -120,7 +120,7 @@ static inline void raw_local_irq_save_pt
 #define hard_irq_enable()	local_irq_enable()
 #define hard_irq_disable()	local_irq_disable()
 
-#include <linux/trace_irqflags.h>
+#include <linux/irqflags.h>
 
 #endif /* CONFIG_PPC64 */
 
Index: linux-rt.q/include/asm-powerpc/pmac_feature.h
===================================================================
--- linux-rt.q.orig/include/asm-powerpc/pmac_feature.h
+++ linux-rt.q/include/asm-powerpc/pmac_feature.h
@@ -378,7 +378,7 @@ extern struct macio_chip* macio_find(str
  * Those are exported by pmac feature for internal use by arch code
  * only like the platform function callbacks, do not use directly in drivers
  */
-extern spinlock_t feature_lock;
+extern raw_spinlock_t feature_lock;
 extern struct device_node *uninorth_node;
 extern u32 __iomem *uninorth_base;
 
