From us15@os.inf.tu-dresden.de Tue Jun 12 14:31:48 2007
Return-Path: <us15@os.inf.tu-dresden.de>
X-Spam-Checker-Version: SpamAssassin 3.1.7-deb (2006-10-05) on debian
X-Spam-Level: 
X-Spam-Status: No, score=0.2 required=5.0 tests=AWL,MAILTO_TO_SPAM_ADDR 
	autolearn=no version=3.1.7-deb
Received: from os.inf.tu-dresden.de (os.inf.tu-dresden.de [141.76.48.99])
	(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits)) (No client
	certificate requested) by mail.tglx.de (Postfix) with ESMTP id 13C2565C292
	for <tglx@linutronix.de>; Tue, 12 Jun 2007 14:31:48 +0200 (CEST)
Received: from nova.inf.tu-dresden.de ([141.76.48.73]
	helo=laptop.hypervisor.org) by os.inf.tu-dresden.de with esmtpsa
	(TLSv1:AES256-SHA:256) (Exim 4.67) id 1Hy5XI-0008Nr-CO for
	tglx@linutronix.de; Tue, 12 Jun 2007 14:31:48 +0200
Date: Tue, 12 Jun 2007 14:31:47 +0200
From: "Udo A. Steinberg" <us15@os.inf.tu-dresden.de>
To: Thomas Gleixner <tglx@linutronix.de>
Subject: [PATCH]: Force enable HPET on VT8235/8237 chipsets
Message-ID: <20070612143147.2a6199c2@laptop.hypervisor.org>
X-Mailer: X-Mailer 5.0 Gold
Mime-Version: 1.0
Content-Type: multipart/signed; boundary=Sig_48zpQdK28xw1yvtSEbZ9tfp; protocol="application/pgp-signature"; micalg=PGP-SHA1
X-Evolution-Source: imap://tglx%40linutronix.de@localhost:8993/

--Sig_48zpQdK28xw1yvtSEbZ9tfp
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: quoted-printable


This patch adds quirks to force enable HPET on Via VT8235 and VT8237 chipse=
ts.
The datasheet for 8237 documents HPET functionality (although wrongly) wher=
eas
HPET is undocumented for 8235.

Tested on A7V880 (8237) and K7VT4A+ (8235) boards.

Signed-off-by: Udo A. Steinberg <us15@os.inf.tu-dresden.de>

---
quirks.c |   67 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++=
+++-
1 file changed, 66 insertions(+), 1 deletion(-)

---
 arch/i386/kernel/quirks.c |   68 +++++++++++++++++++++++++++++++++++++++++++++-
 1 file changed, 67 insertions(+), 1 deletion(-)

Index: linux-rt.q/arch/i386/kernel/quirks.c
===================================================================
--- linux-rt.q.orig/arch/i386/kernel/quirks.c
+++ linux-rt.q/arch/i386/kernel/quirks.c
@@ -56,7 +56,8 @@ unsigned long force_hpet_address;
 static enum {
 	NONE_FORCE_HPET_RESUME,
 	OLD_ICH_FORCE_HPET_RESUME,
-	ICH_FORCE_HPET_RESUME
+	ICH_FORCE_HPET_RESUME,
+	VT8237_FORCE_HPET_RESUME
 } force_hpet_resume_type;
 
 static void __iomem *rcba_base;
@@ -245,6 +246,68 @@ DECLARE_PCI_FIXUP_HEADER(PCI_VENDOR_ID_I
 DECLARE_PCI_FIXUP_HEADER(PCI_VENDOR_ID_INTEL, PCI_DEVICE_ID_INTEL_82801EB_12,
                          old_ich_force_enable_hpet);
 
+
+static void vt8237_force_hpet_resume(void)
+{
+	u32 val;
+
+	if (!force_hpet_address || !cached_dev)
+		return;
+
+	val = 0xfed00000 | 0x80;
+	pci_write_config_dword(cached_dev, 0x68, val);
+
+	pci_read_config_dword(cached_dev, 0x68, &val);
+	if (val & 0x80)
+		printk(KERN_DEBUG "Force enabled HPET at resume\n");
+	else
+		BUG();
+}
+
+static void vt8237_force_enable_hpet(struct pci_dev *dev)
+{
+	u32 val;
+
+	if (hpet_address || force_hpet_address)
+		return;
+
+	pci_read_config_dword(dev, 0x68, &val);
+	/*
+	 * Bit 7 is HPET enable bit.
+	 * Bit 31:10 is HPET base address (contrary to what datasheet claims)
+	 */
+	if (val & 0x80) {
+		force_hpet_address = (val & ~0x3ff);
+		printk(KERN_DEBUG "HPET at base address 0x%lx\n",
+			       force_hpet_address);
+		return;
+	}
+
+	/*
+	 * HPET is disabled. Trying enabling at FED00000 and check
+	 * whether it sticks
+	 */
+	val = 0xfed00000 | 0x80;
+	pci_write_config_dword(dev, 0x68, val);
+
+	pci_read_config_dword(dev, 0x68, &val);
+	if (val & 0x80) {
+		force_hpet_address = (val & ~0x3ff);
+		printk(KERN_DEBUG "Force enabled HPET at base address 0x%lx\n",
+			       force_hpet_address);
+		cached_dev = dev;
+		force_hpet_resume_type = VT8237_FORCE_HPET_RESUME;
+		return;
+	}
+
+	printk(KERN_DEBUG "Failed to force enable HPET\n");
+}
+
+DECLARE_PCI_FIXUP_HEADER(PCI_VENDOR_ID_VIA, PCI_DEVICE_ID_VIA_8235,
+			 vt8237_force_enable_hpet);
+DECLARE_PCI_FIXUP_HEADER(PCI_VENDOR_ID_VIA, PCI_DEVICE_ID_VIA_8237,
+			 vt8237_force_enable_hpet);
+
 void force_hpet_resume(void)
 {
 	switch (force_hpet_resume_type) {
@@ -254,6 +317,9 @@ void force_hpet_resume(void)
 	    case OLD_ICH_FORCE_HPET_RESUME:
 		return old_ich_force_hpet_resume();
 
+	    case VT8237_FORCE_HPET_RESUME:
+		return vt8237_force_hpet_resume();
+
 	    default:
 		break;
 	}
