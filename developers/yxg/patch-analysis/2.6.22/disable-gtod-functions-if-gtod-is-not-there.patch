From matsu@igel.co.jp Mon Jun 18 18:14:51 2007
Return-Path: <matsu@igel.co.jp>
X-Spam-Checker-Version: SpamAssassin 3.1.7-deb (2006-10-05) on debian
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=unavailable 
	version=3.1.7-deb
Received: from mailhost.igel.co.jp (mailhost.igel.co.jp [219.106.231.130])
	by mail.tglx.de (Postfix) with ESMTP id 7B29365C065 for
	<tglx@linutronix.de>; Mon, 18 Jun 2007 18:14:51 +0200 (CEST)
Received: from localhost (vpn1.hq.igel.co.jp [192.168.1.113]) by
	mailhost.igel.co.jp (Postfix) with ESMTP id 2115968069; Tue, 19 Jun 2007
	01:14:42 +0900 (JST)
Date: Tue, 19 Jun 2007 01:14:40 +0900 (JST)
Message-Id: <20070619.011440.260207451.matsu@igel.co.jp>
To: tglx@linutronix.de
Cc: nelsoneci@gmail.com, mingo@elte.hu, linux-kernel@vger.kernel.org, linux-rt-users@vger.kernel.org
Subject: Re: v2.6.21.4-rt11
From: Katsuya MATSUBARA <matsu@igel.co.jp>
In-Reply-To: <1182099558.8176.436.camel@chaos>
References: <1182098605.8176.422.camel@chaos>
	 <2accc2ff0706170949j26c391aek7ed32e0e55d9a3d1@mail.gmail.com>
	 <1182099558.8176.436.camel@chaos>
X-Mailer: Mew version 5.2 on Emacs 21.3.50 / Mule 5.0 (SAKAKI)
Mime-Version: 1.0
Content-Type: Text/Plain; charset=us-ascii
X-Evolution-Source: imap://tglx%40linutronix.de@localhost:8993/
Content-Transfer-Encoding: 8bit


From: Thomas Gleixner <tglx@linutronix.de>
Date: Sun, 17 Jun 2007 18:59:18 +0200

> On Sun, 2007-06-17 at 11:49 -0500, Nelson Castillo wrote:
> > > > There are many choices and
> > > > I don't know what is the more friendly. By friendly I mean the one that
> > > > is likely to be merged and that cooperate with you.
> > >
> > > Which choices do you mean ?
> > 
> > I mean implementations. I've seen lot of them but i don't know which one
> > to try (I'm new to RT and the implementation in this thread seems to
> > be very nice).
> 
> Thanks :)
> 
> > > >   http://people.redhat.com/mingo/realtime-preempt/patch-2.6.21.4-rt14
> > > >
> > > > : undefined reference to `usecs_to_cycles'
> > > > make: *** [.tmp_vmlinux1] Error 1
> > >
> > > Which ARM sub arch ?
> > 
> > sub arch AT91 -- (Atmel AT91RM9200 processor).
> 
> It lacks support for the generic timeofday and clock event layers, which
> causes the compile breakage.

 I am working on Renesas SuperH platforms.
 I faced the similar compile errors
 because 2.6.21.X in SH does not support GENERIC_TIME yet.
 I made a workaround patch. Is this correct?

 Thanks,
---
 Katsuya Matsubara @ Igel Co., Ltd
 matsu@igel.co.jp
 
 diff -cr linux-2.6.21.5-rt14/kernel/hrtimer.c linux-2.6.21.5-rt14-nogt/kernel/hrtimer.c
---
 kernel/hrtimer.c          |    4 ++++
 kernel/time.c             |    4 ++++
 kernel/time/ntp.c         |    4 ++++
 kernel/time/timekeeping.c |    2 ++
 kernel/timer.c            |    4 ++++
 5 files changed, 18 insertions(+)

Index: linux-rt.q/kernel/hrtimer.c
===================================================================
--- linux-rt.q.orig/kernel/hrtimer.c
+++ linux-rt.q/kernel/hrtimer.c
@@ -120,9 +120,13 @@ void ktime_get_ts(struct timespec *ts)
 
 	do {
 		seq = read_seqbegin(&xtime_lock);
+#ifdef CONFIG_GENERIC_TIME
 		*ts = xtime;
 		nsecs = __get_nsec_offset();
 		timespec_add_ns(ts, nsecs);
+#else
+		getnstimeofday(ts);
+#endif
 		tomono = wall_to_monotonic;
 
 	} while (read_seqretry(&xtime_lock, seq));
Index: linux-rt.q/kernel/time.c
===================================================================
--- linux-rt.q.orig/kernel/time.c
+++ linux-rt.q/kernel/time.c
@@ -137,7 +137,9 @@ static inline void warp_clock(void)
 	wall_to_monotonic.tv_sec -= sys_tz.tz_minuteswest * 60;
 	xtime.tv_sec += sys_tz.tz_minuteswest * 60;
 	time_interpolator_reset();
+#ifdef CONFIG_GENERIC_TIME
 	warp_check_clock_was_changed();
+#endif
 	write_sequnlock_irq(&xtime_lock);
 	clock_was_set();
 }
@@ -352,7 +354,9 @@ int do_settimeofday (struct timespec *tv
 		time_esterror = NTP_PHASE_LIMIT;
 		time_interpolator_reset();
 	}
+#ifdef CONFIG_GENERIC_TIME
 	warp_check_clock_was_changed();
+#endif
 	write_sequnlock_irq(&xtime_lock);
 	clock_was_set();
 	return 0;
Index: linux-rt.q/kernel/time/ntp.c
===================================================================
--- linux-rt.q.orig/kernel/time/ntp.c
+++ linux-rt.q/kernel/time/ntp.c
@@ -123,7 +123,9 @@ void second_overflow(void)
 			 */
 			time_interpolator_update(-NSEC_PER_SEC);
 			time_state = TIME_OOP;
+#ifdef CONFIG_GENERIC_TIME
 			warp_check_clock_was_changed();
+#endif
 			printk(KERN_NOTICE "Clock: inserting leap second "
 					"23:59:60 UTC\n");
 		}
@@ -138,7 +140,9 @@ void second_overflow(void)
 			 */
 			time_interpolator_update(NSEC_PER_SEC);
 			time_state = TIME_WAIT;
+#ifdef CONFIG_GENERIC_TIME
 			warp_check_clock_was_changed();
+#endif
 			printk(KERN_NOTICE "Clock: deleting leap second "
 					"23:59:59 UTC\n");
 		}
Index: linux-rt.q/kernel/time/timekeeping.c
===================================================================
--- linux-rt.q.orig/kernel/time/timekeeping.c
+++ linux-rt.q/kernel/time/timekeeping.c
@@ -352,7 +352,9 @@ static int timekeeping_resume(struct sys
 	clock->cycle_accumulated = 0;
 	clock->error = 0;
 	timekeeping_suspended = 0;
+#ifdef CONFIG_GENERIC_TIME
 	warp_check_clock_was_changed();
+#endif
 	write_sequnlock_irqrestore(&xtime_lock, flags);
 
 	touch_softlockup_watchdog();
Index: linux-rt.q/kernel/timer.c
===================================================================
--- linux-rt.q.orig/kernel/timer.c
+++ linux-rt.q/kernel/timer.c
@@ -1225,9 +1225,13 @@ int do_sysinfo(struct sysinfo *info)
 		 * too.
 		 */
 
+#ifdef CONFIG_GENERIC_TIME
 		tp = xtime;
 		nsecs = __get_nsec_offset();
 		timespec_add_ns(&tp, nsecs);
+#else
+		getnstimeofday(&tp);
+#endif
 
 		tp.tv_sec += wall_to_monotonic.tv_sec;
 		tp.tv_nsec += wall_to_monotonic.tv_nsec;
