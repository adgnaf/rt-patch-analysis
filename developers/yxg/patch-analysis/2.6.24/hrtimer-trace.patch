 include/linux/hrtimer.h   |    6 ++++++
 kernel/hrtimer.c          |    5 +++++
 kernel/time/clockevents.c |    4 ++++
 3 files changed, 15 insertions(+)

Index: linux-2.6.24-rt1/include/linux/hrtimer.h
===================================================================
--- linux-2.6.24-rt1.orig/include/linux/hrtimer.h	2008-01-25 15:07:10.000000000 -0500
+++ linux-2.6.24-rt1/include/linux/hrtimer.h	2008-01-25 15:07:21.000000000 -0500
@@ -253,6 +253,12 @@ static inline ktime_t hrtimer_cb_get_tim
 extern ktime_t ktime_get(void);
 extern ktime_t ktime_get_real(void);
 
+# if (BITS_PER_LONG == 64) || defined(CONFIG_KTIME_SCALAR)
+#  define hrtimer_trace(a,b)		trace_special_u64((a).tv64,b)
+# else
+#  define hrtimer_trace(a,b)		trace_special((a).tv.sec,(a).tv.nsec,b)
+# endif
+
 /* Exported timer functions: */
 
 /* Initialize timers: */
Index: linux-2.6.24-rt1/kernel/hrtimer.c
===================================================================
--- linux-2.6.24-rt1.orig/kernel/hrtimer.c	2008-01-25 15:07:10.000000000 -0500
+++ linux-2.6.24-rt1/kernel/hrtimer.c	2008-01-25 15:07:21.000000000 -0500
@@ -730,6 +730,8 @@ static void enqueue_hrtimer(struct hrtim
 	struct hrtimer *entry;
 	int leftmost = 1;
 
+	hrtimer_trace(timer->expires, (unsigned long) timer);
+
 	/*
 	 * Find the right place in the rbtree:
 	 */
@@ -1071,6 +1073,7 @@ void hrtimer_interrupt(struct clock_even
 
  retry:
 	now = ktime_get();
+	hrtimer_trace(now, 0);
 
 	expires_next.tv64 = KTIME_MAX;
 
@@ -1099,6 +1102,8 @@ void hrtimer_interrupt(struct clock_even
 				break;
 			}
 
+			hrtimer_trace(timer->expires, (unsigned long) timer);
+
 			/* Move softirq callbacks to the pending list */
 			if (timer->cb_mode == HRTIMER_CB_SOFTIRQ) {
 				__remove_hrtimer(timer, base,
Index: linux-2.6.24-rt1/kernel/time/clockevents.c
===================================================================
--- linux-2.6.24-rt1.orig/kernel/time/clockevents.c	2008-01-25 15:06:42.000000000 -0500
+++ linux-2.6.24-rt1/kernel/time/clockevents.c	2008-01-25 15:07:21.000000000 -0500
@@ -12,12 +12,14 @@
  */
 
 #include <linux/clockchips.h>
+#include <linux/interrupt.h>
 #include <linux/hrtimer.h>
 #include <linux/init.h>
 #include <linux/module.h>
 #include <linux/notifier.h>
 #include <linux/smp.h>
 #include <linux/sysdev.h>
+#include <linux/sched.h>
 
 /* The registered clock event devices */
 static LIST_HEAD(clockevent_devices);
@@ -85,6 +87,8 @@ int clockevents_program_event(struct clo
 
 	delta = ktime_to_ns(ktime_sub(expires, now));
 
+	hrtimer_trace(expires, (unsigned long) delta);
+
 	if (delta <= 0)
 		return -ETIME;
 
