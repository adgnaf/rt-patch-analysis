Signed-off-by: Steven Rostedt <srostedt@redhat.com>

---
 arch/x86/mm/fault_32.c |    4 ++--
 arch/x86/mm/init_32.c  |    2 +-
 2 files changed, 3 insertions(+), 3 deletions(-)

Index: linux-2.6.24-rt1/arch/x86/mm/fault_32.c
===================================================================
--- linux-2.6.24-rt1.orig/arch/x86/mm/fault_32.c	2008-01-25 15:06:51.000000000 -0500
+++ linux-2.6.24-rt1/arch/x86/mm/fault_32.c	2008-01-25 15:06:54.000000000 -0500
@@ -293,8 +293,8 @@ int show_unhandled_signals = 1;
  *	bit 3 == 1 means use of reserved bit detected
  *	bit 4 == 1 means fault was an instruction fetch
  */
-fastcall void __kprobes do_page_fault(struct pt_regs *regs,
-				      unsigned long error_code)
+notrace fastcall void __kprobes do_page_fault(struct pt_regs *regs,
+					      unsigned long error_code)
 {
 	struct task_struct *tsk;
 	struct mm_struct *mm;
Index: linux-2.6.24-rt1/arch/x86/mm/init_32.c
===================================================================
--- linux-2.6.24-rt1.orig/arch/x86/mm/init_32.c	2008-01-25 15:06:51.000000000 -0500
+++ linux-2.6.24-rt1/arch/x86/mm/init_32.c	2008-01-25 15:06:54.000000000 -0500
@@ -200,7 +200,7 @@ static inline int page_kills_ppro(unsign
 	return 0;
 }
 
-int page_is_ram(unsigned long pagenr)
+notrace int page_is_ram(unsigned long pagenr)
 {
 	int i;
 	unsigned long addr, end;
