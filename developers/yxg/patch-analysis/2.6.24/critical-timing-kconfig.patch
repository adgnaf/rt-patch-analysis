From ce@ceag.ch Wed Oct 24 20:47:08 2007
Date: Wed, 24 Oct 2007 22:54:56 +0200
From: Carsten Emde <ce@ceag.ch>
To: Thomas Gleixner <tglx@linutronix.de>
Subject: [PATCH] lib/Kconfig.debug
Resent-Date: Wed, 24 Oct 2007 23:25:59 +0200 (CEST)
Resent-From: Thomas Gleixner <tglx@linutronix.de>
Resent-To: Steven Rostedt <rostedt@goodmis.org>
Resent-Subject: [PATCH] lib/Kconfig.debug

Hi Thomas,

1. Help corrections:  /proc/sys/kernel/preempt_max_latency is set to 0 
and started by default, if WAKEUP_LATENCY_HIST or CRITICAL_LATENCY_HIST 
is set.

2. Proc file entry /proc/sys/kernel/preempt_max_latency is also needed, 
if WAKEUP_TIMING is selected.

	Carsten.

    [ Part 2: "Attached Text" ]

---
 lib/Kconfig.debug |   14 ++++++++++----
 1 file changed, 10 insertions(+), 4 deletions(-)

Index: linux-2.6.24-rt1/lib/Kconfig.debug
===================================================================
--- linux-2.6.24-rt1.orig/lib/Kconfig.debug	2008-01-25 15:07:52.000000000 -0500
+++ linux-2.6.24-rt1/lib/Kconfig.debug	2008-01-25 15:08:28.000000000 -0500
@@ -396,7 +396,9 @@ config WAKEUP_TIMING
 	  accuracy.
 
 	  The default measurement method is a maximum search, which is
-	  disabled by default and can be runtime (re-)started via:
+	  disabled by default, if neither WAKEUP_LATENCY_HIST nor
+	  CRITICAL_LATENCY_HIST is selected, and can be runtime (re-)started
+	  via:
 
 	      echo 0 > /proc/sys/kernel/preempt_max_latency
 
@@ -425,7 +427,9 @@ config CRITICAL_PREEMPT_TIMING
 	  sections, with microsecond accuracy.
 
 	  The default measurement method is a maximum search, which is
-	  disabled by default and can be runtime (re-)started via:
+	  disabled by default, if neither WAKEUP_LATENCY_HIST nor
+	  CRITICAL_LATENCY_HIST is selected, and can be runtime (re-)started
+	  via:
 
 	      echo 0 > /proc/sys/kernel/preempt_max_latency
 
@@ -443,7 +447,9 @@ config CRITICAL_IRQSOFF_TIMING
 	  sections, with microsecond accuracy.
 
 	  The default measurement method is a maximum search, which is
-	  disabled by default and can be runtime (re-)started via:
+	  disabled by default, if neither WAKEUP_LATENCY_HIST nor
+	  CRITICAL_LATENCY_HIST is selected, and can be runtime (re-)started
+	  via:
 
 	      echo 0 > /proc/sys/kernel/preempt_max_latency
 
@@ -503,7 +509,7 @@ config INTERRUPT_OFF_HIST
 config CRITICAL_TIMING
 	bool
 	default y
-	depends on CRITICAL_PREEMPT_TIMING || CRITICAL_IRQSOFF_TIMING
+	depends on CRITICAL_PREEMPT_TIMING || CRITICAL_IRQSOFF_TIMING || WAKEUP_TIMING
 
 config DEBUG_TRACE_IRQFLAGS
 	bool
