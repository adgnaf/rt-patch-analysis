From dwalker@mvista.com Wed Sep 26 22:22:57 2007
Date: Tue, 28 Aug 2007 14:37:56 -0700
From: Daniel Walker <dwalker@mvista.com>
To: mingo@elte.hu
Cc: mingo@redhat.com, linux-kernel@vger.kernel.org,
     linux-rt-users@vger.kernel.org
Subject: [PATCH -rt 8/8] stop critical timing in idle.

without this the idle routine still gets traced.. This is done already
for ACPI idle , but it should also be done for other idle routines.

Signed-off-by: Daniel Walker <dwalker@mvista.com>
 
---
 arch/x86/kernel/process_32.c |    9 +++++++++
 arch/x86/kernel/process_64.c |   10 ++++++++++
 2 files changed, 19 insertions(+)

Index: linux-2.6.24-rt1/arch/x86/kernel/process_32.c
===================================================================
--- linux-2.6.24-rt1.orig/arch/x86/kernel/process_32.c	2008-01-25 15:07:51.000000000 -0500
+++ linux-2.6.24-rt1/arch/x86/kernel/process_32.c	2008-01-25 15:08:23.000000000 -0500
@@ -195,8 +195,17 @@ void cpu_idle(void)
 			if (cpu_is_offline(cpu))
 				play_dead();
 
+			/*
+			 * We have irqs disabled here, so stop latency tracing
+			 * at this point and restart it after we return:
+			 */
+			stop_critical_timing();
+
 			__get_cpu_var(irq_stat).idle_timestamp = jiffies;
 			idle();
+
+ 			touch_critical_timing();
+
 		}
 		local_irq_disable();
 		trace_preempt_exit_idle();
Index: linux-2.6.24-rt1/arch/x86/kernel/process_64.c
===================================================================
--- linux-2.6.24-rt1.orig/arch/x86/kernel/process_64.c	2008-01-25 15:07:44.000000000 -0500
+++ linux-2.6.24-rt1/arch/x86/kernel/process_64.c	2008-01-25 15:08:23.000000000 -0500
@@ -232,8 +232,18 @@ void cpu_idle (void)
 			 * Otherwise, idle callbacks can misfire.
 			 */
 			local_irq_disable();
+
+			/*
+			 * We have irqs disabled here, so stop latency tracing
+			 * at this point and restart it after we return:
+			 */
+			stop_critical_timing();
+
 			enter_idle();
 			idle();
+
+			touch_critical_timing();
+
 			/* In many cases the interrupt that ended idle
 			   has already called exit_idle. But some idle
 			   loops can be woken up without interrupt. */
