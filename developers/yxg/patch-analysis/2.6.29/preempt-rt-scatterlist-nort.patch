Subject: preempt-rt-scatterlist-nort.patch
From: Thomas Gleixner <tglx@linutronix.de>
Date: Mon, 16 Feb 2009 23:14:40 +0100

Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
---
 lib/scatterlist.c |    7 ++++---
 1 file changed, 4 insertions(+), 3 deletions(-)

Index: linux-2.6-tip/lib/scatterlist.c
===================================================================
--- linux-2.6-tip.orig/lib/scatterlist.c
+++ linux-2.6-tip/lib/scatterlist.c
@@ -9,6 +9,7 @@
 #include <linux/module.h>
 #include <linux/scatterlist.h>
 #include <linux/highmem.h>
+#include <linux/interrupt.h>
 
 /**
  * sg_next - return the next scatterlist entry in a list
@@ -392,7 +393,7 @@ void sg_miter_stop(struct sg_mapping_ite
 		miter->__offset += miter->consumed;
 
 		if (miter->__flags & SG_MITER_ATOMIC) {
-			WARN_ON(!irqs_disabled());
+			WARN_ON_NONRT(!irqs_disabled());
 			kunmap_atomic(miter->addr, KM_BIO_SRC_IRQ);
 		} else
 			kunmap(miter->page);
@@ -426,7 +427,7 @@ static size_t sg_copy_buffer(struct scat
 
 	sg_miter_start(&miter, sgl, nents, SG_MITER_ATOMIC);
 
-	local_irq_save(flags);
+	local_irq_save_nort(flags);
 
 	while (sg_miter_next(&miter) && offset < buflen) {
 		unsigned int len;
@@ -445,7 +446,7 @@ static size_t sg_copy_buffer(struct scat
 
 	sg_miter_stop(&miter);
 
-	local_irq_restore(flags);
+	local_irq_restore_nort(flags);
 	return offset;
 }
 
