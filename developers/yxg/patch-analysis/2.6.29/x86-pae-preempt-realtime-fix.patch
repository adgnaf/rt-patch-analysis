Subject: x86-pae-preempt-realtime-fix.patch
From: Thomas Gleixner <tglx@linutronix.de>
Date: Mon, 23 Mar 2009 11:20:36 +0100

Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
---
 arch/x86/include/asm/pgtable-3level.h |    2 ++
 arch/x86/mm/pgtable.c                 |    2 ++
 2 files changed, 4 insertions(+)

Index: linux-2.6-tip/arch/x86/include/asm/pgtable-3level.h
===================================================================
--- linux-2.6-tip.orig/arch/x86/include/asm/pgtable-3level.h
+++ linux-2.6-tip/arch/x86/include/asm/pgtable-3level.h
@@ -71,6 +71,7 @@ static inline void pud_clear(pud_t *pudp
 {
 	unsigned long pgd;
 
+	preempt_disable();
 	set_pud(pudp, __pud(0));
 
 	/*
@@ -86,6 +87,7 @@ static inline void pud_clear(pud_t *pudp
 	if (__pa(pudp) >= pgd && __pa(pudp) <
 	    (pgd + sizeof(pgd_t)*PTRS_PER_PGD))
 		write_cr3(pgd);
+	preempt_enable();
 }
 
 #ifdef CONFIG_SMP
Index: linux-2.6-tip/arch/x86/mm/pgtable.c
===================================================================
--- linux-2.6-tip.orig/arch/x86/mm/pgtable.c
+++ linux-2.6-tip/arch/x86/mm/pgtable.c
@@ -132,6 +132,7 @@ void pud_populate(struct mm_struct *mm, 
 	   reserved at the pmd (PDPT) level. */
 	set_pud(pudp, __pud(__pa(pmd) | _PAGE_PRESENT));
 
+	preempt_disable();
 	/*
 	 * According to Intel App note "TLBs, Paging-Structure Caches,
 	 * and Their Invalidation", April 2007, document 317080-001,
@@ -140,6 +141,7 @@ void pud_populate(struct mm_struct *mm, 
 	 */
 	if (mm == current->active_mm)
 		write_cr3(read_cr3());
+	preempt_enable();
 }
 #else  /* !CONFIG_X86_PAE */
 
