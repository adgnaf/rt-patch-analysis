Subject: preempt: realtime ide
From: Ingo Molnar <mingo@elte.hu>
Date: Wed Feb 04 00:02:50 CET 2009

Signed-off-by: Ingo Molnar <mingo@elte.hu>
---
 drivers/ide/alim15x3.c     |   12 ++++++------
 drivers/ide/hpt366.c       |    4 ++--
 drivers/ide/ide-io.c       |    2 +-
 drivers/ide/ide-iops.c     |   20 ++++++++++----------
 drivers/ide/ide-probe.c    |    6 +++---
 drivers/ide/ide-taskfile.c |    6 +++---
 6 files changed, 25 insertions(+), 25 deletions(-)

Index: linux-2.6-tip/drivers/ide/alim15x3.c
===================================================================
--- linux-2.6-tip.orig/drivers/ide/alim15x3.c
+++ linux-2.6-tip/drivers/ide/alim15x3.c
@@ -90,7 +90,7 @@ static void ali_set_pio_mode(ide_drive_t
 		if (r_clc >= 16)
 			r_clc = 0;
 	}
-	local_irq_save(flags);
+	local_irq_save_nort(flags);
 	
 	/* 
 	 * PIO mode => ATA FIFO on, ATAPI FIFO off
@@ -112,7 +112,7 @@ static void ali_set_pio_mode(ide_drive_t
 	
 	pci_write_config_byte(dev, port, s_clc);
 	pci_write_config_byte(dev, port + unit + 2, (a_clc << 4) | r_clc);
-	local_irq_restore(flags);
+	local_irq_restore_nort(flags);
 }
 
 /**
@@ -222,7 +222,7 @@ static unsigned int init_chipset_ali15x3
 
 	isa_dev = pci_get_device(PCI_VENDOR_ID_AL, PCI_DEVICE_ID_AL_M1533, NULL);
 
-	local_irq_save(flags);
+	local_irq_save_nort(flags);
 
 	if (m5229_revision < 0xC2) {
 		/*
@@ -313,7 +313,7 @@ out:
 	}
 	pci_dev_put(north);
 	pci_dev_put(isa_dev);
-	local_irq_restore(flags);
+	local_irq_restore_nort(flags);
 	return 0;
 }
 
@@ -375,7 +375,7 @@ static u8 ali_cable_detect(ide_hwif_t *h
 	unsigned long flags;
 	u8 cbl = ATA_CBL_PATA40, tmpbyte;
 
-	local_irq_save(flags);
+	local_irq_save_nort(flags);
 
 	if (m5229_revision >= 0xC2) {
 		/*
@@ -396,7 +396,7 @@ static u8 ali_cable_detect(ide_hwif_t *h
 		}
 	}
 
-	local_irq_restore(flags);
+	local_irq_restore_nort(flags);
 
 	return cbl;
 }
Index: linux-2.6-tip/drivers/ide/hpt366.c
===================================================================
--- linux-2.6-tip.orig/drivers/ide/hpt366.c
+++ linux-2.6-tip/drivers/ide/hpt366.c
@@ -1328,7 +1328,7 @@ static int __devinit init_dma_hpt366(ide
 
 	dma_old = inb(base + 2);
 
-	local_irq_save(flags);
+	local_irq_save_nort(flags);
 
 	dma_new = dma_old;
 	pci_read_config_byte(dev, hwif->channel ? 0x4b : 0x43, &masterdma);
@@ -1339,7 +1339,7 @@ static int __devinit init_dma_hpt366(ide
 	if (dma_new != dma_old)
 		outb(dma_new, base + 2);
 
-	local_irq_restore(flags);
+	local_irq_restore_nort(flags);
 
 	printk(KERN_INFO "    %s: BM-DMA at 0x%04lx-0x%04lx\n",
 			 hwif->name, base, base + 7);
Index: linux-2.6-tip/drivers/ide/ide-io.c
===================================================================
--- linux-2.6-tip.orig/drivers/ide/ide-io.c
+++ linux-2.6-tip/drivers/ide/ide-io.c
@@ -949,7 +949,7 @@ void ide_timer_expiry (unsigned long dat
 		/* disable_irq_nosync ?? */
 		disable_irq(hwif->irq);
 		/* local CPU only, as if we were handling an interrupt */
-		local_irq_disable();
+		local_irq_disable_nort();
 		if (hwif->polling) {
 			startstop = handler(drive);
 		} else if (drive_is_ready(drive)) {
Index: linux-2.6-tip/drivers/ide/ide-iops.c
===================================================================
--- linux-2.6-tip.orig/drivers/ide/ide-iops.c
+++ linux-2.6-tip/drivers/ide/ide-iops.c
@@ -275,7 +275,7 @@ void ide_input_data(ide_drive_t *drive, 
 		unsigned long uninitialized_var(flags);
 
 		if ((io_32bit & 2) && !mmio) {
-			local_irq_save(flags);
+			local_irq_save_nort(flags);
 			ata_vlb_sync(io_ports->nsect_addr);
 		}
 
@@ -285,7 +285,7 @@ void ide_input_data(ide_drive_t *drive, 
 			insl(data_addr, buf, len / 4);
 
 		if ((io_32bit & 2) && !mmio)
-			local_irq_restore(flags);
+			local_irq_restore_nort(flags);
 
 		if ((len & 3) >= 2) {
 			if (mmio)
@@ -321,7 +321,7 @@ void ide_output_data(ide_drive_t *drive,
 		unsigned long uninitialized_var(flags);
 
 		if ((io_32bit & 2) && !mmio) {
-			local_irq_save(flags);
+			local_irq_save_nort(flags);
 			ata_vlb_sync(io_ports->nsect_addr);
 		}
 
@@ -331,7 +331,7 @@ void ide_output_data(ide_drive_t *drive,
 			outsl(data_addr, buf, len / 4);
 
 		if ((io_32bit & 2) && !mmio)
-			local_irq_restore(flags);
+			local_irq_restore_nort(flags);
 
 		if ((len & 3) >= 2) {
 			if (mmio)
@@ -509,12 +509,12 @@ static int __ide_wait_stat(ide_drive_t *
 				if ((stat & ATA_BUSY) == 0)
 					break;
 
-				local_irq_restore(flags);
+				local_irq_restore_nort(flags);
 				*rstat = stat;
 				return -EBUSY;
 			}
 		}
-		local_irq_restore(flags);
+		local_irq_restore_nort(flags);
 	}
 	/*
 	 * Allow status to settle, then read it again.
@@ -681,17 +681,17 @@ int ide_driveid_update(ide_drive_t *driv
 		printk("%s: CHECK for good STATUS\n", drive->name);
 		return 0;
 	}
-	local_irq_save(flags);
+	local_irq_save_nort(flags);
 	SELECT_MASK(drive, 0);
 	id = kmalloc(SECTOR_SIZE, GFP_ATOMIC);
 	if (!id) {
-		local_irq_restore(flags);
+		local_irq_restore_nort(flags);
 		return 0;
 	}
 	tp_ops->input_data(drive, NULL, id, SECTOR_SIZE);
 	(void)tp_ops->read_status(hwif);	/* clear drive IRQ */
-	local_irq_enable();
-	local_irq_restore(flags);
+	local_irq_enable_nort();
+	local_irq_restore_nort(flags);
 	ide_fix_driveid(id);
 
 	drive->id[ATA_ID_UDMA_MODES]  = id[ATA_ID_UDMA_MODES];
Index: linux-2.6-tip/drivers/ide/ide-probe.c
===================================================================
--- linux-2.6-tip.orig/drivers/ide/ide-probe.c
+++ linux-2.6-tip/drivers/ide/ide-probe.c
@@ -196,10 +196,10 @@ static void do_identify(ide_drive_t *dri
 	int bswap = 1;
 
 	/* local CPU only; some systems need this */
-	local_irq_save(flags);
+	local_irq_save_nort(flags);
 	/* read 512 bytes of id info */
 	hwif->tp_ops->input_data(drive, NULL, id, SECTOR_SIZE);
-	local_irq_restore(flags);
+	local_irq_restore_nort(flags);
 
 	drive->dev_flags |= IDE_DFLAG_ID_READ;
 #ifdef DEBUG
@@ -813,7 +813,7 @@ static int ide_probe_port(ide_hwif_t *hw
 			rc = 0;
 	}
 
-	local_irq_restore(flags);
+	local_irq_restore_nort(flags);
 
 	/*
 	 * Use cached IRQ number. It might be (and is...) changed by probe
Index: linux-2.6-tip/drivers/ide/ide-taskfile.c
===================================================================
--- linux-2.6-tip.orig/drivers/ide/ide-taskfile.c
+++ linux-2.6-tip/drivers/ide/ide-taskfile.c
@@ -219,7 +219,7 @@ static void ide_pio_sector(ide_drive_t *
 	offset %= PAGE_SIZE;
 
 #ifdef CONFIG_HIGHMEM
-	local_irq_save(flags);
+	local_irq_save_nort(flags);
 #endif
 	buf = kmap_atomic(page, KM_BIO_SRC_IRQ) + offset;
 
@@ -239,7 +239,7 @@ static void ide_pio_sector(ide_drive_t *
 
 	kunmap_atomic(buf, KM_BIO_SRC_IRQ);
 #ifdef CONFIG_HIGHMEM
-	local_irq_restore(flags);
+	local_irq_restore_nort(flags);
 #endif
 }
 
@@ -430,7 +430,7 @@ static ide_startstop_t pre_task_out_intr
 	}
 
 	if ((drive->dev_flags & IDE_DFLAG_UNMASK) == 0)
-		local_irq_disable();
+		local_irq_disable_nort();
 
 	ide_set_handler(drive, &task_out_intr, WAIT_WORSTCASE, NULL);
 	ide_pio_datablock(drive, rq, 1);
