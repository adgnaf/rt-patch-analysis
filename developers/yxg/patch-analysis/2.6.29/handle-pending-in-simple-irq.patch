Subject: handle IRQ_PENDING for simple irq handler
From: Steven Rostedt <srostedt@redhat.com>

With the IO-APIC pcix hack (level=>edge masking), we can receive
interrupts while masked. But these interrupts might be missed.

Also, normal "simple" interrupts might be missed too on leaving of
thread handler.

Signed-off-by: Steven Rostedt <srostedt@redhat.com>

Signed-off-by: Ingo Molnar <mingo@elte.hu>
---
 kernel/irq/manage.c |    7 +++++--
 1 file changed, 5 insertions(+), 2 deletions(-)

Index: linux-2.6-tip/kernel/irq/manage.c
===================================================================
--- linux-2.6-tip.orig/kernel/irq/manage.c
+++ linux-2.6-tip/kernel/irq/manage.c
@@ -839,14 +839,17 @@ static void thread_simple_irq(irq_desc_t
 	unsigned int irq = desc - irq_desc;
 	irqreturn_t action_ret;
 
-	if (action && !desc->depth) {
+	do {
+		if (!action || desc->depth)
+			break;
+		desc->status &= ~IRQ_PENDING;
 		spin_unlock(&desc->lock);
 		action_ret = handle_IRQ_event(irq, action);
 		cond_resched_hardirq_context();
 		spin_lock_irq(&desc->lock);
 		if (!noirqdebug)
 			note_interrupt(irq, desc, action_ret);
-	}
+	} while (desc->status & IRQ_PENDING);
 	desc->status &= ~IRQ_INPROGRESS;
 }
 
