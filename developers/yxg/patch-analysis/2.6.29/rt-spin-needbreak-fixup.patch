Subject: rt-spin-needbreak-fixup.patch
From: Thomas Gleixner <tglx@linutronix.de>
Date: Wed, 18 Mar 2009 12:10:53 +0100

Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
---
 include/linux/sched.h |    5 ++++-
 kernel/sched.c        |    7 +++----
 2 files changed, 7 insertions(+), 5 deletions(-)

Index: linux-2.6-tip/include/linux/sched.h
===================================================================
--- linux-2.6-tip.orig/include/linux/sched.h
+++ linux-2.6-tip/include/linux/sched.h
@@ -2391,7 +2391,10 @@ static inline void thread_group_cputime_
 #ifdef CONFIG_PREEMPT_RT
 static inline int __spin_needbreak(spinlock_t *lock)
 {
-	return lock->break_lock;
+	struct task_struct *tsk = current;
+
+	/* break if we are priority boosted */
+	return tsk->prio < tsk->normal_prio;
 }
 #else
 static inline int __spin_needbreak(spinlock_t *lock)
Index: linux-2.6-tip/kernel/sched.c
===================================================================
--- linux-2.6-tip.orig/kernel/sched.c
+++ linux-2.6-tip/kernel/sched.c
@@ -6611,15 +6611,14 @@ EXPORT_SYMBOL(__cond_resched_raw_spinloc
 
 int __cond_resched_spinlock(spinlock_t *lock)
 {
-#if (defined(CONFIG_SMP) && defined(CONFIG_PREEMPT)) || defined(CONFIG_PREEMPT_RT)
-	if (lock->break_lock) {
-		lock->break_lock = 0;
+	int resched = need_resched() && system_state == SYSTEM_RUNNING;
+
+	if (spin_needbreak(lock) || resched) {
 		spin_unlock_no_resched(lock);
 		__cond_resched();
 		spin_lock(lock);
 		return 1;
 	}
-#endif
 	return 0;
 }
 EXPORT_SYMBOL(__cond_resched_spinlock);
