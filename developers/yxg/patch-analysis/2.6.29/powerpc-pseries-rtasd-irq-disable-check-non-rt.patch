Subject: powerpc-pseries-rtasd-irq-disable-check-non-rt.patch
From: Thomas Gleixner <tglx@linutronix.de>
Date: Mon, 23 Mar 2009 22:58:12 +0100

Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
---
 arch/powerpc/platforms/pseries/rtasd.c |    8 ++++----
 include/asm-generic/bug.h              |    2 ++
 2 files changed, 6 insertions(+), 4 deletions(-)

Index: linux-2.6-tip/arch/powerpc/platforms/pseries/rtasd.c
===================================================================
--- linux-2.6-tip.orig/arch/powerpc/platforms/pseries/rtasd.c
+++ linux-2.6-tip/arch/powerpc/platforms/pseries/rtasd.c
@@ -208,7 +208,7 @@ void pSeries_log_error(char *buf, unsign
 		break;
 	case ERR_TYPE_KERNEL_PANIC:
 	default:
-		WARN_ON_ONCE(!irqs_disabled()); /* @@@ DEBUG @@@ */
+		WARN_ON_ONCE_NONRT(!irqs_disabled()); /* @@@ DEBUG @@@ */
 		spin_unlock_irqrestore(&rtasd_log_lock, s);
 		return;
 	}
@@ -228,7 +228,7 @@ void pSeries_log_error(char *buf, unsign
 	/* Check to see if we need to or have stopped logging */
 	if (fatal || !logging_enabled) {
 		logging_enabled = 0;
-		WARN_ON_ONCE(!irqs_disabled()); /* @@@ DEBUG @@@ */
+		WARN_ON_ONCE_NONRT(!irqs_disabled()); /* @@@ DEBUG @@@ */
 		spin_unlock_irqrestore(&rtasd_log_lock, s);
 		return;
 	}
@@ -251,13 +251,13 @@ void pSeries_log_error(char *buf, unsign
 		else
 			rtas_log_start += 1;
 
-		WARN_ON_ONCE(!irqs_disabled()); /* @@@ DEBUG @@@ */
+		WARN_ON_ONCE_NONRT(!irqs_disabled()); /* @@@ DEBUG @@@ */
 		spin_unlock_irqrestore(&rtasd_log_lock, s);
 		wake_up_interruptible(&rtas_log_wait);
 		break;
 	case ERR_TYPE_KERNEL_PANIC:
 	default:
-		WARN_ON_ONCE(!irqs_disabled()); /* @@@ DEBUG @@@ */
+		WARN_ON_ONCE_NONRT(!irqs_disabled()); /* @@@ DEBUG @@@ */
 		spin_unlock_irqrestore(&rtasd_log_lock, s);
 		return;
 	}
Index: linux-2.6-tip/include/asm-generic/bug.h
===================================================================
--- linux-2.6-tip.orig/include/asm-generic/bug.h
+++ linux-2.6-tip/include/asm-generic/bug.h
@@ -148,11 +148,13 @@ __WARN(int condition, const char *fmt, .
 # define BUG_ON_NONRT(c)		do { } while (0)
 # define WARN_ON_RT(condition)		WARN_ON(condition)
 # define WARN_ON_NONRT(condition)	do { } while (0)
+# define WARN_ON_ONCE_NONRT(condition)	do { } while (0)
 #else
 # define BUG_ON_RT(c)			do { } while (0)
 # define BUG_ON_NONRT(c)		BUG_ON(c)
 # define WARN_ON_RT(condition)		do { } while (0)
 # define WARN_ON_NONRT(condition)	WARN_ON(condition)
+# define WARN_ON_ONCE_NONRT(condition)	WARN_ON_ONCE(condition)
 #endif
 
 #endif
