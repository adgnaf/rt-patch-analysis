Subject: Fix plist initialisation for CONFIG_DEBUG_PI_LIST
From: Jan Kiszka <jan.kiszka@siemens.com>
Date: Fri, 26 Oct 2007 17:38:19 +0200

    [ The following text is in the "ISO-8859-15" character set. ]
    [ Your display is set for the "iso-8859-1" character set.  ]
    [ Some special characters may be displayed incorrectly. ]

PLIST_NODE_INIT (once used, only in -rt ATM) will fail when
CONFIG_DEBUG_PI_LIST is enabled as it then generates a &NULL
statement. This patch fixes the issue indirectly by turning
the _lock argument of PLIST_HEAD_INIT into a pointer and
adopting its users.

Signed-off-by: Jan Kiszka <jan.kiszka@siemens.com>

Signed-off-by: Ingo Molnar <mingo@elte.hu>
---
 include/linux/plist.h   |    4 ++--
 include/linux/rtmutex.h |    4 ++--
 2 files changed, 4 insertions(+), 4 deletions(-)

Index: linux-2.6-tip/include/linux/plist.h
===================================================================
--- linux-2.6-tip.orig/include/linux/plist.h
+++ linux-2.6-tip/include/linux/plist.h
@@ -103,12 +103,12 @@ struct plist_node {
 /**
  * PLIST_HEAD_INIT - static struct plist_head initializer
  * @head:	struct plist_head variable name
- * @_lock:	lock to initialize for this list
+ * @_lock:	lock * to initialize for this list
  */
 #define PLIST_HEAD_INIT(head, _lock)			\
 {							\
         _PLIST_HEAD_INIT(head),                         \
-	PLIST_HEAD_LOCK_INIT(&(_lock))			\
+	PLIST_HEAD_LOCK_INIT(_lock)			\
 }
 
 /**
Index: linux-2.6-tip/include/linux/rtmutex.h
===================================================================
--- linux-2.6-tip.orig/include/linux/rtmutex.h
+++ linux-2.6-tip/include/linux/rtmutex.h
@@ -64,7 +64,7 @@ struct hrtimer_sleeper;
 
 #define __RT_MUTEX_INITIALIZER(mutexname) \
 	{ .wait_lock = RAW_SPIN_LOCK_UNLOCKED(mutexname) \
-	, .wait_list = PLIST_HEAD_INIT(mutexname.wait_list, mutexname.wait_lock) \
+	, .wait_list = PLIST_HEAD_INIT(mutexname.wait_list, &mutexname.wait_lock) \
 	, .owner = NULL \
 	__DEBUG_RT_MUTEX_INITIALIZER(mutexname)}
 
@@ -100,7 +100,7 @@ extern void rt_mutex_unlock(struct rt_mu
 
 #ifdef CONFIG_RT_MUTEXES
 # define INIT_RT_MUTEXES(tsk)						\
-	.pi_waiters	= PLIST_HEAD_INIT(tsk.pi_waiters, tsk.pi_lock),	\
+	.pi_waiters = PLIST_HEAD_INIT(tsk.pi_waiters, &tsk.pi_lock),	\
 	INIT_RT_MUTEX_DEBUG(tsk)
 #else
 # define INIT_RT_MUTEXES(tsk)
